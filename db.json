{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/robots.txt","path":"robots.txt","modified":0,"renderable":0},{"_id":"source/README.md","path":"README.md","modified":0,"renderable":0},{"_id":"source/images/alipay-reward.JPG","path":"images/alipay-reward.JPG","modified":0,"renderable":0},{"_id":"source/images/avatar.ico","path":"images/avatar.ico","modified":0,"renderable":0},{"_id":"source/images/favicon.ico","path":"images/favicon.ico","modified":0,"renderable":0},{"_id":"source/images/wechat-reward.JPG","path":"images/wechat-reward.JPG","modified":0,"renderable":0},{"_id":"source/images/favicon1.ico","path":"images/favicon1.ico","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/robots.txt","hash":"5ed36b43ab4dad8178a80936e00155b2ad1206f7","modified":1497054913968},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1497270348567},{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1497270348565},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1497270348569},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1497270348567},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1497270348566},{"_id":"themes/next/.javascript_ignore","hash":"74b54cf920cbbf4038a68e54b7138af8b8f45588","modified":1497270348568},{"_id":"themes/next/.travis.yml","hash":"360f38044910e74bf628b0799e19db90718b2cbe","modified":1497270348571},{"_id":"themes/next/README.md","hash":"06aaf1241e9e1619956c86d8b1397a643840a9d1","modified":1497270348573},{"_id":"source/README.md","hash":"06aaf1241e9e1619956c86d8b1397a643840a9d1","modified":1497270348573},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1497270348570},{"_id":"themes/next/_config.yml","hash":"f3ce92bfd66cde746947d75e7aefd25ed7c11be9","modified":1497270348574},{"_id":"themes/next/README.en.md","hash":"953873fe2ee79bfc567b16dcdf8f91c1410444f8","modified":1497270348572},{"_id":"themes/next/package.json","hash":"a5c189d4c4e946e936d3b5e29e2d81ddaf03ff96","modified":1497270348678},{"_id":"themes/next/bower.json","hash":"936b9aed1934471bb74cdaacc3fb8031eb01fe23","modified":1497270348575},{"_id":"themes/next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1497270348575},{"_id":"source/_posts/bootstrap-datepicker.md","hash":"8ab584c4be093b67eef3281a20dfecd68ddd80ae","modified":1497270348555},{"_id":"source/_posts/import-big-sql.md","hash":"58e5a59c4161363fff70bde1c126522f41d21321","modified":1497270348557},{"_id":"source/_posts/css-html5-table.md","hash":"feb46230e48c7d14f8e7be13f178339fb29f2e3f","modified":1497270348556},{"_id":"source/_posts/markdown-tutorial.md","hash":"fa2b7ac370762e35a7a6cd13866c0421711f6c38","modified":1497270348559},{"_id":"source/_posts/hello-world.md","hash":"99b09f0386eb6dc9b511ec8915b138cc8117e7a0","modified":1497065001257},{"_id":"source/_posts/learn-python3-1min.md","hash":"a8c8a1ca9733e59e0547c599709359cede3619ac","modified":1497270348557},{"_id":"source/_posts/php-connect-sqlserver.md","hash":"13d0eff81c5759bd62eec5e6ce47b743f7defc8b","modified":1497270348559},{"_id":"source/about/index.md","hash":"6d5a5afad122cda5ef5a0dfe4495b930c3845788","modified":1497060321989},{"_id":"source/categories/index.md","hash":"73bf7020896f2b7d8c8222cb144900329130b5e3","modified":1497060341158},{"_id":"source/images/alipay-reward.JPG","hash":"66031be94bfeb22b383324f378e5ba918a1b948f","modified":1497062831477},{"_id":"source/_posts/start-django.md","hash":"9b687147526e2829286f1583997cc9a824bd704e","modified":1497270348560},{"_id":"source/images/avatar.ico","hash":"0bee0dc07812361a586379491248246917857ef9","modified":1497063951719},{"_id":"source/images/favicon.ico","hash":"20f34b417a1b3350f33ff94f23ab5939bcb5145f","modified":1497270348563},{"_id":"source/images/wechat-reward.JPG","hash":"c73ef44c36f44d69e055f98b0b908903cb40027f","modified":1497062819280},{"_id":"source/tags/index.md","hash":"7d5f68abe511cccd316fd498cc1610914bfb20cd","modified":1497060346854},{"_id":"source/images/favicon1.ico","hash":"6e7a6058e3e412ebc8d31bb6e4176510b2bc58e2","modified":1497270348564},{"_id":"source/_posts/ubuntu-server.md","hash":"87caeb4e7ee14b509e926b219d793d84f5be3a30","modified":1497270348561},{"_id":"themes/next/languages/de.yml","hash":"4be3e7d296d5592e0d111dfa6cbbff02602c972d","modified":1497270348576},{"_id":"themes/next/languages/default.yml","hash":"d912814caac150da1611c96843371a87714e52f9","modified":1497270348577},{"_id":"source/_posts/win10-.net-framwork.md","hash":"414fc91382444f2b73c40a4e885d58cbc65fa3da","modified":1497270348562},{"_id":"themes/next/languages/en.yml","hash":"b3ee45143bc014578db6b8ac0573f7c7b143a743","modified":1497270348578},{"_id":"themes/next/languages/fr-FR.yml","hash":"0d5bd8bbbeafb72506124ed35e7509debc753612","modified":1497270348578},{"_id":"themes/next/languages/ja.yml","hash":"1a608dc799c0f9c36b626bac6fe3404acb45b86d","modified":1497270348580},{"_id":"themes/next/languages/id.yml","hash":"c0848e93bf33a1333ff232905b6b392b1e056dd1","modified":1497270348579},{"_id":"themes/next/languages/pt.yml","hash":"943475a7d681f37ede579cd62da9c50568ca0f8d","modified":1497270348583},{"_id":"themes/next/languages/pt-BR.yml","hash":"cc8b5a67ec87b0d5aec6e253bab67ec3cfe3069c","modified":1497270348582},{"_id":"themes/next/languages/ko.yml","hash":"5c811514aef401317a9ec38b95679d6d2ef0ad42","modified":1497270348581},{"_id":"themes/next/languages/zh-Hans.yml","hash":"849ab42a01ee9495f2f1d9f2d441e0056f964426","modified":1497270348584},{"_id":"themes/next/languages/ru.yml","hash":"84d41a111e497236b2c1fa16e9b91668a1f37037","modified":1497270348583},{"_id":"themes/next/languages/zh-tw.yml","hash":"8ce0a32411de111ae39d08e4bc936767dacdeb08","modified":1497270348586},{"_id":"themes/next/languages/zh-hk.yml","hash":"b58c0d85daa4d62b0c9753a59de0739aa0120735","modified":1497270348585},{"_id":"themes/next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1497270348571},{"_id":"themes/next/layout/_layout.swig","hash":"8866e52503f1127957959ccbcf7a0106c190d413","modified":1497273715773},{"_id":"themes/next/layout/index.swig","hash":"4bf29f44ca9519a005671f2f2a79a48a148b435b","modified":1497270348674},{"_id":"themes/next/layout/page.swig","hash":"22ba721a9688d490fc66f360e5a319288b63b05a","modified":1497270348675},{"_id":"themes/next/layout/post.swig","hash":"182a99b1f6db0350106c6bb480fede0bbdb7e40f","modified":1497270348676},{"_id":"themes/next/layout/tag.swig","hash":"cc9878932580c890f8f3e569225e29bb37e25b49","modified":1497270348677},{"_id":"themes/next/scripts/merge-configs.js","hash":"3ce1be32bb77ee19da25e8dae7dc04e2afc46ca1","modified":1497270348679},{"_id":"themes/next/layout/schedule.swig","hash":"8086f1163b10460258ecbbbe48b057b22bb2f02e","modified":1497270348676},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1497270348680},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1497270348937},{"_id":"themes/next/layout/category.swig","hash":"f315f12651de8065fdad73b003da4335ef177173","modified":1497270348674},{"_id":"themes/next/layout/archive.swig","hash":"a1d1e91013baaaeb7deaf35c6d3975971ce38e02","modified":1497270348673},{"_id":"source/guestbook/index.md","hash":"81128e1e23275a7de82a2b0a78e77170da69e633","modified":1497061461315},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1497270348938},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1497270348938},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1497270348770},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1497270348596},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1497270348595},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"506feb56e9b1091187d2014742f63a17758df933","modified":1497270348599},{"_id":"themes/next/layout/_macro/post.swig","hash":"7e804a07cb53028d3c2895580505db61454a72e3","modified":1497270348601},{"_id":"themes/next/layout/_macro/reward.swig","hash":"b6cb171f0ed227b82b8f7601814af2df93f3a09a","modified":1497270348602},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"8c56dd26157cbc580ae41d97ac34b90ab48ced3f","modified":1497270348599},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1497270348619},{"_id":"themes/next/layout/_partials/comments.swig","hash":"5258c03149aa18e9abfeb8de10e435a406d9c924","modified":1497270348606},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1497270348620},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"4b029551ddb44c53f895e96cf8ff5ffbe02322fb","modified":1497270348603},{"_id":"themes/next/layout/_partials/footer.swig","hash":"540132f15ee0b926aa77408817766433ddf8273b","modified":1497270348606},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"c5cc0070ca7c9a8dbd4b09e0398db536c3cdbe8a","modified":1497270348605},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1497270348610},{"_id":"themes/next/layout/_partials/header.swig","hash":"d6bf1d1554d91eaf1bfc40ba8905ae81673e5f45","modified":1497270348610},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1497270348612},{"_id":"themes/next/layout/_partials/head.swig","hash":"2ce368e7ed935908484e8fe2ad364a60c19a2ca4","modified":1497270348607},{"_id":"themes/next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1497270348612},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1497270348663},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1497270348663},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1497270348665},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1497270348667},{"_id":"themes/next/scripts/tags/button.js","hash":"aaf71be6b483fca7a65cd6296c2cf1c2271c26a6","modified":1497270348681},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1497270348682},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1497270348684},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1497270348683},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"bcba2ff25cd7850ce6da322d8bd85a8dd00b5ceb","modified":1497270348685},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1497270348684},{"_id":"themes/next/scripts/tags/note.js","hash":"fc4958427ca7bdb47a7d830077f432ed824973e4","modified":1497270348687},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1497270348769},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1497270348664},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"53c894e6f3573c662dc4e4f7b5a6f1a32f1a8c94","modified":1497270348644},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1497270348666},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"16505f61f19ba65f629dfd033f14ee9abcf18756","modified":1497270348771},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1497270348784},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1497270348772},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1497270348785},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1497270348786},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1497270348788},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1497270348790},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1497270348787},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1497270348790},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1497270348789},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1497270348793},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1497270348641},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1497270348642},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1497270348745},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1497270348745},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1497270348747},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1497270348791},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1497270348767},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1497270348769},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1497270348792},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1497270348608},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1497270348643},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1497270348613},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1497270348615},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1497270348614},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1497270348616},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1497270348620},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1497270348617},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1497270348609},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1497270348646},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"7b11eac3a0685fa1ab2ab6ecff60afc4f15f0d16","modified":1497270348647},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"12684840de632eb16e53ffa863166306a756fd4f","modified":1497270348618},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1497270348647},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a79e7e0d809fcf407593dd7ed9e023db21c3cbd6","modified":1497270348648},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"441f1a1b4e2f652d3b975995bd9d44ff4866f057","modified":1497270348650},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1497270348646},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1497270348652},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"e495aed8fb36bf8015ddbd64366270a7debad2b0","modified":1497270348651},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1497270348653},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1497270348616},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1497270348649},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1497270348657},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1497270348654},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1497270348656},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"0399bbdc524ba50930cb6f8e2d5628ff682fc612","modified":1497270348659},{"_id":"themes/next/layout/_third-party/comments/gentie.swig","hash":"0f38f053841ef77cdce56a84cfbb4dd4c3329486","modified":1497270348658},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1497270348655},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"de95ec8920d1660680078451008f8bd69f14d082","modified":1497270348662},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"f893bd7ee6ffba40363fc47e826858d4bb2cd28a","modified":1497271914235},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"c75024151fc63220e7d01035d8a1aff9affdecc7","modified":1497270348661},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"a0f23e75a137d8c996c70e2059e0074f1e97a127","modified":1497270348746},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1497270348672},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"e55265c8a8a6ae0c3c08e3509de92ee62c3cb5f6","modified":1497270348767},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"531934ea21ef4dc9f0978512050f54834f0a6cff","modified":1497270348747},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"09534b68bd1a708729b3cfffe17737e3af457757","modified":1497270348768},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"0ec035e20d1f26bf553a79877180ba312bea885c","modified":1497270348796},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1497270348795},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1497270348797},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1497270348798},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1497270348796},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1497270348794},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1497270348802},{"_id":"themes/next/source/js/src/post-details.js","hash":"bfaf52b69aad96566aa21b785973441a2555b4ba","modified":1497270348800},{"_id":"themes/next/source/js/src/motion.js","hash":"ff9ea37d05c269e3a140c4ab448af03efc4bcc76","modified":1497270348799},{"_id":"themes/next/source/css/_variables/base.styl","hash":"5b86226f7e9d9f72a9bd1618cd5dff6d9c63cfd8","modified":1497349378401},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1497270348803},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1497270348670},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1497270348671},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1497270348816},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1497270348824},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1497270348825},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1497270348862},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1497270348865},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1497270348659},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1497270348822},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1497270348869},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1497270348870},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1497270348871},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1497270348871},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"68db2c0bf1064176627199394f25f6dc37ea23ad","modified":1497270348823},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1497270348896},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1497270348864},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1497270348898},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1497270348899},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1497270348900},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1497270348901},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1497270348902},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1497270348868},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1497270348863},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1497270348905},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"a0c042a74ea1afcb19daac7e2604a2bc5495037b","modified":1497270348670},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1497270348905},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1497270348907},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1497270348908},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1497270348910},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1497270348911},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1497270348906},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1497270348909},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1497270348910},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1497270348912},{"_id":"themes/next/source/js/src/utils.js","hash":"c976214b8bbaa9512b886bf3687e94696f705e33","modified":1497270348804},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1497270348904},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1497270348913},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1497270348914},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"2d9a9f38c493fdf7c0b833bb9184b6a1645c11b2","modified":1497270348917},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1497270348930},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1497270348929},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1497270348916},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1497270348934},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1497270348935},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1497270348915},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1497270348936},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"8148492dd49aa876d32bb7d5b728d3f5bf6f5074","modified":1497270348919},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"46a50b91c98b639c9a2b9265c5a1e66a5c656881","modified":1497270348918},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1497270348898},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4ba6f2a615693b9b5afc266d9c833697016085fd","modified":1497270348688},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"22828f5141c0cecb9ef25a110e194cdfa3a36423","modified":1497270348690},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"1dc2ed435e41ca041f43bd9633d5d95139afbb42","modified":1497270348689},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1497270348690},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1497270348691},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1497270348725},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"88559b13ce94311405b170a0506ded91273beceb","modified":1497270348704},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1497270348739},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1497270348742},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"4998bedff9c84a09a294b8ef36ede2e3644d3528","modified":1497270348740},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1497270348741},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1497270348749},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1497270348743},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"c9218b48c56e52c06af9ce3cc8fbdae737cf16fe","modified":1497270348742},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1497270348751},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1497270348748},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"ce272226a1570f5f7c70243b751a5b0fe1671a88","modified":1497270348751},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1497270348750},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1497270348753},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1497270348757},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1497270348759},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"f23ac53ab901c48859dd29eee6e386b60ff956ba","modified":1497270348758},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1497270348760},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1497270348752},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1497270348756},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"416988dca389e6e2fdfa51fa7f4ee07eb53f82fb","modified":1497270348763},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1497270348764},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1497270348763},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1497270348766},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"c4358416f0a116d7f4037542fa3b385947e80908","modified":1497270348801},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"c48d4a561d047b3705924949b3ab7b57bee94ecd","modified":1497270348765},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1497270348762},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"95518d298d3c5c271faec2e4977df9e5dedd5d84","modified":1497270348814},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1497270348669},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1497270348826},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1497270348827},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1497270348668},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"16b03db23a52623348f37c04544f2792032c1fb6","modified":1497270348815},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1497270348828},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1497270348829},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1497270348830},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1497270348860},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1497270348832},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1497270348859},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1497270348874},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1497270348873},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1497270348875},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1497270348861},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1497270348867},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1497270348926},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1497270348866},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1497270348927},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"4ac683b2bc8531c84d98f51b86957be0e6f830f3","modified":1497270348812},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"524cfca7b6ab135d81ea723d8de06fdf0dbe7e56","modified":1497270348810},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"4c4ef6e997d0c6e21de39c2daa0c768e12c8c6fa","modified":1497270348693},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1497270348694},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1497270348695},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1497270348695},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"104b5c79cd891506e0beaf938b083685f1da8637","modified":1497270348700},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1497270348697},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1497270348701},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1497270348703},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1497270348704},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1497270348698},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1497270348696},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"4783f85872bc7e218c1522a5c1c68cd27a5922db","modified":1497270348705},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1497270348702},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1497270348699},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1497270348707},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1497270348893},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1497270348708},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"875cbe88d5c7f6248990e2beb97c9828920e7e24","modified":1497270348706},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"658accf8e196721f295003da66941e6d1f7b81b0","modified":1497270348710},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"d256461a1d807cfd7cc37fb2abe8ae946aa9f2d4","modified":1497349322099},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1497270348711},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"8355b0e9375b3245508efda0e18acd069c2aa767","modified":1497270348712},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1497270348713},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"350469437b20ecfd6f3ca45e400478f8e3f71cfb","modified":1497270348714},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1497270348710},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"2b3e1039a58a79f7da5c72542263413782b37fc9","modified":1497270348717},{"_id":"themes/next/source/css/_common/components/post/post-wordcount.styl","hash":"268c9704481fdb0b4d1e646196386143990fe235","modified":1497270348716},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"2cb09973d29a8e34e2a3425ac6e0938296970d8e","modified":1497270348715},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1497270348714},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"daeff93e0180635d97e5a521bf6f16c06e6b8fa7","modified":1497270348719},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"7f2bdd6109614d35408ee5ac3335aad4464c69c7","modified":1497270348718},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"ac060861b27b764bc4012fc362a25a332df4045a","modified":1497270348719},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1497270348720},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1497270348721},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"702be9e57dd6ff5fa99642a1f6e3df26215b8805","modified":1497270348724},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"b3b783511bbd94af7e941abf8ff411885db7395b","modified":1497270348699},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"c9f76d4f6806ef70fa2160c97afa0a0e0ae5373e","modified":1497270348723},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1497270348725},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1497270348732},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1497270348733},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"28a8737c090fbffd188d73a00b42e90b9ee57df2","modified":1497270348722},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1497270348736},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1497270348734},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1497270348731},{"_id":"themes/next/source/css/_common/components/third-party/gentie.styl","hash":"cd526e814f9323a79fe835085d64867d34b3715d","modified":1497270348734},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1497270348736},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1497270348726},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"eb45ee16051624c6e36a274c0a9538e961f10c4d","modified":1497270348738},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1497270348737},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1497270348729},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"e3ad37f2da35e330616a044621ffa50565a20c88","modified":1497270348730},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1497270348727},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1497270348754},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"74019008ba973ab30f0f4a6b3c2cd33c66d3a4b4","modified":1497270348730},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"3159b55f35c40bd08e55b00148c523760a708c51","modified":1497270348728},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1497270348895},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1497270348807},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1497270348807},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1497270348808},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1497270348932},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1497270348809},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1497270348755},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1497270348761},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1497270348835},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1497270348836},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1497270348858},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1497270348834},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1497270348879},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1497270348837},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1497270348834},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1497270348821},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1497270348891},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1497270348883},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1497270348925},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1497270348888},{"_id":"public/baidusitemap.xml","hash":"70458bf6bbe4697e4d74eb16c5672f31f103b2e0","modified":1497349528817},{"_id":"public/atom.xml","hash":"5b9a6ebb61694f38a3a6769d6a1d7bb358dfcae2","modified":1497349528842},{"_id":"public/about/index.html","hash":"0c70d7b4854b491beeff64d3d2ea1b365a6382a7","modified":1497349529261},{"_id":"public/categories/index.html","hash":"f422d1a5444d3c13cae16f8948a83110e7dbe7f7","modified":1497349529262},{"_id":"public/tags/index.html","hash":"77f2e15102e2ff2263a360475c485d68e0851fae","modified":1497349529263},{"_id":"public/guestbook/index.html","hash":"00590a126d8e49a2dee527ad5d7dce47605a3de5","modified":1497349529263},{"_id":"public/categories/奇技淫巧/index.html","hash":"9cf2e763be535e5fd2ec64213af123c3e121605f","modified":1497349529264},{"_id":"public/archives/page/2/index.html","hash":"1e3b7eb1dd9783bf80b1580b95c32fa35e8fe1fe","modified":1497349529263},{"_id":"public/archives/2016/page/2/index.html","hash":"9b759df4a7724b1bc85020da7acbcffd7b1742b3","modified":1497349529263},{"_id":"public/archives/2016/07/index.html","hash":"01bc5607ca248e5ca94e111c06f43953b9cfb2fc","modified":1497349529263},{"_id":"public/archives/2016/08/index.html","hash":"ee5170690d1c786882529d7df4d6052cc945fa34","modified":1497349529263},{"_id":"public/archives/2016/11/index.html","hash":"460aca096df0f2ec25eb341c5dd1375577f45fe9","modified":1497349529263},{"_id":"public/archives/2017/index.html","hash":"c96f76e9616fb601cba1a81f44ef927a88217344","modified":1497349529263},{"_id":"public/archives/2017/06/index.html","hash":"317e3022f9905724ea2093d24c5d7fedd0827ca2","modified":1497349529263},{"_id":"public/tags/Frontend/index.html","hash":"d0715572403e3f367c18d9c5c9666afac26f3939","modified":1497349529264},{"_id":"public/tags/JavaScript/index.html","hash":"79edc9e8e820e0ff65794782f6391f667b7d0c71","modified":1497349529264},{"_id":"public/tags/css/index.html","hash":"ca9d69b970b1a39932b36aad1f53af133e51c912","modified":1497349529264},{"_id":"public/tags/SQL/index.html","hash":"3ba0f3af94a3188c74986817417d8c39ca65c6ac","modified":1497349529266},{"_id":"public/tags/SQL-Server/index.html","hash":"e5b2f0c9bef7024acd158cdc6d31427f385ba4a0","modified":1497349529266},{"_id":"public/tags/Markdown/index.html","hash":"3e662d8932b7d09db87f78bea7320b6552a55fb7","modified":1497349529266},{"_id":"public/tags/python/index.html","hash":"6538395dddb8a4fdd2bada8e84a036cb5495f4d2","modified":1497349529266},{"_id":"public/tags/php/index.html","hash":"e5012df0a4deabf45934f2d2046c392d6b845ce7","modified":1497349529267},{"_id":"public/tags/Linux/index.html","hash":"9e31a40214ce46b92b336a87b67ed4cf2a512caa","modified":1497349529267},{"_id":"public/tags/Windows/index.html","hash":"780e748567688c27351297d42170e9f958569e1b","modified":1497349529267},{"_id":"public/2017/06/09/hello-world/index.html","hash":"06f519bcdae7eaa7f8e89d57b3a408856d15e85f","modified":1497349529267},{"_id":"public/2016/11/25/css-html5-table/index.html","hash":"d328cd1e94a71d5562e4bf95e89c678f49b79fa2","modified":1497349529267},{"_id":"public/2016/11/25/php-connect-sqlserver/index.html","hash":"a5f1424ca7e31c57ec23028b45aea9f02ec49019","modified":1497349529267},{"_id":"public/2016/10/28/import-big-sql/index.html","hash":"88ae47cda6811795dbf5859870193bd43414a61c","modified":1497349529267},{"_id":"public/2016/10/28/learn-python3-1min/index.html","hash":"08c119df7b2fc22b608a500b48d50a1c2cfe9d35","modified":1497349529267},{"_id":"public/2016/10/27/bootstrap-datepicker/index.html","hash":"f83a9b748ced03a9795add458c29599089b19560","modified":1497349529267},{"_id":"public/2016/10/01/start-django/index.html","hash":"dbeef82abdd039a3ede6387fd8b5237e51f2a539","modified":1497349529268},{"_id":"public/2016/08/25/markdown-tutorial/index.html","hash":"79b2cda02498edac8e63163e26cf2281a040f41d","modified":1497349529268},{"_id":"public/2016/07/19/win10-.net-framwork/index.html","hash":"7a76b3d7537c4246c2551240afbd14708f40f223","modified":1497349529268},{"_id":"public/2016/07/18/ubuntu-server/index.html","hash":"d1f70d3caafb53603ca1c30f6d7904c1cf7c820f","modified":1497349529268},{"_id":"public/categories/编程笔记/index.html","hash":"c28cfac14b52307094ebaebb4f0194bafb89cdde","modified":1497349529269},{"_id":"public/archives/index.html","hash":"3df12fc481d50cb210a4d440d693b746f52ad60d","modified":1497349529269},{"_id":"public/archives/2016/index.html","hash":"558151617616748b28e4e89ffcfa728a10d179a5","modified":1497349529269},{"_id":"public/archives/2016/10/index.html","hash":"a213b3128b26f6193949f5069cbd692174c0d359","modified":1497349529269},{"_id":"public/index.html","hash":"ca7a85efd72838726fbd242f0762f9b196cd1a60","modified":1497349529269},{"_id":"public/page/2/index.html","hash":"1e802b3a26d802f76088476e052994414c2eb66d","modified":1497349529275},{"_id":"public/robots.txt","hash":"5ed36b43ab4dad8178a80936e00155b2ad1206f7","modified":1497271955727},{"_id":"public/images/alipay-reward.JPG","hash":"66031be94bfeb22b383324f378e5ba918a1b948f","modified":1497271955727},{"_id":"public/README.md","hash":"06aaf1241e9e1619956c86d8b1397a643840a9d1","modified":1497271955727},{"_id":"public/images/avatar.ico","hash":"0bee0dc07812361a586379491248246917857ef9","modified":1497271955728},{"_id":"public/images/favicon.ico","hash":"20f34b417a1b3350f33ff94f23ab5939bcb5145f","modified":1497271955728},{"_id":"public/images/wechat-reward.JPG","hash":"c73ef44c36f44d69e055f98b0b908903cb40027f","modified":1497271955728},{"_id":"public/images/favicon1.ico","hash":"6e7a6058e3e412ebc8d31bb6e4176510b2bc58e2","modified":1497271955728},{"_id":"public/images/algolia_logo.svg","hash":"16505f61f19ba65f629dfd033f14ee9abcf18756","modified":1497271955728},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1497271955728},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1497271955728},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1497271955728},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1497271955729},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1497271955729},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1497271955731},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1497271955731},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1497271955731},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1497271955731},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1497271955731},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1497271955731},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1497271955732},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1497271955732},{"_id":"public/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1497271955732},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1497271955732},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1497271955732},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1497271955732},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1497271955732},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1497271955732},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1497271955732},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1497271955733},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1497271955733},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1497271955733},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1497271955733},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1497271955733},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1497271955733},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1497271959176},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1497271959236},{"_id":"public/js/src/bootstrap.js","hash":"aab7be0a6e2724b3faa9338db93c19556c559625","modified":1497271959295},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1497271959295},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1497271959295},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1497271959295},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1497271959296},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1497271959296},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1497271959296},{"_id":"public/js/src/post-details.js","hash":"af7a417dd1cb02465a7b98211653e7c6192e6d55","modified":1497271959296},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1497271959297},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1497271959297},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1497271959297},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1497271959297},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1497271959297},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1497271959297},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"3587602ad777b031628bb5944864d1a4fcfea4ac","modified":1497271959299},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1497271959300},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1497271959300},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1497271959300},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1497271959300},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1497271959300},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1497271959301},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1497271959308},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1497271959308},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1497271959308},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1497271959309},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1497271959310},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1497271959310},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1497271959310},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1497271959310},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1497271959310},{"_id":"public/js/src/utils.js","hash":"b2ea56de27fddc6d9118051da384f781cd93951d","modified":1497271959320},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1497271959323},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1497271959323},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1497271959324},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1497271959324},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1497271959325},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1497271959325},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1497271959325},{"_id":"public/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1497271959325},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1497271959325},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1497271959326},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1497271959326},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1497271959326},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1497271959326},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1497271959326},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1497271959326},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1497271959326},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1497271959327},{"_id":"public/css/main.css","hash":"c67904b91036601b147fac482518883cf82cdda3","modified":1497271959327},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1497271959327},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1497271959327},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1497271959328},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1497271959328},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1497271959328},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1497271959329},{"_id":"public/lib/Han/dist/han.min.css","hash":"d9c0b3dc9158e717fde36f554709e6c3a22b5f85","modified":1497271959329},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1497271959330},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1497271959336},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1497271959337},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1497271959339},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1497271959339},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1497271959340},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1497271959340},{"_id":"public/lib/Han/dist/han.css","hash":"38e48f275ad00daa9dcdcb8d9b44e576acda4707","modified":1497271959340},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1497271959340},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1497271959341},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1497271959342},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1497271959343},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1497271959343},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1497271959343},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1497271959477},{"_id":"source/_posts/file-extension-scan.md","hash":"6b3aed7130409a38c1fcf2954497c91e4a995768","modified":1497348404491},{"_id":"public/archives/2016/12/index.html","hash":"fa747cda97e5297ed5e3995c2f1213c12e282751","modified":1497349529285},{"_id":"public/categories/编程笔记/page/2/index.html","hash":"df749daf6445da4f6535ac648c8041825dfe8a5d","modified":1497349529285},{"_id":"public/tags/C/index.html","hash":"d29d92c2dea200b15e9535bd77a9cf29b4ec650c","modified":1497349529285},{"_id":"public/2016/12/13/file-extension-scan/index.html","hash":"ffed6b3e78a2ac573d1258c6d840187e49458f9c","modified":1497349529285}],"Category":[{"name":"编程笔记","_id":"cj3u5257q0002jsurg51rzyjd"},{"name":"奇技淫巧","_id":"cj3u525c70014jsurjzuavyq1"}],"Data":[],"Page":[{"title":"关于我","date":"2016-09-08T02:31:57.000Z","type":"about","comments":0,"_content":"","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2016-09-08 10:31:57\ntype: \"about\"\ncomments: false\n---\n","updated":"2017-06-10T02:05:21.989Z","path":"about/index.html","layout":"page","_id":"cj3u525as000qjsurujcjcaxp","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"分类","date":"2016-09-08T02:31:57.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2016-09-08 10:31:57\ntype: \"categories\"\ncomments: false\n---\n","updated":"2017-06-10T02:05:41.158Z","path":"categories/index.html","layout":"page","_id":"cj3u525b6000sjsurrrd7ynhn","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签云","date":"2016-09-08T02:31:01.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签云\ndate: 2016-09-08 10:31:01\ntype: \"tags\"\ncomments: false\n---\n","updated":"2017-06-10T02:05:46.854Z","path":"tags/index.html","layout":"page","_id":"cj3u525bg000ujsur2i94ia8v","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"留言板","date":"2017-06-10T00:27:39.000Z","_content":"\n>《论语·公冶长第五》：「子路有闻，未之能行，唯恐有（又）闻」\n\n> 大致的意思是，子路听到了好的道理，还不能转化为行动的时候，就怕自己又听到其他的道理。\n\n> 上边所引的那句论语，就是子路的方法论：一次一个道理，听完就去施行，没有掌握之前，不再过多摄入。\n所以现在要做的，不是加法，而是减法，最终能够形成「有闻」→「能行」→「又闻」这样一个良性的循环\n\n> So，Come with me……\n\n> 最近访客\n<div class=\"ds-recent-visitors\" data-num-items=\"28\" data-avatar-size=\"42\" id=\"ds-recent-visitors\"></div>\n","source":"guestbook/index.md","raw":"---\ntitle: 留言板\ndate: 2017-06-10 08:27:39\n---\n\n>《论语·公冶长第五》：「子路有闻，未之能行，唯恐有（又）闻」\n\n> 大致的意思是，子路听到了好的道理，还不能转化为行动的时候，就怕自己又听到其他的道理。\n\n> 上边所引的那句论语，就是子路的方法论：一次一个道理，听完就去施行，没有掌握之前，不再过多摄入。\n所以现在要做的，不是加法，而是减法，最终能够形成「有闻」→「能行」→「又闻」这样一个良性的循环\n\n> So，Come with me……\n\n> 最近访客\n<div class=\"ds-recent-visitors\" data-num-items=\"28\" data-avatar-size=\"42\" id=\"ds-recent-visitors\"></div>\n","updated":"2017-06-10T02:24:21.315Z","path":"guestbook/index.html","comments":1,"layout":"page","_id":"cj3u525ns001fjsurdmbizyxw","content":"<blockquote>\n<p>《论语·公冶长第五》：「子路有闻，未之能行，唯恐有（又）闻」</p>\n<p>大致的意思是，子路听到了好的道理，还不能转化为行动的时候，就怕自己又听到其他的道理。</p>\n<p>上边所引的那句论语，就是子路的方法论：一次一个道理，听完就去施行，没有掌握之前，不再过多摄入。<br>所以现在要做的，不是加法，而是减法，最终能够形成「有闻」→「能行」→「又闻」这样一个良性的循环</p>\n<p>So，Come with me……</p>\n<p>最近访客</p>\n<div class=\"ds-recent-visitors\" data-num-items=\"28\" data-avatar-size=\"42\" id=\"ds-recent-visitors\"></div>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>《论语·公冶长第五》：「子路有闻，未之能行，唯恐有（又）闻」</p>\n<p>大致的意思是，子路听到了好的道理，还不能转化为行动的时候，就怕自己又听到其他的道理。</p>\n<p>上边所引的那句论语，就是子路的方法论：一次一个道理，听完就去施行，没有掌握之前，不再过多摄入。<br>所以现在要做的，不是加法，而是减法，最终能够形成「有闻」→「能行」→「又闻」这样一个良性的循环</p>\n<p>So，Come with me……</p>\n<p>最近访客</p>\n<div class=\"ds-recent-visitors\" data-num-items=\"28\" data-avatar-size=\"42\" id=\"ds-recent-visitors\"></div>\n</blockquote>\n"}],"Post":[{"title":"bootstrap-datepicker插件汉化","date":"2016-10-27T11:21:29.000Z","_content":"\n近期在做项目时用到bootstrap-datepicker这个插件，默认是英文显示日期，查阅相关资料后改动即可汉化\n\n- 先将bootstrap-datepicker.js另存为UTF-8编码格式\n- 增加cn语言选项\n\n``` javascript\nvar dates = $.fn.datepicker.dates = {\n  en: {\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"],\n    daysShort: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\n    daysMin: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\", \"Su\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    monthsShort: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n    today: \"Today\",\n    clear: \"Clear\"\n  },\n  cn: {\n    days: [\"周日\", \"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\", \"周日\"],\n    daysShort: [\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\", \"七\"],\n    daysMin: [\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\", \"七\"],\n    months: [\"一月\", \"二月\", \"三月\", \"四月\", \"五月\", \"六月\", \"七月\", \"八月\", \"九月\", \"十月\", \"十一月\", \"十二月\"],\n    monthsShort: [\"一月\", \"二月\", \"三月\", \"四月\", \"五月\", \"六月\", \"七月\", \"八月\", \"九月\", \"十月\", \"十一月\", \"十二月\"],\n    today: \"今天\",\n    clear: \"清除\"\n  }\n};\n```\n- 修改默认语言参数language为cn\n\n``` javascript\n\nvar defaults = $.fn.datepicker.defaults = {\n\tautoclose: false,\n\tbeforeShowDay: $.noop,\n\tcalendarWeeks: false,\n\tclearBtn: false,\n\tdaysOfWeekDisabled: [],\n\tendDate: Infinity,\n\tforceParse: true,\n\tformat: 'mm/dd/yyyy',\n\tkeyboardNavigation: true,\n\tlanguage: 'cn',\n\tminViewMode: 0,\n\torientation: \"auto\",\n\trtl: false,\n\tstartDate: -Infinity,\n\tstartView: 0,\n\ttodayBtn: false,\n\ttodayHighlight: false,\n\tweekStart: 0\n    };\n```\n即可完成对bootstrap-datepicker插件的汉化。\n","source":"_posts/bootstrap-datepicker.md","raw":"---\ntitle: bootstrap-datepicker插件汉化\ndate: 2016-10-27 19:21:29\ncategories:\n- 编程笔记\ntags:\n- Frontend\n- JavaScript\n---\n\n近期在做项目时用到bootstrap-datepicker这个插件，默认是英文显示日期，查阅相关资料后改动即可汉化\n\n- 先将bootstrap-datepicker.js另存为UTF-8编码格式\n- 增加cn语言选项\n\n``` javascript\nvar dates = $.fn.datepicker.dates = {\n  en: {\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"],\n    daysShort: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\n    daysMin: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\", \"Su\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    monthsShort: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n    today: \"Today\",\n    clear: \"Clear\"\n  },\n  cn: {\n    days: [\"周日\", \"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\", \"周日\"],\n    daysShort: [\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\", \"七\"],\n    daysMin: [\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\", \"七\"],\n    months: [\"一月\", \"二月\", \"三月\", \"四月\", \"五月\", \"六月\", \"七月\", \"八月\", \"九月\", \"十月\", \"十一月\", \"十二月\"],\n    monthsShort: [\"一月\", \"二月\", \"三月\", \"四月\", \"五月\", \"六月\", \"七月\", \"八月\", \"九月\", \"十月\", \"十一月\", \"十二月\"],\n    today: \"今天\",\n    clear: \"清除\"\n  }\n};\n```\n- 修改默认语言参数language为cn\n\n``` javascript\n\nvar defaults = $.fn.datepicker.defaults = {\n\tautoclose: false,\n\tbeforeShowDay: $.noop,\n\tcalendarWeeks: false,\n\tclearBtn: false,\n\tdaysOfWeekDisabled: [],\n\tendDate: Infinity,\n\tforceParse: true,\n\tformat: 'mm/dd/yyyy',\n\tkeyboardNavigation: true,\n\tlanguage: 'cn',\n\tminViewMode: 0,\n\torientation: \"auto\",\n\trtl: false,\n\tstartDate: -Infinity,\n\tstartView: 0,\n\ttodayBtn: false,\n\ttodayHighlight: false,\n\tweekStart: 0\n    };\n```\n即可完成对bootstrap-datepicker插件的汉化。\n","slug":"bootstrap-datepicker","published":1,"updated":"2017-06-12T12:25:48.555Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3u525720000jsurhq322f2d","content":"<p>近期在做项目时用到bootstrap-datepicker这个插件，默认是英文显示日期，查阅相关资料后改动即可汉化</p>\n<ul>\n<li>先将bootstrap-datepicker.js另存为UTF-8编码格式</li>\n<li>增加cn语言选项</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> dates = $.fn.datepicker.dates = &#123;</div><div class=\"line\">  <span class=\"attr\">en</span>: &#123;</div><div class=\"line\">    <span class=\"attr\">days</span>: [<span class=\"string\">\"Sunday\"</span>, <span class=\"string\">\"Monday\"</span>, <span class=\"string\">\"Tuesday\"</span>, <span class=\"string\">\"Wednesday\"</span>, <span class=\"string\">\"Thursday\"</span>, <span class=\"string\">\"Friday\"</span>, <span class=\"string\">\"Saturday\"</span>, <span class=\"string\">\"Sunday\"</span>],</div><div class=\"line\">    <span class=\"attr\">daysShort</span>: [<span class=\"string\">\"Sun\"</span>, <span class=\"string\">\"Mon\"</span>, <span class=\"string\">\"Tue\"</span>, <span class=\"string\">\"Wed\"</span>, <span class=\"string\">\"Thu\"</span>, <span class=\"string\">\"Fri\"</span>, <span class=\"string\">\"Sat\"</span>, <span class=\"string\">\"Sun\"</span>],</div><div class=\"line\">    <span class=\"attr\">daysMin</span>: [<span class=\"string\">\"Su\"</span>, <span class=\"string\">\"Mo\"</span>, <span class=\"string\">\"Tu\"</span>, <span class=\"string\">\"We\"</span>, <span class=\"string\">\"Th\"</span>, <span class=\"string\">\"Fr\"</span>, <span class=\"string\">\"Sa\"</span>, <span class=\"string\">\"Su\"</span>],</div><div class=\"line\">    <span class=\"attr\">months</span>: [<span class=\"string\">\"January\"</span>, <span class=\"string\">\"February\"</span>, <span class=\"string\">\"March\"</span>, <span class=\"string\">\"April\"</span>, <span class=\"string\">\"May\"</span>, <span class=\"string\">\"June\"</span>, <span class=\"string\">\"July\"</span>, <span class=\"string\">\"August\"</span>, <span class=\"string\">\"September\"</span>, <span class=\"string\">\"October\"</span>, <span class=\"string\">\"November\"</span>, <span class=\"string\">\"December\"</span>],</div><div class=\"line\">    <span class=\"attr\">monthsShort</span>: [<span class=\"string\">\"Jan\"</span>, <span class=\"string\">\"Feb\"</span>, <span class=\"string\">\"Mar\"</span>, <span class=\"string\">\"Apr\"</span>, <span class=\"string\">\"May\"</span>, <span class=\"string\">\"Jun\"</span>, <span class=\"string\">\"Jul\"</span>, <span class=\"string\">\"Aug\"</span>, <span class=\"string\">\"Sep\"</span>, <span class=\"string\">\"Oct\"</span>, <span class=\"string\">\"Nov\"</span>, <span class=\"string\">\"Dec\"</span>],</div><div class=\"line\">    <span class=\"attr\">today</span>: <span class=\"string\">\"Today\"</span>,</div><div class=\"line\">    <span class=\"attr\">clear</span>: <span class=\"string\">\"Clear\"</span></div><div class=\"line\">  &#125;,</div><div class=\"line\">  <span class=\"attr\">cn</span>: &#123;</div><div class=\"line\">    <span class=\"attr\">days</span>: [<span class=\"string\">\"周日\"</span>, <span class=\"string\">\"周一\"</span>, <span class=\"string\">\"周二\"</span>, <span class=\"string\">\"周三\"</span>, <span class=\"string\">\"周四\"</span>, <span class=\"string\">\"周五\"</span>, <span class=\"string\">\"周六\"</span>, <span class=\"string\">\"周日\"</span>],</div><div class=\"line\">    <span class=\"attr\">daysShort</span>: [<span class=\"string\">\"日\"</span>, <span class=\"string\">\"一\"</span>, <span class=\"string\">\"二\"</span>, <span class=\"string\">\"三\"</span>, <span class=\"string\">\"四\"</span>, <span class=\"string\">\"五\"</span>, <span class=\"string\">\"六\"</span>, <span class=\"string\">\"七\"</span>],</div><div class=\"line\">    <span class=\"attr\">daysMin</span>: [<span class=\"string\">\"日\"</span>, <span class=\"string\">\"一\"</span>, <span class=\"string\">\"二\"</span>, <span class=\"string\">\"三\"</span>, <span class=\"string\">\"四\"</span>, <span class=\"string\">\"五\"</span>, <span class=\"string\">\"六\"</span>, <span class=\"string\">\"七\"</span>],</div><div class=\"line\">    <span class=\"attr\">months</span>: [<span class=\"string\">\"一月\"</span>, <span class=\"string\">\"二月\"</span>, <span class=\"string\">\"三月\"</span>, <span class=\"string\">\"四月\"</span>, <span class=\"string\">\"五月\"</span>, <span class=\"string\">\"六月\"</span>, <span class=\"string\">\"七月\"</span>, <span class=\"string\">\"八月\"</span>, <span class=\"string\">\"九月\"</span>, <span class=\"string\">\"十月\"</span>, <span class=\"string\">\"十一月\"</span>, <span class=\"string\">\"十二月\"</span>],</div><div class=\"line\">    <span class=\"attr\">monthsShort</span>: [<span class=\"string\">\"一月\"</span>, <span class=\"string\">\"二月\"</span>, <span class=\"string\">\"三月\"</span>, <span class=\"string\">\"四月\"</span>, <span class=\"string\">\"五月\"</span>, <span class=\"string\">\"六月\"</span>, <span class=\"string\">\"七月\"</span>, <span class=\"string\">\"八月\"</span>, <span class=\"string\">\"九月\"</span>, <span class=\"string\">\"十月\"</span>, <span class=\"string\">\"十一月\"</span>, <span class=\"string\">\"十二月\"</span>],</div><div class=\"line\">    <span class=\"attr\">today</span>: <span class=\"string\">\"今天\"</span>,</div><div class=\"line\">    <span class=\"attr\">clear</span>: <span class=\"string\">\"清除\"</span></div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<ul>\n<li>修改默认语言参数language为cn</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> defaults = $.fn.datepicker.defaults = &#123;</div><div class=\"line\">\t<span class=\"attr\">autoclose</span>: <span class=\"literal\">false</span>,</div><div class=\"line\">\t<span class=\"attr\">beforeShowDay</span>: $.noop,</div><div class=\"line\">\t<span class=\"attr\">calendarWeeks</span>: <span class=\"literal\">false</span>,</div><div class=\"line\">\t<span class=\"attr\">clearBtn</span>: <span class=\"literal\">false</span>,</div><div class=\"line\">\t<span class=\"attr\">daysOfWeekDisabled</span>: [],</div><div class=\"line\">\t<span class=\"attr\">endDate</span>: <span class=\"literal\">Infinity</span>,</div><div class=\"line\">\t<span class=\"attr\">forceParse</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">\t<span class=\"attr\">format</span>: <span class=\"string\">'mm/dd/yyyy'</span>,</div><div class=\"line\">\t<span class=\"attr\">keyboardNavigation</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">\t<span class=\"attr\">language</span>: <span class=\"string\">'cn'</span>,</div><div class=\"line\">\t<span class=\"attr\">minViewMode</span>: <span class=\"number\">0</span>,</div><div class=\"line\">\t<span class=\"attr\">orientation</span>: <span class=\"string\">\"auto\"</span>,</div><div class=\"line\">\t<span class=\"attr\">rtl</span>: <span class=\"literal\">false</span>,</div><div class=\"line\">\t<span class=\"attr\">startDate</span>: -<span class=\"literal\">Infinity</span>,</div><div class=\"line\">\t<span class=\"attr\">startView</span>: <span class=\"number\">0</span>,</div><div class=\"line\">\t<span class=\"attr\">todayBtn</span>: <span class=\"literal\">false</span>,</div><div class=\"line\">\t<span class=\"attr\">todayHighlight</span>: <span class=\"literal\">false</span>,</div><div class=\"line\">\t<span class=\"attr\">weekStart</span>: <span class=\"number\">0</span></div><div class=\"line\">    &#125;;</div></pre></td></tr></table></figure>\n<p>即可完成对bootstrap-datepicker插件的汉化。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>近期在做项目时用到bootstrap-datepicker这个插件，默认是英文显示日期，查阅相关资料后改动即可汉化</p>\n<ul>\n<li>先将bootstrap-datepicker.js另存为UTF-8编码格式</li>\n<li>增加cn语言选项</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> dates = $.fn.datepicker.dates = &#123;</div><div class=\"line\">  <span class=\"attr\">en</span>: &#123;</div><div class=\"line\">    <span class=\"attr\">days</span>: [<span class=\"string\">\"Sunday\"</span>, <span class=\"string\">\"Monday\"</span>, <span class=\"string\">\"Tuesday\"</span>, <span class=\"string\">\"Wednesday\"</span>, <span class=\"string\">\"Thursday\"</span>, <span class=\"string\">\"Friday\"</span>, <span class=\"string\">\"Saturday\"</span>, <span class=\"string\">\"Sunday\"</span>],</div><div class=\"line\">    <span class=\"attr\">daysShort</span>: [<span class=\"string\">\"Sun\"</span>, <span class=\"string\">\"Mon\"</span>, <span class=\"string\">\"Tue\"</span>, <span class=\"string\">\"Wed\"</span>, <span class=\"string\">\"Thu\"</span>, <span class=\"string\">\"Fri\"</span>, <span class=\"string\">\"Sat\"</span>, <span class=\"string\">\"Sun\"</span>],</div><div class=\"line\">    <span class=\"attr\">daysMin</span>: [<span class=\"string\">\"Su\"</span>, <span class=\"string\">\"Mo\"</span>, <span class=\"string\">\"Tu\"</span>, <span class=\"string\">\"We\"</span>, <span class=\"string\">\"Th\"</span>, <span class=\"string\">\"Fr\"</span>, <span class=\"string\">\"Sa\"</span>, <span class=\"string\">\"Su\"</span>],</div><div class=\"line\">    <span class=\"attr\">months</span>: [<span class=\"string\">\"January\"</span>, <span class=\"string\">\"February\"</span>, <span class=\"string\">\"March\"</span>, <span class=\"string\">\"April\"</span>, <span class=\"string\">\"May\"</span>, <span class=\"string\">\"June\"</span>, <span class=\"string\">\"July\"</span>, <span class=\"string\">\"August\"</span>, <span class=\"string\">\"September\"</span>, <span class=\"string\">\"October\"</span>, <span class=\"string\">\"November\"</span>, <span class=\"string\">\"December\"</span>],</div><div class=\"line\">    <span class=\"attr\">monthsShort</span>: [<span class=\"string\">\"Jan\"</span>, <span class=\"string\">\"Feb\"</span>, <span class=\"string\">\"Mar\"</span>, <span class=\"string\">\"Apr\"</span>, <span class=\"string\">\"May\"</span>, <span class=\"string\">\"Jun\"</span>, <span class=\"string\">\"Jul\"</span>, <span class=\"string\">\"Aug\"</span>, <span class=\"string\">\"Sep\"</span>, <span class=\"string\">\"Oct\"</span>, <span class=\"string\">\"Nov\"</span>, <span class=\"string\">\"Dec\"</span>],</div><div class=\"line\">    <span class=\"attr\">today</span>: <span class=\"string\">\"Today\"</span>,</div><div class=\"line\">    <span class=\"attr\">clear</span>: <span class=\"string\">\"Clear\"</span></div><div class=\"line\">  &#125;,</div><div class=\"line\">  <span class=\"attr\">cn</span>: &#123;</div><div class=\"line\">    <span class=\"attr\">days</span>: [<span class=\"string\">\"周日\"</span>, <span class=\"string\">\"周一\"</span>, <span class=\"string\">\"周二\"</span>, <span class=\"string\">\"周三\"</span>, <span class=\"string\">\"周四\"</span>, <span class=\"string\">\"周五\"</span>, <span class=\"string\">\"周六\"</span>, <span class=\"string\">\"周日\"</span>],</div><div class=\"line\">    <span class=\"attr\">daysShort</span>: [<span class=\"string\">\"日\"</span>, <span class=\"string\">\"一\"</span>, <span class=\"string\">\"二\"</span>, <span class=\"string\">\"三\"</span>, <span class=\"string\">\"四\"</span>, <span class=\"string\">\"五\"</span>, <span class=\"string\">\"六\"</span>, <span class=\"string\">\"七\"</span>],</div><div class=\"line\">    <span class=\"attr\">daysMin</span>: [<span class=\"string\">\"日\"</span>, <span class=\"string\">\"一\"</span>, <span class=\"string\">\"二\"</span>, <span class=\"string\">\"三\"</span>, <span class=\"string\">\"四\"</span>, <span class=\"string\">\"五\"</span>, <span class=\"string\">\"六\"</span>, <span class=\"string\">\"七\"</span>],</div><div class=\"line\">    <span class=\"attr\">months</span>: [<span class=\"string\">\"一月\"</span>, <span class=\"string\">\"二月\"</span>, <span class=\"string\">\"三月\"</span>, <span class=\"string\">\"四月\"</span>, <span class=\"string\">\"五月\"</span>, <span class=\"string\">\"六月\"</span>, <span class=\"string\">\"七月\"</span>, <span class=\"string\">\"八月\"</span>, <span class=\"string\">\"九月\"</span>, <span class=\"string\">\"十月\"</span>, <span class=\"string\">\"十一月\"</span>, <span class=\"string\">\"十二月\"</span>],</div><div class=\"line\">    <span class=\"attr\">monthsShort</span>: [<span class=\"string\">\"一月\"</span>, <span class=\"string\">\"二月\"</span>, <span class=\"string\">\"三月\"</span>, <span class=\"string\">\"四月\"</span>, <span class=\"string\">\"五月\"</span>, <span class=\"string\">\"六月\"</span>, <span class=\"string\">\"七月\"</span>, <span class=\"string\">\"八月\"</span>, <span class=\"string\">\"九月\"</span>, <span class=\"string\">\"十月\"</span>, <span class=\"string\">\"十一月\"</span>, <span class=\"string\">\"十二月\"</span>],</div><div class=\"line\">    <span class=\"attr\">today</span>: <span class=\"string\">\"今天\"</span>,</div><div class=\"line\">    <span class=\"attr\">clear</span>: <span class=\"string\">\"清除\"</span></div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<ul>\n<li>修改默认语言参数language为cn</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> defaults = $.fn.datepicker.defaults = &#123;</div><div class=\"line\">\t<span class=\"attr\">autoclose</span>: <span class=\"literal\">false</span>,</div><div class=\"line\">\t<span class=\"attr\">beforeShowDay</span>: $.noop,</div><div class=\"line\">\t<span class=\"attr\">calendarWeeks</span>: <span class=\"literal\">false</span>,</div><div class=\"line\">\t<span class=\"attr\">clearBtn</span>: <span class=\"literal\">false</span>,</div><div class=\"line\">\t<span class=\"attr\">daysOfWeekDisabled</span>: [],</div><div class=\"line\">\t<span class=\"attr\">endDate</span>: <span class=\"literal\">Infinity</span>,</div><div class=\"line\">\t<span class=\"attr\">forceParse</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">\t<span class=\"attr\">format</span>: <span class=\"string\">'mm/dd/yyyy'</span>,</div><div class=\"line\">\t<span class=\"attr\">keyboardNavigation</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">\t<span class=\"attr\">language</span>: <span class=\"string\">'cn'</span>,</div><div class=\"line\">\t<span class=\"attr\">minViewMode</span>: <span class=\"number\">0</span>,</div><div class=\"line\">\t<span class=\"attr\">orientation</span>: <span class=\"string\">\"auto\"</span>,</div><div class=\"line\">\t<span class=\"attr\">rtl</span>: <span class=\"literal\">false</span>,</div><div class=\"line\">\t<span class=\"attr\">startDate</span>: -<span class=\"literal\">Infinity</span>,</div><div class=\"line\">\t<span class=\"attr\">startView</span>: <span class=\"number\">0</span>,</div><div class=\"line\">\t<span class=\"attr\">todayBtn</span>: <span class=\"literal\">false</span>,</div><div class=\"line\">\t<span class=\"attr\">todayHighlight</span>: <span class=\"literal\">false</span>,</div><div class=\"line\">\t<span class=\"attr\">weekStart</span>: <span class=\"number\">0</span></div><div class=\"line\">    &#125;;</div></pre></td></tr></table></figure>\n<p>即可完成对bootstrap-datepicker插件的汉化。</p>\n"},{"title":"CSS解决表格单元格内容过多的问题","date":"2016-11-25T02:52:50.000Z","updated":"2017-06-08T09:12:22.000Z","_content":"\n最近在实验室开发前端页面，从PHP后端传递数据渲染视图中的一个表格时，发现表格中某些单元格数据内容过多影响了页面美观，想让多余的内容用省略号代替。\n\n<!-- more -->\n\n## CSS样式\n\n```\ntable {\n　　table-layout: fixed;\n}\n\ntd {\n　　white-space: nowrap;\n　　overflow: hidden;\n　　text-overflow: ellipsis;\n}\n```\n\n## 代码解释\n\n```table-layout: fixed```  由于table-layout的默认值是auto，即table的宽高将取决于其内容的多寡，如果内容的体积无法估测，那么最终表格的呈现形式也无法保证了，fixed一下就好了。（注意：此样式为关键）\n\n```white-space: nowrap```  为了保证无论单元格（TD）中文本内容有多少，都不会自动换行，此时多余的内容会在水平方向撑破单元格。\n\n```overflow: hidden```  隐藏超出单元格的部分。\n\n```text-overflow: ellipsis``` 将被隐藏的那部分用省略号代替。\n***\n","source":"_posts/css-html5-table.md","raw":"---\ntitle: CSS解决表格单元格内容过多的问题\ndate: 2016-11-25 10:52:50\nupdated: 2017-06-08 17:12:22\ncategories:\n- 编程笔记\ntags:\n- Frontend\n- css\n---\n\n最近在实验室开发前端页面，从PHP后端传递数据渲染视图中的一个表格时，发现表格中某些单元格数据内容过多影响了页面美观，想让多余的内容用省略号代替。\n\n<!-- more -->\n\n## CSS样式\n\n```\ntable {\n　　table-layout: fixed;\n}\n\ntd {\n　　white-space: nowrap;\n　　overflow: hidden;\n　　text-overflow: ellipsis;\n}\n```\n\n## 代码解释\n\n```table-layout: fixed```  由于table-layout的默认值是auto，即table的宽高将取决于其内容的多寡，如果内容的体积无法估测，那么最终表格的呈现形式也无法保证了，fixed一下就好了。（注意：此样式为关键）\n\n```white-space: nowrap```  为了保证无论单元格（TD）中文本内容有多少，都不会自动换行，此时多余的内容会在水平方向撑破单元格。\n\n```overflow: hidden```  隐藏超出单元格的部分。\n\n```text-overflow: ellipsis``` 将被隐藏的那部分用省略号代替。\n***\n","slug":"css-html5-table","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cj3u5257h0001jsur54ismzel","content":"<p>最近在实验室开发前端页面，从PHP后端传递数据渲染视图中的一个表格时，发现表格中某些单元格数据内容过多影响了页面美观，想让多余的内容用省略号代替。</p>\n<a id=\"more\"></a>\n<h2 id=\"CSS样式\"><a href=\"#CSS样式\" class=\"headerlink\" title=\"CSS样式\"></a>CSS样式</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">table &#123;</div><div class=\"line\">　　table-layout: fixed;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">td &#123;</div><div class=\"line\">　　white-space: nowrap;</div><div class=\"line\">　　overflow: hidden;</div><div class=\"line\">　　text-overflow: ellipsis;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"代码解释\"><a href=\"#代码解释\" class=\"headerlink\" title=\"代码解释\"></a>代码解释</h2><p><code>table-layout: fixed</code>  由于table-layout的默认值是auto，即table的宽高将取决于其内容的多寡，如果内容的体积无法估测，那么最终表格的呈现形式也无法保证了，fixed一下就好了。（注意：此样式为关键）</p>\n<p><code>white-space: nowrap</code>  为了保证无论单元格（TD）中文本内容有多少，都不会自动换行，此时多余的内容会在水平方向撑破单元格。</p>\n<p><code>overflow: hidden</code>  隐藏超出单元格的部分。</p>\n<p><code>text-overflow: ellipsis</code> 将被隐藏的那部分用省略号代替。</p>\n<hr>\n","site":{"data":{}},"excerpt":"<p>最近在实验室开发前端页面，从PHP后端传递数据渲染视图中的一个表格时，发现表格中某些单元格数据内容过多影响了页面美观，想让多余的内容用省略号代替。</p>","more":"<h2 id=\"CSS样式\"><a href=\"#CSS样式\" class=\"headerlink\" title=\"CSS样式\"></a>CSS样式</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">table &#123;</div><div class=\"line\">　　table-layout: fixed;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">td &#123;</div><div class=\"line\">　　white-space: nowrap;</div><div class=\"line\">　　overflow: hidden;</div><div class=\"line\">　　text-overflow: ellipsis;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"代码解释\"><a href=\"#代码解释\" class=\"headerlink\" title=\"代码解释\"></a>代码解释</h2><p><code>table-layout: fixed</code>  由于table-layout的默认值是auto，即table的宽高将取决于其内容的多寡，如果内容的体积无法估测，那么最终表格的呈现形式也无法保证了，fixed一下就好了。（注意：此样式为关键）</p>\n<p><code>white-space: nowrap</code>  为了保证无论单元格（TD）中文本内容有多少，都不会自动换行，此时多余的内容会在水平方向撑破单元格。</p>\n<p><code>overflow: hidden</code>  隐藏超出单元格的部分。</p>\n<p><code>text-overflow: ellipsis</code> 将被隐藏的那部分用省略号代替。</p>\n<hr>"},{"title":"SQL Server导入超大SQL文件的方法","date":"2016-10-27T16:00:00.000Z","_content":"\n> 在实验室处理数据时，遇到一张20w记录的表需要恢复，初以为直接在dbms中直接导入sql即可，然而显示内存不够，无法导入。\n\n<!--more-->\n\n## 命令行导入\n\n用微软自带的sqlcmd工具，可以导入执行。以SQL Server 2014版本为例：\n\n1. Win+R 键入：cmd 命令，开启命令行工具；\n\n2. 键入：\n``` bash\ncd C:\\Program Files\\Microsoft SQL Server\\100\\Tools\\Binn （具体目录路径跟你安装的SQL位置有关）\n```\n\n3. 键入：\n``` bash\nsqlcmd -S localhost -U username -P 123456 -d dbname -i db.sql\n```\n\n参数说明：-S 服务器地址 -U 用户名 -P 密码  -d 数据库名称 -i 脚本文件路径\n\n> 建议将数据脚本文件拷到此目录，就只用写文件名，而不用写全路径了。注意参数大小写和空格符号。\n","source":"_posts/import-big-sql.md","raw":"---\ntitle: SQL Server导入超大SQL文件的方法\ndate: 2016-10-28\ncategories: 编程笔记\ntags: [SQL, SQL Server]\n---\n\n> 在实验室处理数据时，遇到一张20w记录的表需要恢复，初以为直接在dbms中直接导入sql即可，然而显示内存不够，无法导入。\n\n<!--more-->\n\n## 命令行导入\n\n用微软自带的sqlcmd工具，可以导入执行。以SQL Server 2014版本为例：\n\n1. Win+R 键入：cmd 命令，开启命令行工具；\n\n2. 键入：\n``` bash\ncd C:\\Program Files\\Microsoft SQL Server\\100\\Tools\\Binn （具体目录路径跟你安装的SQL位置有关）\n```\n\n3. 键入：\n``` bash\nsqlcmd -S localhost -U username -P 123456 -d dbname -i db.sql\n```\n\n参数说明：-S 服务器地址 -U 用户名 -P 密码  -d 数据库名称 -i 脚本文件路径\n\n> 建议将数据脚本文件拷到此目录，就只用写文件名，而不用写全路径了。注意参数大小写和空格符号。\n","slug":"import-big-sql","published":1,"updated":"2017-06-12T12:25:48.557Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3u525800004jsuroocykjaq","content":"<blockquote>\n<p>在实验室处理数据时，遇到一张20w记录的表需要恢复，初以为直接在dbms中直接导入sql即可，然而显示内存不够，无法导入。</p>\n</blockquote>\n<a id=\"more\"></a>\n<h2 id=\"命令行导入\"><a href=\"#命令行导入\" class=\"headerlink\" title=\"命令行导入\"></a>命令行导入</h2><p>用微软自带的sqlcmd工具，可以导入执行。以SQL Server 2014版本为例：</p>\n<ol>\n<li><p>Win+R 键入：cmd 命令，开启命令行工具；</p>\n</li>\n<li><p>键入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> C:\\Program Files\\Microsoft SQL Server\\100\\Tools\\Binn （具体目录路径跟你安装的SQL位置有关）</div></pre></td></tr></table></figure>\n</li>\n<li><p>键入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sqlcmd -S localhost -U username -P 123456 -d dbname -i db.sql</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>参数说明：-S 服务器地址 -U 用户名 -P 密码  -d 数据库名称 -i 脚本文件路径</p>\n<blockquote>\n<p>建议将数据脚本文件拷到此目录，就只用写文件名，而不用写全路径了。注意参数大小写和空格符号。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>在实验室处理数据时，遇到一张20w记录的表需要恢复，初以为直接在dbms中直接导入sql即可，然而显示内存不够，无法导入。</p>\n</blockquote>","more":"<h2 id=\"命令行导入\"><a href=\"#命令行导入\" class=\"headerlink\" title=\"命令行导入\"></a>命令行导入</h2><p>用微软自带的sqlcmd工具，可以导入执行。以SQL Server 2014版本为例：</p>\n<ol>\n<li><p>Win+R 键入：cmd 命令，开启命令行工具；</p>\n</li>\n<li><p>键入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> C:\\Program Files\\Microsoft SQL Server\\100\\Tools\\Binn （具体目录路径跟你安装的SQL位置有关）</div></pre></td></tr></table></figure>\n</li>\n<li><p>键入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sqlcmd -S localhost -U username -P 123456 -d dbname -i db.sql</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>参数说明：-S 服务器地址 -U 用户名 -P 密码  -d 数据库名称 -i 脚本文件路径</p>\n<blockquote>\n<p>建议将数据脚本文件拷到此目录，就只用写文件名，而不用写全路径了。注意参数大小写和空格符号。</p>\n</blockquote>"},{"title":"Hello Markdown","date":"2016-08-25T03:52:50.000Z","_content":"\n![Markdown](http://upload-images.jianshu.io/upload_images/1335096-c81fc640acb42a3d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n> We believe that writing is about content, about what you want to say – not about fancy formatting.  \n我们坚信写作写的是内容，所思所想，而不是花样格式。  \n— Ulysses for Mac\n\n<!--more-->\n\n## Markdown介绍\n\n> Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面。    ——*<a href=\"https://zh.wikipedia.org/wiki/Markdown\" > [ 维基百科 ]*\n\n## Markdown官方文档\n\n点击以下链接可以查看官方的Markdown语法规则文档\n> * [创始人 John Gruber 的 Markdown 语法说明](http://daringfireball.net/projects/markdown/syntax)\n* [Markdown中文版语法说明](http://wowubuntu.com/markdown/)\n\n## Markdown编辑器\n\n| Mac OX | Windows | Web |\n| --------------- |:-------------:|--------------------|\n| [Mou](http://25.io/mou/) | [Atom](http://atom.io/) |[简书](http://www.jianshu.com/)|\n| [Ulysses for Mac]() | [MarkdownPad](http://markdownpad.com/) |[csdn](http://write.blog.csdn.net/mdeditor)|\n\n## Markdown语法\n\n### 标题\n```\n# 一级标题\n## 二级标题\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题\n```\n> 在#号后加一个空格，这是最标准的 Markdown语法\n\n### 引用\n\n如果你需要引用一小段别处的句子，就要用引用的格式\n```\n> 这是一个引用\n```\n就会出现以下效果\n> 这是一个引用\n\n### 链接\n\n```\n[点击进入百度](http:\\\\baidu.com)\n```\n就会出现以下效果\n> [点击进入百度](http:\\\\baidu.com)\n\n**注意**：引用先定义 [ref_name]:url，然后在需要写入url的地方，这样使用[锚文本][ref_name]，通常的ref_name一般用数字表示，这样显得专业\n\n### 图片\n\n```\n![Markdown](\\uploads\\markdown.jpg)\n```\n就会出现以下效果\n> ![Markdown](\\uploads\\markdown.jpg)\n\n### 粗体与斜体\n\n```\n**这是粗体**\n*这是斜体*\n```\n就会出现以下效果\n> ** 这是粗体 **  \n*这是斜体*\n\n### 换行\n\n* 单一段落(`<p>`) 用一个空白行\n* 连续两个空格 会变成一个`<br>`\n* 连续3个`*`符号，然后是空行，表示`<hr>`横线\n\n### 有序列表\n\n有序列表直接在文字前加1. 2. 3. 符号要和文字之间加上一个字符的空格\n\n```\n1. 第一行\n2. 第二行\n3. 第三行\n```\n就会出现以下效果\n> 1. 第一行\n2. 第二行\n3. 第三行\n\n### 无序列表\n\n只需要在文字前加上 * 即可变为无序列表，符号要和文字之间加上一个字符的空格\n```\n* 第一行\n* 第二行\n* 第三行\n```\n就会出现以下效果\n> - 第一行\n- 第二行\n- 第三行\n\n### 表格\n\n最麻烦最累人的格式\n```\n| Tables        | Are           | Cool  |\n| ------------- |:-------------:| -----:|\n| col 3 is      | right-aligned | $1600 |\n| col 2 is      | centered      |   $12 |\n| zebra stripes | are neat      |    $1 |\n```\n就会出现以下效果\n\n| Tables        | Are           | Cool  |\n| ------------- |:-------------:| -----:|\n| col 3 is      | right-aligned | $1600 |\n| col 2 is      | centered      |   $12 |\n| zebra stripes | are neat      |    $1 |\n\n### 代码框\n\n作为程序猿，需要在文章里优雅的引用代码框，只需要用三个 \\` (反引号)包裹代码块\n\n实例如下：\n\n``` javascript\nvar canvas = document.getElementById(\"canvas\");\nvar context = canvas.getContext(\"2d\");\n```\n\n### 特殊符号\n\n - 用`\\`来转义，表示文本中的markdown符号\n - 可以在文本中直接使用html标签，但是要注意在使用的时候，前后加上空行\n\n***\n\n至此，已熟悉Markdown入门级语法，想要了解更多功能，请参见官方文档。\n\n***\n","source":"_posts/markdown-tutorial.md","raw":"---\ntitle: Hello Markdown\ncategories: 编程笔记\ntags: Markdown\ndate: 2016-8-25 11:52:50\n---\n\n![Markdown](http://upload-images.jianshu.io/upload_images/1335096-c81fc640acb42a3d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n> We believe that writing is about content, about what you want to say – not about fancy formatting.  \n我们坚信写作写的是内容，所思所想，而不是花样格式。  \n— Ulysses for Mac\n\n<!--more-->\n\n## Markdown介绍\n\n> Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面。    ——*<a href=\"https://zh.wikipedia.org/wiki/Markdown\" > [ 维基百科 ]*\n\n## Markdown官方文档\n\n点击以下链接可以查看官方的Markdown语法规则文档\n> * [创始人 John Gruber 的 Markdown 语法说明](http://daringfireball.net/projects/markdown/syntax)\n* [Markdown中文版语法说明](http://wowubuntu.com/markdown/)\n\n## Markdown编辑器\n\n| Mac OX | Windows | Web |\n| --------------- |:-------------:|--------------------|\n| [Mou](http://25.io/mou/) | [Atom](http://atom.io/) |[简书](http://www.jianshu.com/)|\n| [Ulysses for Mac]() | [MarkdownPad](http://markdownpad.com/) |[csdn](http://write.blog.csdn.net/mdeditor)|\n\n## Markdown语法\n\n### 标题\n```\n# 一级标题\n## 二级标题\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题\n```\n> 在#号后加一个空格，这是最标准的 Markdown语法\n\n### 引用\n\n如果你需要引用一小段别处的句子，就要用引用的格式\n```\n> 这是一个引用\n```\n就会出现以下效果\n> 这是一个引用\n\n### 链接\n\n```\n[点击进入百度](http:\\\\baidu.com)\n```\n就会出现以下效果\n> [点击进入百度](http:\\\\baidu.com)\n\n**注意**：引用先定义 [ref_name]:url，然后在需要写入url的地方，这样使用[锚文本][ref_name]，通常的ref_name一般用数字表示，这样显得专业\n\n### 图片\n\n```\n![Markdown](\\uploads\\markdown.jpg)\n```\n就会出现以下效果\n> ![Markdown](\\uploads\\markdown.jpg)\n\n### 粗体与斜体\n\n```\n**这是粗体**\n*这是斜体*\n```\n就会出现以下效果\n> ** 这是粗体 **  \n*这是斜体*\n\n### 换行\n\n* 单一段落(`<p>`) 用一个空白行\n* 连续两个空格 会变成一个`<br>`\n* 连续3个`*`符号，然后是空行，表示`<hr>`横线\n\n### 有序列表\n\n有序列表直接在文字前加1. 2. 3. 符号要和文字之间加上一个字符的空格\n\n```\n1. 第一行\n2. 第二行\n3. 第三行\n```\n就会出现以下效果\n> 1. 第一行\n2. 第二行\n3. 第三行\n\n### 无序列表\n\n只需要在文字前加上 * 即可变为无序列表，符号要和文字之间加上一个字符的空格\n```\n* 第一行\n* 第二行\n* 第三行\n```\n就会出现以下效果\n> - 第一行\n- 第二行\n- 第三行\n\n### 表格\n\n最麻烦最累人的格式\n```\n| Tables        | Are           | Cool  |\n| ------------- |:-------------:| -----:|\n| col 3 is      | right-aligned | $1600 |\n| col 2 is      | centered      |   $12 |\n| zebra stripes | are neat      |    $1 |\n```\n就会出现以下效果\n\n| Tables        | Are           | Cool  |\n| ------------- |:-------------:| -----:|\n| col 3 is      | right-aligned | $1600 |\n| col 2 is      | centered      |   $12 |\n| zebra stripes | are neat      |    $1 |\n\n### 代码框\n\n作为程序猿，需要在文章里优雅的引用代码框，只需要用三个 \\` (反引号)包裹代码块\n\n实例如下：\n\n``` javascript\nvar canvas = document.getElementById(\"canvas\");\nvar context = canvas.getContext(\"2d\");\n```\n\n### 特殊符号\n\n - 用`\\`来转义，表示文本中的markdown符号\n - 可以在文本中直接使用html标签，但是要注意在使用的时候，前后加上空行\n\n***\n\n至此，已熟悉Markdown入门级语法，想要了解更多功能，请参见官方文档。\n\n***\n","slug":"markdown-tutorial","published":1,"updated":"2017-06-12T12:25:48.559Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3u525860005jsuryj7o87qm","content":"<p><img src=\"http://upload-images.jianshu.io/upload_images/1335096-c81fc640acb42a3d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Markdown\"></p>\n<blockquote>\n<p>We believe that writing is about content, about what you want to say – not about fancy formatting.<br>我们坚信写作写的是内容，所思所想，而不是花样格式。<br>— Ulysses for Mac</p>\n</blockquote>\n<a id=\"more\"></a>\n<h2 id=\"Markdown介绍\"><a href=\"#Markdown介绍\" class=\"headerlink\" title=\"Markdown介绍\"></a>Markdown介绍</h2><blockquote>\n<p>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面。    ——<em><a href=\"https://zh.wikipedia.org/wiki/Markdown\" target=\"_blank\" rel=\"external\"> [ 维基百科 ]</a></em></p>\n</blockquote>\n<h2 id=\"Markdown官方文档\"><a href=\"#Markdown官方文档\" class=\"headerlink\" title=\"Markdown官方文档\"></a>Markdown官方文档</h2><p>点击以下链接可以查看官方的Markdown语法规则文档</p>\n<blockquote>\n<ul>\n<li><a href=\"http://daringfireball.net/projects/markdown/syntax\" target=\"_blank\" rel=\"external\">创始人 John Gruber 的 Markdown 语法说明</a></li>\n<li><a href=\"http://wowubuntu.com/markdown/\" target=\"_blank\" rel=\"external\">Markdown中文版语法说明</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Markdown编辑器\"><a href=\"#Markdown编辑器\" class=\"headerlink\" title=\"Markdown编辑器\"></a>Markdown编辑器</h2><table>\n<thead>\n<tr>\n<th>Mac OX</th>\n<th style=\"text-align:center\">Windows</th>\n<th>Web</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"http://25.io/mou/\" target=\"_blank\" rel=\"external\">Mou</a></td>\n<td style=\"text-align:center\"><a href=\"http://atom.io/\" target=\"_blank\" rel=\"external\">Atom</a></td>\n<td><a href=\"http://www.jianshu.com/\" target=\"_blank\" rel=\"external\">简书</a></td>\n</tr>\n<tr>\n<td><a href=\"\">Ulysses for Mac</a></td>\n<td style=\"text-align:center\"><a href=\"http://markdownpad.com/\" target=\"_blank\" rel=\"external\">MarkdownPad</a></td>\n<td><a href=\"http://write.blog.csdn.net/mdeditor\" target=\"_blank\" rel=\"external\">csdn</a></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Markdown语法\"><a href=\"#Markdown语法\" class=\"headerlink\" title=\"Markdown语法\"></a>Markdown语法</h2><h3 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 一级标题</div><div class=\"line\">## 二级标题</div><div class=\"line\">### 三级标题</div><div class=\"line\">#### 四级标题</div><div class=\"line\">##### 五级标题</div><div class=\"line\">###### 六级标题</div></pre></td></tr></table></figure>\n<blockquote>\n<p>在#号后加一个空格，这是最标准的 Markdown语法</p>\n</blockquote>\n<h3 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h3><p>如果你需要引用一小段别处的句子，就要用引用的格式<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; 这是一个引用</div></pre></td></tr></table></figure></p>\n<p>就会出现以下效果</p>\n<blockquote>\n<p>这是一个引用</p>\n</blockquote>\n<h3 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[点击进入百度](http:\\\\baidu.com)</div></pre></td></tr></table></figure>\n<p>就会出现以下效果</p>\n<blockquote>\n<p><a href=\"http:\\\\baidu.com\" target=\"_blank\" rel=\"external\">点击进入百度</a></p>\n</blockquote>\n<p><strong>注意</strong>：引用先定义 [ref_name]:url，然后在需要写入url的地方，这样使用[锚文本][ref_name]，通常的ref_name一般用数字表示，这样显得专业</p>\n<h3 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">![Markdown](\\uploads\\markdown.jpg)</div></pre></td></tr></table></figure>\n<p>就会出现以下效果</p>\n<blockquote>\n<p><img src=\"\\uploads\\markdown.jpg\" alt=\"Markdown\"></p>\n</blockquote>\n<h3 id=\"粗体与斜体\"><a href=\"#粗体与斜体\" class=\"headerlink\" title=\"粗体与斜体\"></a>粗体与斜体</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">**这是粗体**</div><div class=\"line\">*这是斜体*</div></pre></td></tr></table></figure>\n<p>就会出现以下效果</p>\n<blockquote>\n<p><strong> 这是粗体 </strong><br><em>这是斜体</em></p>\n</blockquote>\n<h3 id=\"换行\"><a href=\"#换行\" class=\"headerlink\" title=\"换行\"></a>换行</h3><ul>\n<li>单一段落(<code>&lt;p&gt;</code>) 用一个空白行</li>\n<li>连续两个空格 会变成一个<code>&lt;br&gt;</code></li>\n<li>连续3个<code>*</code>符号，然后是空行，表示<code>&lt;hr&gt;</code>横线</li>\n</ul>\n<h3 id=\"有序列表\"><a href=\"#有序列表\" class=\"headerlink\" title=\"有序列表\"></a>有序列表</h3><p>有序列表直接在文字前加1. 2. 3. 符号要和文字之间加上一个字符的空格</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">1. 第一行</div><div class=\"line\">2. 第二行</div><div class=\"line\">3. 第三行</div></pre></td></tr></table></figure>\n<p>就会出现以下效果</p>\n<blockquote>\n<ol>\n<li>第一行</li>\n<li>第二行</li>\n<li>第三行</li>\n</ol>\n</blockquote>\n<h3 id=\"无序列表\"><a href=\"#无序列表\" class=\"headerlink\" title=\"无序列表\"></a>无序列表</h3><p>只需要在文字前加上 * 即可变为无序列表，符号要和文字之间加上一个字符的空格<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">* 第一行</div><div class=\"line\">* 第二行</div><div class=\"line\">* 第三行</div></pre></td></tr></table></figure></p>\n<p>就会出现以下效果</p>\n<blockquote>\n<ul>\n<li>第一行</li>\n<li>第二行</li>\n<li>第三行</li>\n</ul>\n</blockquote>\n<h3 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h3><p>最麻烦最累人的格式<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">| Tables        | Are           | Cool  |</div><div class=\"line\">| ------------- |:-------------:| -----:|</div><div class=\"line\">| col 3 is      | right-aligned | $1600 |</div><div class=\"line\">| col 2 is      | centered      |   $12 |</div><div class=\"line\">| zebra stripes | are neat      |    $1 |</div></pre></td></tr></table></figure></p>\n<p>就会出现以下效果</p>\n<table>\n<thead>\n<tr>\n<th>Tables</th>\n<th style=\"text-align:center\">Are</th>\n<th style=\"text-align:right\">Cool</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>col 3 is</td>\n<td style=\"text-align:center\">right-aligned</td>\n<td style=\"text-align:right\">$1600</td>\n</tr>\n<tr>\n<td>col 2 is</td>\n<td style=\"text-align:center\">centered</td>\n<td style=\"text-align:right\">$12</td>\n</tr>\n<tr>\n<td>zebra stripes</td>\n<td style=\"text-align:center\">are neat</td>\n<td style=\"text-align:right\">$1</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"代码框\"><a href=\"#代码框\" class=\"headerlink\" title=\"代码框\"></a>代码框</h3><p>作为程序猿，需要在文章里优雅的引用代码框，只需要用三个 ` (反引号)包裹代码块</p>\n<p>实例如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> canvas = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"canvas\"</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> context = canvas.getContext(<span class=\"string\">\"2d\"</span>);</div></pre></td></tr></table></figure>\n<h3 id=\"特殊符号\"><a href=\"#特殊符号\" class=\"headerlink\" title=\"特殊符号\"></a>特殊符号</h3><ul>\n<li>用<code>\\</code>来转义，表示文本中的markdown符号</li>\n<li>可以在文本中直接使用html标签，但是要注意在使用的时候，前后加上空行</li>\n</ul>\n<hr>\n<p>至此，已熟悉Markdown入门级语法，想要了解更多功能，请参见官方文档。</p>\n<hr>\n","site":{"data":{}},"excerpt":"<p><img src=\"http://upload-images.jianshu.io/upload_images/1335096-c81fc640acb42a3d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Markdown\"></p>\n<blockquote>\n<p>We believe that writing is about content, about what you want to say – not about fancy formatting.<br>我们坚信写作写的是内容，所思所想，而不是花样格式。<br>— Ulysses for Mac</p>\n</blockquote>","more":"<h2 id=\"Markdown介绍\"><a href=\"#Markdown介绍\" class=\"headerlink\" title=\"Markdown介绍\"></a>Markdown介绍</h2><blockquote>\n<p>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面。    ——<em><a href=\"https://zh.wikipedia.org/wiki/Markdown\" target=\"_blank\" rel=\"external\"> [ 维基百科 ]</a></em></p>\n</blockquote>\n<h2 id=\"Markdown官方文档\"><a href=\"#Markdown官方文档\" class=\"headerlink\" title=\"Markdown官方文档\"></a>Markdown官方文档</h2><p>点击以下链接可以查看官方的Markdown语法规则文档</p>\n<blockquote>\n<ul>\n<li><a href=\"http://daringfireball.net/projects/markdown/syntax\" target=\"_blank\" rel=\"external\">创始人 John Gruber 的 Markdown 语法说明</a></li>\n<li><a href=\"http://wowubuntu.com/markdown/\" target=\"_blank\" rel=\"external\">Markdown中文版语法说明</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Markdown编辑器\"><a href=\"#Markdown编辑器\" class=\"headerlink\" title=\"Markdown编辑器\"></a>Markdown编辑器</h2><table>\n<thead>\n<tr>\n<th>Mac OX</th>\n<th style=\"text-align:center\">Windows</th>\n<th>Web</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"http://25.io/mou/\" target=\"_blank\" rel=\"external\">Mou</a></td>\n<td style=\"text-align:center\"><a href=\"http://atom.io/\" target=\"_blank\" rel=\"external\">Atom</a></td>\n<td><a href=\"http://www.jianshu.com/\" target=\"_blank\" rel=\"external\">简书</a></td>\n</tr>\n<tr>\n<td><a href=\"\">Ulysses for Mac</a></td>\n<td style=\"text-align:center\"><a href=\"http://markdownpad.com/\" target=\"_blank\" rel=\"external\">MarkdownPad</a></td>\n<td><a href=\"http://write.blog.csdn.net/mdeditor\" target=\"_blank\" rel=\"external\">csdn</a></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Markdown语法\"><a href=\"#Markdown语法\" class=\"headerlink\" title=\"Markdown语法\"></a>Markdown语法</h2><h3 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 一级标题</div><div class=\"line\">## 二级标题</div><div class=\"line\">### 三级标题</div><div class=\"line\">#### 四级标题</div><div class=\"line\">##### 五级标题</div><div class=\"line\">###### 六级标题</div></pre></td></tr></table></figure>\n<blockquote>\n<p>在#号后加一个空格，这是最标准的 Markdown语法</p>\n</blockquote>\n<h3 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h3><p>如果你需要引用一小段别处的句子，就要用引用的格式<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; 这是一个引用</div></pre></td></tr></table></figure></p>\n<p>就会出现以下效果</p>\n<blockquote>\n<p>这是一个引用</p>\n</blockquote>\n<h3 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[点击进入百度](http:\\\\baidu.com)</div></pre></td></tr></table></figure>\n<p>就会出现以下效果</p>\n<blockquote>\n<p><a href=\"http:\\\\baidu.com\" target=\"_blank\" rel=\"external\">点击进入百度</a></p>\n</blockquote>\n<p><strong>注意</strong>：引用先定义 [ref_name]:url，然后在需要写入url的地方，这样使用[锚文本][ref_name]，通常的ref_name一般用数字表示，这样显得专业</p>\n<h3 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">![Markdown](\\uploads\\markdown.jpg)</div></pre></td></tr></table></figure>\n<p>就会出现以下效果</p>\n<blockquote>\n<p><img src=\"\\uploads\\markdown.jpg\" alt=\"Markdown\"></p>\n</blockquote>\n<h3 id=\"粗体与斜体\"><a href=\"#粗体与斜体\" class=\"headerlink\" title=\"粗体与斜体\"></a>粗体与斜体</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">**这是粗体**</div><div class=\"line\">*这是斜体*</div></pre></td></tr></table></figure>\n<p>就会出现以下效果</p>\n<blockquote>\n<p><strong> 这是粗体 </strong><br><em>这是斜体</em></p>\n</blockquote>\n<h3 id=\"换行\"><a href=\"#换行\" class=\"headerlink\" title=\"换行\"></a>换行</h3><ul>\n<li>单一段落(<code>&lt;p&gt;</code>) 用一个空白行</li>\n<li>连续两个空格 会变成一个<code>&lt;br&gt;</code></li>\n<li>连续3个<code>*</code>符号，然后是空行，表示<code>&lt;hr&gt;</code>横线</li>\n</ul>\n<h3 id=\"有序列表\"><a href=\"#有序列表\" class=\"headerlink\" title=\"有序列表\"></a>有序列表</h3><p>有序列表直接在文字前加1. 2. 3. 符号要和文字之间加上一个字符的空格</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">1. 第一行</div><div class=\"line\">2. 第二行</div><div class=\"line\">3. 第三行</div></pre></td></tr></table></figure>\n<p>就会出现以下效果</p>\n<blockquote>\n<ol>\n<li>第一行</li>\n<li>第二行</li>\n<li>第三行</li>\n</ol>\n</blockquote>\n<h3 id=\"无序列表\"><a href=\"#无序列表\" class=\"headerlink\" title=\"无序列表\"></a>无序列表</h3><p>只需要在文字前加上 * 即可变为无序列表，符号要和文字之间加上一个字符的空格<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">* 第一行</div><div class=\"line\">* 第二行</div><div class=\"line\">* 第三行</div></pre></td></tr></table></figure></p>\n<p>就会出现以下效果</p>\n<blockquote>\n<ul>\n<li>第一行</li>\n<li>第二行</li>\n<li>第三行</li>\n</ul>\n</blockquote>\n<h3 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h3><p>最麻烦最累人的格式<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">| Tables        | Are           | Cool  |</div><div class=\"line\">| ------------- |:-------------:| -----:|</div><div class=\"line\">| col 3 is      | right-aligned | $1600 |</div><div class=\"line\">| col 2 is      | centered      |   $12 |</div><div class=\"line\">| zebra stripes | are neat      |    $1 |</div></pre></td></tr></table></figure></p>\n<p>就会出现以下效果</p>\n<table>\n<thead>\n<tr>\n<th>Tables</th>\n<th style=\"text-align:center\">Are</th>\n<th style=\"text-align:right\">Cool</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>col 3 is</td>\n<td style=\"text-align:center\">right-aligned</td>\n<td style=\"text-align:right\">$1600</td>\n</tr>\n<tr>\n<td>col 2 is</td>\n<td style=\"text-align:center\">centered</td>\n<td style=\"text-align:right\">$12</td>\n</tr>\n<tr>\n<td>zebra stripes</td>\n<td style=\"text-align:center\">are neat</td>\n<td style=\"text-align:right\">$1</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"代码框\"><a href=\"#代码框\" class=\"headerlink\" title=\"代码框\"></a>代码框</h3><p>作为程序猿，需要在文章里优雅的引用代码框，只需要用三个 ` (反引号)包裹代码块</p>\n<p>实例如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> canvas = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"canvas\"</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> context = canvas.getContext(<span class=\"string\">\"2d\"</span>);</div></pre></td></tr></table></figure>\n<h3 id=\"特殊符号\"><a href=\"#特殊符号\" class=\"headerlink\" title=\"特殊符号\"></a>特殊符号</h3><ul>\n<li>用<code>\\</code>来转义，表示文本中的markdown符号</li>\n<li>可以在文本中直接使用html标签，但是要注意在使用的时候，前后加上空行</li>\n</ul>\n<hr>\n<p>至此，已熟悉Markdown入门级语法，想要了解更多功能，请参见官方文档。</p>\n<hr>"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n<!-- more -->\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n<!-- more -->\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2017-06-09T14:58:56.015Z","updated":"2017-06-10T03:23:21.257Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3u525an000pjsurz1p3lg5k","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<a id=\"more\"></a>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>","more":"<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>"},{"title":"分分钟学会Python3","date":"2016-10-27T16:00:00.000Z","_content":"\nPython was created by Guido Van Rossum in the early 90s. It is now one of the most popular\nlanguages in existence. I fell in love with Python for its syntactic clarity. It's basically\nexecutable pseudocode.\n\nFeedback would be highly appreciated! You can reach me at [@louiedinh](http://twitter.com/louiedinh) or louiedinh [at] [google's email service]\n\nNote: This article applies to Python 3 specifically. Check out [here](http://learnxinyminutes.com/docs/python/) if you want to learn the old Python 2.7\n\n<!--more-->\n\n---\n语言: python3  \n贡献者:  \n    - [\"Louie Dinh\", \"http://pythonpracticeprojects.com\"]  \n    - [\"Steven Basart\", \"http://github.com/xksteven\"]  \n    - [\"Andre Polykanine\", \"https://github.com/Oire\"]  \n    - [\"Zachary Ferguson\", \"http://github.com/zfergus2\"]  \n    - [\"evuez\", \"http://github.com/evuez\"]  \nfilename: learnpython3.py\n译者:  \n    - [\"ChangingFond\", \"http://blog.fangchengjin.cn\"]\n---\n\n```python\n\n# Single line comments start with a number symbol.\n\n\"\"\" Multiline strings can be written\n    using three \"s, and are often used\n    as comments\n\"\"\"\n\n####################################################\n## 1. Primitive Datatypes and Operators\n####################################################\n\n# You have numbers\n3  # => 3\n\n# Math is what you would expect\n1 + 1   # => 2\n8 - 1   # => 7\n10 * 2  # => 20\n\n# Except division which returns floats, real numbers, by default\n35 / 5  # => 7.0\n\n# Result of integer division truncated down both for positive and negative.\n5 // 3       # => 1\n5.0 // 3.0   # => 1.0 # works on floats too\n-5 // 3      # => -2\n-5.0 // 3.0  # => -2.0\n\n# When you use a float, results are floats\n3 * 2.0  # => 6.0\n\n# Modulo operation\n7 % 3  # => 1\n\n# Exponentiation (x**y, x to the yth power)\n2**4  # => 16\n\n# Enforce precedence with parentheses\n(1 + 3) * 2  # => 8\n\n# Boolean values are primitives (Note: the capitalization)\nTrue\nFalse\n\n# negate with not\nnot True   # => False\nnot False  # => True\n\n# Boolean Operators\n# Note \"and\" and \"or\" are case-sensitive\nTrue and False  # => False\nFalse or True   # => True\n\n# Note using Bool operators with ints\n0 and 2     # => 0\n-5 or 0     # => -5\n0 == False  # => True\n2 == True   # => False\n1 == True   # => True\n\n# Equality is ==\n1 == 1  # => True\n2 == 1  # => False\n\n# Inequality is !=\n1 != 1  # => False\n2 != 1  # => True\n\n# More comparisons\n1 < 10  # => True\n1 > 10  # => False\n2 <= 2  # => True\n2 >= 2  # => True\n\n# Comparisons can be chained!\n1 < 2 < 3  # => True\n2 < 3 < 2  # => False\n\n# (is vs. ==) is checks if two variables refer to the same object, but == checks\n# if the objects pointed to have the same values.\na = [1, 2, 3, 4]  # Point a at a new list, [1, 2, 3, 4]\nb = a             # Point b at what a is pointing to\nb is a            # => True, a and b refer to the same object\nb == a            # => True, a's and b's objects are equal\nb = [1, 2, 3, 4]  # Point b at a new list, [1, 2, 3, 4]\nb is a            # => False, a and b do not refer to the same object\nb == a            # => True, a's and b's objects are equal\n\n# Strings are created with \" or '\n\"This is a string.\"\n'This is also a string.'\n\n# Strings can be added too! But try not to do this.\n\"Hello \" + \"world!\"  # => \"Hello world!\"\n# Strings can be added without using '+'\n\"Hello \" \"world!\"    # => \"Hello world!\"\n\n# A string can be treated like a list of characters\n\"This is a string\"[0]  # => 'T'\n\n# You can find the length of a string\nlen(\"This is a string\")  # => 16\n\n# .format can be used to format strings, like this:\n\"{} can be {}\".format(\"Strings\", \"interpolated\")  # => \"Strings can be interpolated\"\n\n# You can repeat the formatting arguments to save some typing.\n\"{0} be nimble, {0} be quick, {0} jump over the {1}\".format(\"Jack\", \"candle stick\")\n# => \"Jack be nimble, Jack be quick, Jack jump over the candle stick\"\n\n# You can use keywords if you don't want to count.\n\"{name} wants to eat {food}\".format(name=\"Bob\", food=\"lasagna\")  # => \"Bob wants to eat lasagna\"\n\n# If your Python 3 code also needs to run on Python 2.5 and below, you can also\n# still use the old style of formatting:\n\"%s can be %s the %s way\" % (\"Strings\", \"interpolated\", \"old\")  # => \"Strings can be interpolated the old way\"\n\n\n# None is an object\nNone  # => None\n\n# Don't use the equality \"==\" symbol to compare objects to None\n# Use \"is\" instead. This checks for equality of object identity.\n\"etc\" is None  # => False\nNone is None   # => True\n\n# None, 0, and empty strings/lists/dicts all evaluate to False.\n# All other values are True\nbool(0)   # => False\nbool(\"\")  # => False\nbool([])  # => False\nbool({})  # => False\n\n\n####################################################\n## 2. Variables and Collections\n####################################################\n\n# Python has a print function\nprint(\"I'm Python. Nice to meet you!\")  # => I'm Python. Nice to meet you!\n\n# By default the print function also prints out a newline at the end.\n# Use the optional argument end to change the end character.\nprint(\"Hello, World\", end=\"!\")  # => Hello, World!\n\n# Simple way to get input data from console\ninput_string_var = input(\"Enter some data: \") # Returns the data as a string\n# Note: In earlier versions of Python, input() method was named as raw_input()\n\n# No need to declare variables before assigning to them.\n# Convention is to use lower_case_with_underscores\nsome_var = 5\nsome_var  # => 5\n\n# Accessing a previously unassigned variable is an exception.\n# See Control Flow to learn more about exception handling.\nsome_unknown_var  # Raises a NameError\n\n# if can be used as an expression\n# Equivalent of C's '?:' ternary operator\n\"yahoo!\" if 3 > 2 else 2  # => \"yahoo!\"\n\n# Lists store sequences\nli = []\n# You can start with a prefilled list\nother_li = [4, 5, 6]\n\n# Add stuff to the end of a list with append\nli.append(1)    # li is now [1]\nli.append(2)    # li is now [1, 2]\nli.append(4)    # li is now [1, 2, 4]\nli.append(3)    # li is now [1, 2, 4, 3]\n# Remove from the end with pop\nli.pop()        # => 3 and li is now [1, 2, 4]\n# Let's put it back\nli.append(3)    # li is now [1, 2, 4, 3] again.\n\n# Access a list like you would any array\nli[0]   # => 1\n# Look at the last element\nli[-1]  # => 3\n\n# Looking out of bounds is an IndexError\nli[4]  # Raises an IndexError\n\n# You can look at ranges with slice syntax.\n# (It's a closed/open range for you mathy types.)\nli[1:3]   # => [2, 4]\n# Omit the beginning\nli[2:]    # => [4, 3]\n# Omit the end\nli[:3]    # => [1, 2, 4]\n# Select every second entry\nli[::2]   # =>[1, 4]\n# Return a reversed copy of the list\nli[::-1]  # => [3, 4, 2, 1]\n# Use any combination of these to make advanced slices\n# li[start:end:step]\n\n# Make a one layer deep copy using slices\nli2 = li[:]  # => li2 = [1, 2, 4, 3] but (li2 is li) will result in false.\n\n# Remove arbitrary elements from a list with \"del\"\ndel li[2]  # li is now [1, 2, 3]\n\n# Remove first occurrence of a value\nli.remove(2)  # li is now [1, 3]\nli.remove(2)  # Raises a ValueError as 2 is not in the list\n\n# Insert an element at a specific index\nli.insert(1, 2)  # li is now [1, 2, 3] again\n\n# Get the index of the first item found matching the argument\nli.index(2)  # => 1\nli.index(4)  # Raises a ValueError as 4 is not in the list\n\n# You can add lists\n# Note: values for li and for other_li are not modified.\nli + other_li  # => [1, 2, 3, 4, 5, 6]\n\n# Concatenate lists with \"extend()\"\nli.extend(other_li)  # Now li is [1, 2, 3, 4, 5, 6]\n\n# Check for existence in a list with \"in\"\n1 in li  # => True\n\n# Examine the length with \"len()\"\nlen(li)  # => 6\n\n\n# Tuples are like lists but are immutable.\ntup = (1, 2, 3)\ntup[0]      # => 1\ntup[0] = 3  # Raises a TypeError\n\n# Note that a tuple of length one has to have a comma after the last element but\n# tuples of other lengths, even zero, do not.\ntype((1))   # => <class 'int'>\ntype((1,))  # => <class 'tuple'>\ntype(())    # => <class 'tuple'>\n\n# You can do most of the list operations on tuples too\nlen(tup)         # => 3\ntup + (4, 5, 6)  # => (1, 2, 3, 4, 5, 6)\ntup[:2]          # => (1, 2)\n2 in tup         # => True\n\n# You can unpack tuples (or lists) into variables\na, b, c = (1, 2, 3)  # a is now 1, b is now 2 and c is now 3\n# You can also do extended unpacking\na, *b, c = (1, 2, 3, 4)  # a is now 1, b is now [2, 3] and c is now 4\n# Tuples are created by default if you leave out the parentheses\nd, e, f = 4, 5, 6\n# Now look how easy it is to swap two values\ne, d = d, e  # d is now 5 and e is now 4\n\n\n# Dictionaries store mappings\nempty_dict = {}\n# Here is a prefilled dictionary\nfilled_dict = {\"one\": 1, \"two\": 2, \"three\": 3}\n\n# Note keys for dictionaries have to be immutable types. This is to ensure that\n# the key can be converted to a constant hash value for quick look-ups.\n# Immutable types include ints, floats, strings, tuples.\ninvalid_dict = {[1,2,3]: \"123\"}  # => Raises a TypeError: unhashable type: 'list'\nvalid_dict = {(1,2,3):[1,2,3]}   # Values can be of any type, however.\n\n# Look up values with []\nfilled_dict[\"one\"]  # => 1\n\n# Get all keys as an iterable with \"keys()\". We need to wrap the call in list()\n# to turn it into a list. We'll talk about those later.  Note - Dictionary key\n# ordering is not guaranteed. Your results might not match this exactly.\nlist(filled_dict.keys())  # => [\"three\", \"two\", \"one\"]\n\n\n# Get all values as an iterable with \"values()\". Once again we need to wrap it\n# in list() to get it out of the iterable. Note - Same as above regarding key\n# ordering.\nlist(filled_dict.values())  # => [3, 2, 1]\n\n\n# Check for existence of keys in a dictionary with \"in\"\n\"one\" in filled_dict  # => True\n1 in filled_dict      # => False\n\n# Looking up a non-existing key is a KeyError\nfilled_dict[\"four\"]  # KeyError\n\n# Use \"get()\" method to avoid the KeyError\nfilled_dict.get(\"one\")      # => 1\nfilled_dict.get(\"four\")     # => None\n# The get method supports a default argument when the value is missing\nfilled_dict.get(\"one\", 4)   # => 1\nfilled_dict.get(\"four\", 4)  # => 4\n\n# \"setdefault()\" inserts into a dictionary only if the given key isn't present\nfilled_dict.setdefault(\"five\", 5)  # filled_dict[\"five\"] is set to 5\nfilled_dict.setdefault(\"five\", 6)  # filled_dict[\"five\"] is still 5\n\n# Adding to a dictionary\nfilled_dict.update({\"four\":4})  # => {\"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4}\n#filled_dict[\"four\"] = 4        #another way to add to dict\n\n# Remove keys from a dictionary with del\ndel filled_dict[\"one\"]  # Removes the key \"one\" from filled dict\n\n# From Python 3.5 you can also use the additional unpacking options\n{'a': 1, **{'b': 2}}  # => {'a': 1, 'b': 2}\n{'a': 1, **{'a': 2}}  # => {'a': 2}\n\n\n\n# Sets store ... well sets\nempty_set = set()\n# Initialize a set with a bunch of values. Yeah, it looks a bit like a dict. Sorry.\nsome_set = {1, 1, 2, 2, 3, 4}  # some_set is now {1, 2, 3, 4}\n\n# Similar to keys of a dictionary, elements of a set have to be immutable.\ninvalid_set = {[1], 1}  # => Raises a TypeError: unhashable type: 'list'\nvalid_set = {(1,), 1}\n\n# Can set new variables to a set\nfilled_set = some_set\n\n# Add one more item to the set\nfilled_set.add(5)  # filled_set is now {1, 2, 3, 4, 5}\n\n# Do set intersection with &\nother_set = {3, 4, 5, 6}\nfilled_set & other_set  # => {3, 4, 5}\n\n# Do set union with |\nfilled_set | other_set  # => {1, 2, 3, 4, 5, 6}\n\n# Do set difference with -\n{1, 2, 3, 4} - {2, 3, 5}  # => {1, 4}\n\n# Do set symmetric difference with ^\n{1, 2, 3, 4} ^ {2, 3, 5}  # => {1, 4, 5}\n\n# Check if set on the left is a superset of set on the right\n{1, 2} >= {1, 2, 3} # => False\n\n# Check if set on the left is a subset of set on the right\n{1, 2} <= {1, 2, 3} # => True\n\n# Check for existence in a set with in\n2 in filled_set   # => True\n10 in filled_set  # => False\n\n\n\n####################################################\n## 3. Control Flow and Iterables\n####################################################\n\n# Let's just make a variable\nsome_var = 5\n\n# Here is an if statement. Indentation is significant in python!\n# prints \"some_var is smaller than 10\"\nif some_var > 10:\n    print(\"some_var is totally bigger than 10.\")\nelif some_var < 10:    # This elif clause is optional.\n    print(\"some_var is smaller than 10.\")\nelse:                  # This is optional too.\n    print(\"some_var is indeed 10.\")\n\n\n\"\"\"\nFor loops iterate over lists\nprints:\n    dog is a mammal\n    cat is a mammal\n    mouse is a mammal\n\"\"\"\nfor animal in [\"dog\", \"cat\", \"mouse\"]:\n    # You can use format() to interpolate formatted strings\n    print(\"{} is a mammal\".format(animal))\n\n\"\"\"\n\"range(number)\" returns an iterable of numbers\nfrom zero to the given number\nprints:\n    0\n    1\n    2\n    3\n\"\"\"\nfor i in range(4):\n    print(i)\n\n\"\"\"\n\"range(lower, upper)\" returns an iterable of numbers\nfrom the lower number to the upper number\nprints:\n    4\n    5\n    6\n    7\n\"\"\"\nfor i in range(4, 8):\n    print(i)\n\n\"\"\"\n\"range(lower, upper, step)\" returns an iterable of numbers\nfrom the lower number to the upper number, while incrementing\nby step. If step is not indicated, the default value is 1.\nprints:\n    4\n    6\n\"\"\"\nfor i in range(4, 8, 2):\n    print(i)\n\"\"\"\n\nWhile loops go until a condition is no longer met.\nprints:\n    0\n    1\n    2\n    3\n\"\"\"\nx = 0\nwhile x < 4:\n    print(x)\n    x += 1  # Shorthand for x = x + 1\n\n# Handle exceptions with a try/except block\ntry:\n    # Use \"raise\" to raise an error\n    raise IndexError(\"This is an index error\")\nexcept IndexError as e:\n    pass                 # Pass is just a no-op. Usually you would do recovery here.\nexcept (TypeError, NameError):\n    pass                 # Multiple exceptions can be handled together, if required.\nelse:                    # Optional clause to the try/except block. Must follow all except blocks\n    print(\"All good!\")   # Runs only if the code in try raises no exceptions\nfinally:                 #  Execute under all circumstances\n    print(\"We can clean up resources here\")\n\n# Instead of try/finally to cleanup resources you can use a with statement\nwith open(\"myfile.txt\") as f:\n    for line in f:\n        print(line)\n\n# Python offers a fundamental abstraction called the Iterable.\n# An iterable is an object that can be treated as a sequence.\n# The object returned the range function, is an iterable.\n\nfilled_dict = {\"one\": 1, \"two\": 2, \"three\": 3}\nour_iterable = filled_dict.keys()\nprint(our_iterable)  # => dict_keys(['one', 'two', 'three']). This is an object that implements our Iterable interface.\n\n# We can loop over it.\nfor i in our_iterable:\n    print(i)  # Prints one, two, three\n\n# However we cannot address elements by index.\nour_iterable[1]  # Raises a TypeError\n\n# An iterable is an object that knows how to create an iterator.\nour_iterator = iter(our_iterable)\n\n# Our iterator is an object that can remember the state as we traverse through it.\n# We get the next object with \"next()\".\nnext(our_iterator)  # => \"one\"\n\n# It maintains state as we iterate.\nnext(our_iterator)  # => \"two\"\nnext(our_iterator)  # => \"three\"\n\n# After the iterator has returned all of its data, it gives you a StopIterator Exception\nnext(our_iterator)  # Raises StopIteration\n\n# You can grab all the elements of an iterator by calling list() on it.\nlist(filled_dict.keys())  # => Returns [\"one\", \"two\", \"three\"]\n\n\n####################################################\n## 4. Functions\n####################################################\n\n# Use \"def\" to create new functions\ndef add(x, y):\n    print(\"x is {} and y is {}\".format(x, y))\n    return x + y  # Return values with a return statement\n\n# Calling functions with parameters\nadd(5, 6)  # => prints out \"x is 5 and y is 6\" and returns 11\n\n# Another way to call functions is with keyword arguments\nadd(y=6, x=5)  # Keyword arguments can arrive in any order.\n\n# You can define functions that take a variable number of\n# positional arguments\ndef varargs(*args):\n    return args\n\nvarargs(1, 2, 3)  # => (1, 2, 3)\n\n# You can define functions that take a variable number of\n# keyword arguments, as well\ndef keyword_args(**kwargs):\n    return kwargs\n\n# Let's call it to see what happens\nkeyword_args(big=\"foot\", loch=\"ness\")  # => {\"big\": \"foot\", \"loch\": \"ness\"}\n\n\n# You can do both at once, if you like\ndef all_the_args(*args, **kwargs):\n    print(args)\n    print(kwargs)\n\"\"\"\nall_the_args(1, 2, a=3, b=4) prints:\n    (1, 2)\n    {\"a\": 3, \"b\": 4}\n\"\"\"\n\n# When calling functions, you can do the opposite of args/kwargs!\n# Use * to expand tuples and use ** to expand kwargs.\nargs = (1, 2, 3, 4)\nkwargs = {\"a\": 3, \"b\": 4}\nall_the_args(*args)            # equivalent to foo(1, 2, 3, 4)\nall_the_args(**kwargs)         # equivalent to foo(a=3, b=4)\nall_the_args(*args, **kwargs)  # equivalent to foo(1, 2, 3, 4, a=3, b=4)\n\n# Returning multiple values (with tuple assignments)\ndef swap(x, y):\n    return y, x  # Return multiple values as a tuple without the parenthesis.\n                 # (Note: parenthesis have been excluded but can be included)\n\nx = 1\ny = 2\nx, y = swap(x, y)     # => x = 2, y = 1\n# (x, y) = swap(x,y)  # Again parenthesis have been excluded but can be included.\n\n# Function Scope\nx = 5\n\ndef set_x(num):\n    # Local var x not the same as global variable x\n    x = num    # => 43\n    print (x)  # => 43\n\ndef set_global_x(num):\n    global x\n    print (x)  # => 5\n    x = num    # global var x is now set to 6\n    print (x)  # => 6\n\nset_x(43)\nset_global_x(6)\n\n\n# Python has first class functions\ndef create_adder(x):\n    def adder(y):\n        return x + y\n    return adder\n\nadd_10 = create_adder(10)\nadd_10(3)   # => 13\n\n# There are also anonymous functions\n(lambda x: x > 2)(3)                  # => True\n(lambda x, y: x ** 2 + y ** 2)(2, 1)  # => 5\n\n# There are built-in higher order functions\nlist(map(add_10, [1, 2, 3]))          # => [11, 12, 13]\nlist(map(max, [1, 2, 3], [4, 2, 1]))  # => [4, 2, 3]\n\nlist(filter(lambda x: x > 5, [3, 4, 5, 6, 7]))  # => [6, 7]\n\n# We can use list comprehensions for nice maps and filters\n# List comprehension stores the output as a list which can itself be a nested list\n[add_10(i) for i in [1, 2, 3]]         # => [11, 12, 13]\n[x for x in [3, 4, 5, 6, 7] if x > 5]  # => [6, 7]\n\n# You can construct set and dict comprehensions as well.\n{x for x in 'abcddeef' if x not in 'abc'}  # => {'d', 'e', 'f'}\n{x: x**2 for x in range(5)}  # => {0: 0, 1: 1, 2: 4, 3: 9, 4: 16}\n\n\n####################################################\n## 5. Modules\n####################################################\n\n# You can import modules\nimport math\nprint(math.sqrt(16))  # => 4.0\n\n# You can get specific functions from a module\nfrom math import ceil, floor\nprint(ceil(3.7))   # => 4.0\nprint(floor(3.7))  # => 3.0\n\n# You can import all functions from a module.\n# Warning: this is not recommended\nfrom math import *\n\n# You can shorten module names\nimport math as m\nmath.sqrt(16) == m.sqrt(16)  # => True\n\n# Python modules are just ordinary python files. You\n# can write your own, and import them. The name of the\n# module is the same as the name of the file.\n\n# You can find out which functions and attributes\n# defines a module.\nimport math\ndir(math)\n\n# If you have a Python script named math.py in the same\n# folder as your current script, the file math.py will\n# be loaded instead of the built-in Python module.\n# This happens because the local folder has priority\n# over Python's built-in libraries.\n\n\n####################################################\n## 6. Classes\n####################################################\n\n# We use the \"class\" operator to get a class\nclass Human:\n\n    # A class attribute. It is shared by all instances of this class\n    species = \"H. sapiens\"\n\n    # Basic initializer, this is called when this class is instantiated.\n    # Note that the double leading and trailing underscores denote objects\n    # or attributes that are used by python but that live in user-controlled\n    # namespaces. Methods(or objects or attributes) like: __init__, __str__,\n    # __repr__ etc. are called magic methods (or sometimes called dunder methods)\n    # You should not invent such names on your own.\n    def __init__(self, name):\n        # Assign the argument to the instance's name attribute\n        self.name = name\n\n        # Initialize property\n        self.age = 0\n\n    # An instance method. All methods take \"self\" as the first argument\n    def say(self, msg):\n        print (\"{name}: {message}\".format(name=self.name, message=msg))\n\n    # Another instance method\n    def sing(self):\n        return 'yo... yo... microphone check... one two... one two...'\n\n    # A class method is shared among all instances\n    # They are called with the calling class as the first argument\n    @classmethod\n    def get_species(cls):\n        return cls.species\n\n    # A static method is called without a class or instance reference\n    @staticmethod\n    def grunt():\n        return \"*grunt*\"\n\n    # A property is just like a getter.\n    # It turns the method age() into an read-only attribute\n    # of the same name.\n    @property\n    def age(self):\n        return self._age\n\n    # This allows the property to be set\n    @age.setter\n    def age(self, age):\n        self._age = age\n\n    # This allows the property to be deleted\n    @age.deleter\n    def age(self):\n        del self._age\n\n\n# When a Python interpreter reads a source file it executes all its code.\n# This __name__ check makes sure this code block is only executed when this\n# module is the main program.\nif __name__ == '__main__':\n    # Instantiate a class\n    i = Human(name=\"Ian\")\n    i.say(\"hi\")                     # \"Ian: hi\"\n    j = Human(\"Joel\")\n    j.say(\"hello\")                  # \"Joel: hello\"\n    # i and j are instances of type Human, or in other words: they are Human objects\n\n    # Call our class method\n    i.say(i.get_species())          # \"Ian: H. sapiens\"\n    # Change the shared attribute\n    Human.species = \"H. neanderthalensis\"\n    i.say(i.get_species())          # => \"Ian: H. neanderthalensis\"\n    j.say(j.get_species())          # => \"Joel: H. neanderthalensis\"\n\n    # Call the static method\n    print(Human.grunt())            # => \"*grunt*\"\n    print(i.grunt())                # => \"*grunt*\"\n\n    # Update the property for this instance\n    i.age = 42\n    # Get the property\n    i.say(i.age)                    # => 42\n    j.say(j.age)                    # => 0\n    # Delete the property\n    del i.age\n    # i.age                         # => this would raise an AttributeError\n\n\n####################################################\n## 6.1 Multiple Inheritance\n####################################################\n\n# Another class definition\nclass Bat:\n\n    species = 'Baty'\n\n    def __init__(self, can_fly=True):\n        self.fly = can_fly\n\n    # This class also has a say method\n    def say(self, msg):\n        msg = '... ... ...'\n        return msg\n\n    # And its own method as well\n    def sonar(self):\n        return '))) ... ((('\n\nif __name__ == '__main__':\n    b = Bat()\n    print(b.say('hello'))\n    print(b.fly)\n\n\n# from \"filename-without-extension\" import \"function-or-class\"\nfrom human import Human\nfrom bat import Bat\n\n# Batman inherits from both Human and Bat\nclass Batman(Human, Bat):\n\n    # Batman has its own value for the species class attribute\n    species = 'Superhero'\n\n    def __init__(self, *args, **kwargs):\n        # Typically to inherit attributes you have to call super:\n        #super(Batman, self).__init__(*args, **kwargs)      \n        # However we are dealing with multiple inheritance here, and super()\n        # only works with the next base class in the MRO list.\n        # So instead we explicitly call __init__ for all ancestors.\n        # The use of *args and **kwargs allows for a clean way to pass arguments,\n        # with each parent \"peeling a layer of the onion\".\n        Human.__init__(self, 'anonymous', *args, **kwargs)\n        Bat.__init__(self, *args, can_fly=False, **kwargs)\n        # override the value for the name attribute\n        self.name = 'Sad Affleck'\n\n    def sing(self):\n        return 'nan nan nan nan nan batman!'\n\n\nif __name__ == '__main__':\n    sup = Batman()\n\n    # Instance type checks\n    if isinstance(sup, Human):\n        print('I am human')\n    if isinstance(sup, Bat):\n        print('I am bat')\n    if type(sup) is Batman:\n        print('I am Batman')\n\n    # Get the Method Resolution search Order used by both getattr() and super().\n    # This attribute is dynamic and can be updated\n    print(Batman.__mro__)       # => (<class '__main__.Batman'>, <class 'human.Human'>, <class 'bat.Bat'>, <class 'object'>)\n\n    # Calls parent method but uses its own class attribute\n    print(sup.get_species())    # => Superhero\n\n    # Calls overloaded method\n    print(sup.sing())           # => nan nan nan nan nan batman!\n\n    # Calls method from Human, because inheritance order matters\n    sup.say('I agree')          # => Sad Affleck: I agree\n\n    # Call method that exists only in 2nd ancestor\n    print(sup.sonar())          # => ))) ... (((\n\n    # Inherited class attribute\n    sup.age = 100\n    print(sup.age)\n\n    # Inherited attribute from 2nd ancestor whose default value was overridden.\n    print('Can I fly? ' + str(sup.fly))\n\n\n\n####################################################\n## 7. Advanced\n####################################################\n\n# Generators help you make lazy code.\ndef double_numbers(iterable):\n    for i in iterable:\n        yield i + i\n\n# Generators are memory-efficient because they only load the data needed to\n# process the next value in the iterable. This allows them to perform\n# operations on otherwise prohibitively large value ranges.\n# NOTE: `range` replaces `xrange` in Python 3.\nfor i in double_numbers(range(1, 900000000)):  # `range` is a generator.\n    print(i)\n    if i >= 30:\n        break\n\n# Just as you can create a list comprehension, you can create generator\n# comprehensions as well.\nvalues = (-x for x in [1,2,3,4,5])\nfor x in values:\n    print(x)  # prints -1 -2 -3 -4 -5 to console/terminal\n\n# You can also cast a generator comprehension directly to a list.\nvalues = (-x for x in [1,2,3,4,5])\ngen_to_list = list(values)\nprint(gen_to_list)  # => [-1, -2, -3, -4, -5]\n\n\n# Decorators\n# In this example `beg` wraps `say`. If say_please is True then it\n# will change the returned message.\nfrom functools import wraps\n\n\ndef beg(target_function):\n    @wraps(target_function)\n    def wrapper(*args, **kwargs):\n        msg, say_please = target_function(*args, **kwargs)\n        if say_please:\n            return \"{} {}\".format(msg, \"Please! I am poor :(\")\n        return msg\n\n    return wrapper\n\n\n@beg\ndef say(say_please=False):\n    msg = \"Can you buy me a beer?\"\n    return msg, say_please\n\n\nprint(say())                 # Can you buy me a beer?\nprint(say(say_please=True))  # Can you buy me a beer? Please! I am poor :(\n```\n\n## Ready For More?\n\n### Free Online\n\n* [Automate the Boring Stuff with Python](https://automatetheboringstuff.com)\n* [Ideas for Python Projects](http://pythonpracticeprojects.com)\n* [The Official Docs](http://docs.python.org/3/)\n* [Hitchhiker's Guide to Python](http://docs.python-guide.org/en/latest/)\n* [Python Course](http://www.python-course.eu/index.php)\n* [First Steps With Python](https://realpython.com/learn/python-first-steps/)\n* [A curated list of awesome Python frameworks, libraries and software](https://github.com/vinta/awesome-python)\n* [30 Python Language Features and Tricks You May Not Know About](http://sahandsaba.com/thirty-python-language-features-and-tricks-you-may-not-know.html)\n* [Official Style Guide for Python](https://www.python.org/dev/peps/pep-0008/)\n* [Python 3 Computer Science Circles](http://cscircles.cemc.uwaterloo.ca/)\n* [Dive Into Python 3](http://www.diveintopython3.net/index.html)\n* [A Crash Course in Python for Scientists](http://nbviewer.jupyter.org/gist/anonymous/5924718)\n\n### Dead Tree\n\n* [Programming Python](http://www.amazon.com/gp/product/0596158106/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0596158106&linkCode=as2&tag=homebits04-20)\n* [Dive Into Python 3](https://www.amazon.com/gp/product/1430224150?ie=UTF8&tag=diveintomark-20&creativeASIN=1430224150)\n* [Learn Python 3.0 VISUALLY](https://www.amazon.com/Learn-Python-3-0-VISUALLY-Interactive-ebook/dp/B00YI58B9U/)\n","source":"_posts/learn-python3-1min.md","raw":"---\ntitle: 分分钟学会Python3\ndate: 2016-10-28\ncategories: 编程笔记\ntags: python\n---\n\nPython was created by Guido Van Rossum in the early 90s. It is now one of the most popular\nlanguages in existence. I fell in love with Python for its syntactic clarity. It's basically\nexecutable pseudocode.\n\nFeedback would be highly appreciated! You can reach me at [@louiedinh](http://twitter.com/louiedinh) or louiedinh [at] [google's email service]\n\nNote: This article applies to Python 3 specifically. Check out [here](http://learnxinyminutes.com/docs/python/) if you want to learn the old Python 2.7\n\n<!--more-->\n\n---\n语言: python3  \n贡献者:  \n    - [\"Louie Dinh\", \"http://pythonpracticeprojects.com\"]  \n    - [\"Steven Basart\", \"http://github.com/xksteven\"]  \n    - [\"Andre Polykanine\", \"https://github.com/Oire\"]  \n    - [\"Zachary Ferguson\", \"http://github.com/zfergus2\"]  \n    - [\"evuez\", \"http://github.com/evuez\"]  \nfilename: learnpython3.py\n译者:  \n    - [\"ChangingFond\", \"http://blog.fangchengjin.cn\"]\n---\n\n```python\n\n# Single line comments start with a number symbol.\n\n\"\"\" Multiline strings can be written\n    using three \"s, and are often used\n    as comments\n\"\"\"\n\n####################################################\n## 1. Primitive Datatypes and Operators\n####################################################\n\n# You have numbers\n3  # => 3\n\n# Math is what you would expect\n1 + 1   # => 2\n8 - 1   # => 7\n10 * 2  # => 20\n\n# Except division which returns floats, real numbers, by default\n35 / 5  # => 7.0\n\n# Result of integer division truncated down both for positive and negative.\n5 // 3       # => 1\n5.0 // 3.0   # => 1.0 # works on floats too\n-5 // 3      # => -2\n-5.0 // 3.0  # => -2.0\n\n# When you use a float, results are floats\n3 * 2.0  # => 6.0\n\n# Modulo operation\n7 % 3  # => 1\n\n# Exponentiation (x**y, x to the yth power)\n2**4  # => 16\n\n# Enforce precedence with parentheses\n(1 + 3) * 2  # => 8\n\n# Boolean values are primitives (Note: the capitalization)\nTrue\nFalse\n\n# negate with not\nnot True   # => False\nnot False  # => True\n\n# Boolean Operators\n# Note \"and\" and \"or\" are case-sensitive\nTrue and False  # => False\nFalse or True   # => True\n\n# Note using Bool operators with ints\n0 and 2     # => 0\n-5 or 0     # => -5\n0 == False  # => True\n2 == True   # => False\n1 == True   # => True\n\n# Equality is ==\n1 == 1  # => True\n2 == 1  # => False\n\n# Inequality is !=\n1 != 1  # => False\n2 != 1  # => True\n\n# More comparisons\n1 < 10  # => True\n1 > 10  # => False\n2 <= 2  # => True\n2 >= 2  # => True\n\n# Comparisons can be chained!\n1 < 2 < 3  # => True\n2 < 3 < 2  # => False\n\n# (is vs. ==) is checks if two variables refer to the same object, but == checks\n# if the objects pointed to have the same values.\na = [1, 2, 3, 4]  # Point a at a new list, [1, 2, 3, 4]\nb = a             # Point b at what a is pointing to\nb is a            # => True, a and b refer to the same object\nb == a            # => True, a's and b's objects are equal\nb = [1, 2, 3, 4]  # Point b at a new list, [1, 2, 3, 4]\nb is a            # => False, a and b do not refer to the same object\nb == a            # => True, a's and b's objects are equal\n\n# Strings are created with \" or '\n\"This is a string.\"\n'This is also a string.'\n\n# Strings can be added too! But try not to do this.\n\"Hello \" + \"world!\"  # => \"Hello world!\"\n# Strings can be added without using '+'\n\"Hello \" \"world!\"    # => \"Hello world!\"\n\n# A string can be treated like a list of characters\n\"This is a string\"[0]  # => 'T'\n\n# You can find the length of a string\nlen(\"This is a string\")  # => 16\n\n# .format can be used to format strings, like this:\n\"{} can be {}\".format(\"Strings\", \"interpolated\")  # => \"Strings can be interpolated\"\n\n# You can repeat the formatting arguments to save some typing.\n\"{0} be nimble, {0} be quick, {0} jump over the {1}\".format(\"Jack\", \"candle stick\")\n# => \"Jack be nimble, Jack be quick, Jack jump over the candle stick\"\n\n# You can use keywords if you don't want to count.\n\"{name} wants to eat {food}\".format(name=\"Bob\", food=\"lasagna\")  # => \"Bob wants to eat lasagna\"\n\n# If your Python 3 code also needs to run on Python 2.5 and below, you can also\n# still use the old style of formatting:\n\"%s can be %s the %s way\" % (\"Strings\", \"interpolated\", \"old\")  # => \"Strings can be interpolated the old way\"\n\n\n# None is an object\nNone  # => None\n\n# Don't use the equality \"==\" symbol to compare objects to None\n# Use \"is\" instead. This checks for equality of object identity.\n\"etc\" is None  # => False\nNone is None   # => True\n\n# None, 0, and empty strings/lists/dicts all evaluate to False.\n# All other values are True\nbool(0)   # => False\nbool(\"\")  # => False\nbool([])  # => False\nbool({})  # => False\n\n\n####################################################\n## 2. Variables and Collections\n####################################################\n\n# Python has a print function\nprint(\"I'm Python. Nice to meet you!\")  # => I'm Python. Nice to meet you!\n\n# By default the print function also prints out a newline at the end.\n# Use the optional argument end to change the end character.\nprint(\"Hello, World\", end=\"!\")  # => Hello, World!\n\n# Simple way to get input data from console\ninput_string_var = input(\"Enter some data: \") # Returns the data as a string\n# Note: In earlier versions of Python, input() method was named as raw_input()\n\n# No need to declare variables before assigning to them.\n# Convention is to use lower_case_with_underscores\nsome_var = 5\nsome_var  # => 5\n\n# Accessing a previously unassigned variable is an exception.\n# See Control Flow to learn more about exception handling.\nsome_unknown_var  # Raises a NameError\n\n# if can be used as an expression\n# Equivalent of C's '?:' ternary operator\n\"yahoo!\" if 3 > 2 else 2  # => \"yahoo!\"\n\n# Lists store sequences\nli = []\n# You can start with a prefilled list\nother_li = [4, 5, 6]\n\n# Add stuff to the end of a list with append\nli.append(1)    # li is now [1]\nli.append(2)    # li is now [1, 2]\nli.append(4)    # li is now [1, 2, 4]\nli.append(3)    # li is now [1, 2, 4, 3]\n# Remove from the end with pop\nli.pop()        # => 3 and li is now [1, 2, 4]\n# Let's put it back\nli.append(3)    # li is now [1, 2, 4, 3] again.\n\n# Access a list like you would any array\nli[0]   # => 1\n# Look at the last element\nli[-1]  # => 3\n\n# Looking out of bounds is an IndexError\nli[4]  # Raises an IndexError\n\n# You can look at ranges with slice syntax.\n# (It's a closed/open range for you mathy types.)\nli[1:3]   # => [2, 4]\n# Omit the beginning\nli[2:]    # => [4, 3]\n# Omit the end\nli[:3]    # => [1, 2, 4]\n# Select every second entry\nli[::2]   # =>[1, 4]\n# Return a reversed copy of the list\nli[::-1]  # => [3, 4, 2, 1]\n# Use any combination of these to make advanced slices\n# li[start:end:step]\n\n# Make a one layer deep copy using slices\nli2 = li[:]  # => li2 = [1, 2, 4, 3] but (li2 is li) will result in false.\n\n# Remove arbitrary elements from a list with \"del\"\ndel li[2]  # li is now [1, 2, 3]\n\n# Remove first occurrence of a value\nli.remove(2)  # li is now [1, 3]\nli.remove(2)  # Raises a ValueError as 2 is not in the list\n\n# Insert an element at a specific index\nli.insert(1, 2)  # li is now [1, 2, 3] again\n\n# Get the index of the first item found matching the argument\nli.index(2)  # => 1\nli.index(4)  # Raises a ValueError as 4 is not in the list\n\n# You can add lists\n# Note: values for li and for other_li are not modified.\nli + other_li  # => [1, 2, 3, 4, 5, 6]\n\n# Concatenate lists with \"extend()\"\nli.extend(other_li)  # Now li is [1, 2, 3, 4, 5, 6]\n\n# Check for existence in a list with \"in\"\n1 in li  # => True\n\n# Examine the length with \"len()\"\nlen(li)  # => 6\n\n\n# Tuples are like lists but are immutable.\ntup = (1, 2, 3)\ntup[0]      # => 1\ntup[0] = 3  # Raises a TypeError\n\n# Note that a tuple of length one has to have a comma after the last element but\n# tuples of other lengths, even zero, do not.\ntype((1))   # => <class 'int'>\ntype((1,))  # => <class 'tuple'>\ntype(())    # => <class 'tuple'>\n\n# You can do most of the list operations on tuples too\nlen(tup)         # => 3\ntup + (4, 5, 6)  # => (1, 2, 3, 4, 5, 6)\ntup[:2]          # => (1, 2)\n2 in tup         # => True\n\n# You can unpack tuples (or lists) into variables\na, b, c = (1, 2, 3)  # a is now 1, b is now 2 and c is now 3\n# You can also do extended unpacking\na, *b, c = (1, 2, 3, 4)  # a is now 1, b is now [2, 3] and c is now 4\n# Tuples are created by default if you leave out the parentheses\nd, e, f = 4, 5, 6\n# Now look how easy it is to swap two values\ne, d = d, e  # d is now 5 and e is now 4\n\n\n# Dictionaries store mappings\nempty_dict = {}\n# Here is a prefilled dictionary\nfilled_dict = {\"one\": 1, \"two\": 2, \"three\": 3}\n\n# Note keys for dictionaries have to be immutable types. This is to ensure that\n# the key can be converted to a constant hash value for quick look-ups.\n# Immutable types include ints, floats, strings, tuples.\ninvalid_dict = {[1,2,3]: \"123\"}  # => Raises a TypeError: unhashable type: 'list'\nvalid_dict = {(1,2,3):[1,2,3]}   # Values can be of any type, however.\n\n# Look up values with []\nfilled_dict[\"one\"]  # => 1\n\n# Get all keys as an iterable with \"keys()\". We need to wrap the call in list()\n# to turn it into a list. We'll talk about those later.  Note - Dictionary key\n# ordering is not guaranteed. Your results might not match this exactly.\nlist(filled_dict.keys())  # => [\"three\", \"two\", \"one\"]\n\n\n# Get all values as an iterable with \"values()\". Once again we need to wrap it\n# in list() to get it out of the iterable. Note - Same as above regarding key\n# ordering.\nlist(filled_dict.values())  # => [3, 2, 1]\n\n\n# Check for existence of keys in a dictionary with \"in\"\n\"one\" in filled_dict  # => True\n1 in filled_dict      # => False\n\n# Looking up a non-existing key is a KeyError\nfilled_dict[\"four\"]  # KeyError\n\n# Use \"get()\" method to avoid the KeyError\nfilled_dict.get(\"one\")      # => 1\nfilled_dict.get(\"four\")     # => None\n# The get method supports a default argument when the value is missing\nfilled_dict.get(\"one\", 4)   # => 1\nfilled_dict.get(\"four\", 4)  # => 4\n\n# \"setdefault()\" inserts into a dictionary only if the given key isn't present\nfilled_dict.setdefault(\"five\", 5)  # filled_dict[\"five\"] is set to 5\nfilled_dict.setdefault(\"five\", 6)  # filled_dict[\"five\"] is still 5\n\n# Adding to a dictionary\nfilled_dict.update({\"four\":4})  # => {\"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4}\n#filled_dict[\"four\"] = 4        #another way to add to dict\n\n# Remove keys from a dictionary with del\ndel filled_dict[\"one\"]  # Removes the key \"one\" from filled dict\n\n# From Python 3.5 you can also use the additional unpacking options\n{'a': 1, **{'b': 2}}  # => {'a': 1, 'b': 2}\n{'a': 1, **{'a': 2}}  # => {'a': 2}\n\n\n\n# Sets store ... well sets\nempty_set = set()\n# Initialize a set with a bunch of values. Yeah, it looks a bit like a dict. Sorry.\nsome_set = {1, 1, 2, 2, 3, 4}  # some_set is now {1, 2, 3, 4}\n\n# Similar to keys of a dictionary, elements of a set have to be immutable.\ninvalid_set = {[1], 1}  # => Raises a TypeError: unhashable type: 'list'\nvalid_set = {(1,), 1}\n\n# Can set new variables to a set\nfilled_set = some_set\n\n# Add one more item to the set\nfilled_set.add(5)  # filled_set is now {1, 2, 3, 4, 5}\n\n# Do set intersection with &\nother_set = {3, 4, 5, 6}\nfilled_set & other_set  # => {3, 4, 5}\n\n# Do set union with |\nfilled_set | other_set  # => {1, 2, 3, 4, 5, 6}\n\n# Do set difference with -\n{1, 2, 3, 4} - {2, 3, 5}  # => {1, 4}\n\n# Do set symmetric difference with ^\n{1, 2, 3, 4} ^ {2, 3, 5}  # => {1, 4, 5}\n\n# Check if set on the left is a superset of set on the right\n{1, 2} >= {1, 2, 3} # => False\n\n# Check if set on the left is a subset of set on the right\n{1, 2} <= {1, 2, 3} # => True\n\n# Check for existence in a set with in\n2 in filled_set   # => True\n10 in filled_set  # => False\n\n\n\n####################################################\n## 3. Control Flow and Iterables\n####################################################\n\n# Let's just make a variable\nsome_var = 5\n\n# Here is an if statement. Indentation is significant in python!\n# prints \"some_var is smaller than 10\"\nif some_var > 10:\n    print(\"some_var is totally bigger than 10.\")\nelif some_var < 10:    # This elif clause is optional.\n    print(\"some_var is smaller than 10.\")\nelse:                  # This is optional too.\n    print(\"some_var is indeed 10.\")\n\n\n\"\"\"\nFor loops iterate over lists\nprints:\n    dog is a mammal\n    cat is a mammal\n    mouse is a mammal\n\"\"\"\nfor animal in [\"dog\", \"cat\", \"mouse\"]:\n    # You can use format() to interpolate formatted strings\n    print(\"{} is a mammal\".format(animal))\n\n\"\"\"\n\"range(number)\" returns an iterable of numbers\nfrom zero to the given number\nprints:\n    0\n    1\n    2\n    3\n\"\"\"\nfor i in range(4):\n    print(i)\n\n\"\"\"\n\"range(lower, upper)\" returns an iterable of numbers\nfrom the lower number to the upper number\nprints:\n    4\n    5\n    6\n    7\n\"\"\"\nfor i in range(4, 8):\n    print(i)\n\n\"\"\"\n\"range(lower, upper, step)\" returns an iterable of numbers\nfrom the lower number to the upper number, while incrementing\nby step. If step is not indicated, the default value is 1.\nprints:\n    4\n    6\n\"\"\"\nfor i in range(4, 8, 2):\n    print(i)\n\"\"\"\n\nWhile loops go until a condition is no longer met.\nprints:\n    0\n    1\n    2\n    3\n\"\"\"\nx = 0\nwhile x < 4:\n    print(x)\n    x += 1  # Shorthand for x = x + 1\n\n# Handle exceptions with a try/except block\ntry:\n    # Use \"raise\" to raise an error\n    raise IndexError(\"This is an index error\")\nexcept IndexError as e:\n    pass                 # Pass is just a no-op. Usually you would do recovery here.\nexcept (TypeError, NameError):\n    pass                 # Multiple exceptions can be handled together, if required.\nelse:                    # Optional clause to the try/except block. Must follow all except blocks\n    print(\"All good!\")   # Runs only if the code in try raises no exceptions\nfinally:                 #  Execute under all circumstances\n    print(\"We can clean up resources here\")\n\n# Instead of try/finally to cleanup resources you can use a with statement\nwith open(\"myfile.txt\") as f:\n    for line in f:\n        print(line)\n\n# Python offers a fundamental abstraction called the Iterable.\n# An iterable is an object that can be treated as a sequence.\n# The object returned the range function, is an iterable.\n\nfilled_dict = {\"one\": 1, \"two\": 2, \"three\": 3}\nour_iterable = filled_dict.keys()\nprint(our_iterable)  # => dict_keys(['one', 'two', 'three']). This is an object that implements our Iterable interface.\n\n# We can loop over it.\nfor i in our_iterable:\n    print(i)  # Prints one, two, three\n\n# However we cannot address elements by index.\nour_iterable[1]  # Raises a TypeError\n\n# An iterable is an object that knows how to create an iterator.\nour_iterator = iter(our_iterable)\n\n# Our iterator is an object that can remember the state as we traverse through it.\n# We get the next object with \"next()\".\nnext(our_iterator)  # => \"one\"\n\n# It maintains state as we iterate.\nnext(our_iterator)  # => \"two\"\nnext(our_iterator)  # => \"three\"\n\n# After the iterator has returned all of its data, it gives you a StopIterator Exception\nnext(our_iterator)  # Raises StopIteration\n\n# You can grab all the elements of an iterator by calling list() on it.\nlist(filled_dict.keys())  # => Returns [\"one\", \"two\", \"three\"]\n\n\n####################################################\n## 4. Functions\n####################################################\n\n# Use \"def\" to create new functions\ndef add(x, y):\n    print(\"x is {} and y is {}\".format(x, y))\n    return x + y  # Return values with a return statement\n\n# Calling functions with parameters\nadd(5, 6)  # => prints out \"x is 5 and y is 6\" and returns 11\n\n# Another way to call functions is with keyword arguments\nadd(y=6, x=5)  # Keyword arguments can arrive in any order.\n\n# You can define functions that take a variable number of\n# positional arguments\ndef varargs(*args):\n    return args\n\nvarargs(1, 2, 3)  # => (1, 2, 3)\n\n# You can define functions that take a variable number of\n# keyword arguments, as well\ndef keyword_args(**kwargs):\n    return kwargs\n\n# Let's call it to see what happens\nkeyword_args(big=\"foot\", loch=\"ness\")  # => {\"big\": \"foot\", \"loch\": \"ness\"}\n\n\n# You can do both at once, if you like\ndef all_the_args(*args, **kwargs):\n    print(args)\n    print(kwargs)\n\"\"\"\nall_the_args(1, 2, a=3, b=4) prints:\n    (1, 2)\n    {\"a\": 3, \"b\": 4}\n\"\"\"\n\n# When calling functions, you can do the opposite of args/kwargs!\n# Use * to expand tuples and use ** to expand kwargs.\nargs = (1, 2, 3, 4)\nkwargs = {\"a\": 3, \"b\": 4}\nall_the_args(*args)            # equivalent to foo(1, 2, 3, 4)\nall_the_args(**kwargs)         # equivalent to foo(a=3, b=4)\nall_the_args(*args, **kwargs)  # equivalent to foo(1, 2, 3, 4, a=3, b=4)\n\n# Returning multiple values (with tuple assignments)\ndef swap(x, y):\n    return y, x  # Return multiple values as a tuple without the parenthesis.\n                 # (Note: parenthesis have been excluded but can be included)\n\nx = 1\ny = 2\nx, y = swap(x, y)     # => x = 2, y = 1\n# (x, y) = swap(x,y)  # Again parenthesis have been excluded but can be included.\n\n# Function Scope\nx = 5\n\ndef set_x(num):\n    # Local var x not the same as global variable x\n    x = num    # => 43\n    print (x)  # => 43\n\ndef set_global_x(num):\n    global x\n    print (x)  # => 5\n    x = num    # global var x is now set to 6\n    print (x)  # => 6\n\nset_x(43)\nset_global_x(6)\n\n\n# Python has first class functions\ndef create_adder(x):\n    def adder(y):\n        return x + y\n    return adder\n\nadd_10 = create_adder(10)\nadd_10(3)   # => 13\n\n# There are also anonymous functions\n(lambda x: x > 2)(3)                  # => True\n(lambda x, y: x ** 2 + y ** 2)(2, 1)  # => 5\n\n# There are built-in higher order functions\nlist(map(add_10, [1, 2, 3]))          # => [11, 12, 13]\nlist(map(max, [1, 2, 3], [4, 2, 1]))  # => [4, 2, 3]\n\nlist(filter(lambda x: x > 5, [3, 4, 5, 6, 7]))  # => [6, 7]\n\n# We can use list comprehensions for nice maps and filters\n# List comprehension stores the output as a list which can itself be a nested list\n[add_10(i) for i in [1, 2, 3]]         # => [11, 12, 13]\n[x for x in [3, 4, 5, 6, 7] if x > 5]  # => [6, 7]\n\n# You can construct set and dict comprehensions as well.\n{x for x in 'abcddeef' if x not in 'abc'}  # => {'d', 'e', 'f'}\n{x: x**2 for x in range(5)}  # => {0: 0, 1: 1, 2: 4, 3: 9, 4: 16}\n\n\n####################################################\n## 5. Modules\n####################################################\n\n# You can import modules\nimport math\nprint(math.sqrt(16))  # => 4.0\n\n# You can get specific functions from a module\nfrom math import ceil, floor\nprint(ceil(3.7))   # => 4.0\nprint(floor(3.7))  # => 3.0\n\n# You can import all functions from a module.\n# Warning: this is not recommended\nfrom math import *\n\n# You can shorten module names\nimport math as m\nmath.sqrt(16) == m.sqrt(16)  # => True\n\n# Python modules are just ordinary python files. You\n# can write your own, and import them. The name of the\n# module is the same as the name of the file.\n\n# You can find out which functions and attributes\n# defines a module.\nimport math\ndir(math)\n\n# If you have a Python script named math.py in the same\n# folder as your current script, the file math.py will\n# be loaded instead of the built-in Python module.\n# This happens because the local folder has priority\n# over Python's built-in libraries.\n\n\n####################################################\n## 6. Classes\n####################################################\n\n# We use the \"class\" operator to get a class\nclass Human:\n\n    # A class attribute. It is shared by all instances of this class\n    species = \"H. sapiens\"\n\n    # Basic initializer, this is called when this class is instantiated.\n    # Note that the double leading and trailing underscores denote objects\n    # or attributes that are used by python but that live in user-controlled\n    # namespaces. Methods(or objects or attributes) like: __init__, __str__,\n    # __repr__ etc. are called magic methods (or sometimes called dunder methods)\n    # You should not invent such names on your own.\n    def __init__(self, name):\n        # Assign the argument to the instance's name attribute\n        self.name = name\n\n        # Initialize property\n        self.age = 0\n\n    # An instance method. All methods take \"self\" as the first argument\n    def say(self, msg):\n        print (\"{name}: {message}\".format(name=self.name, message=msg))\n\n    # Another instance method\n    def sing(self):\n        return 'yo... yo... microphone check... one two... one two...'\n\n    # A class method is shared among all instances\n    # They are called with the calling class as the first argument\n    @classmethod\n    def get_species(cls):\n        return cls.species\n\n    # A static method is called without a class or instance reference\n    @staticmethod\n    def grunt():\n        return \"*grunt*\"\n\n    # A property is just like a getter.\n    # It turns the method age() into an read-only attribute\n    # of the same name.\n    @property\n    def age(self):\n        return self._age\n\n    # This allows the property to be set\n    @age.setter\n    def age(self, age):\n        self._age = age\n\n    # This allows the property to be deleted\n    @age.deleter\n    def age(self):\n        del self._age\n\n\n# When a Python interpreter reads a source file it executes all its code.\n# This __name__ check makes sure this code block is only executed when this\n# module is the main program.\nif __name__ == '__main__':\n    # Instantiate a class\n    i = Human(name=\"Ian\")\n    i.say(\"hi\")                     # \"Ian: hi\"\n    j = Human(\"Joel\")\n    j.say(\"hello\")                  # \"Joel: hello\"\n    # i and j are instances of type Human, or in other words: they are Human objects\n\n    # Call our class method\n    i.say(i.get_species())          # \"Ian: H. sapiens\"\n    # Change the shared attribute\n    Human.species = \"H. neanderthalensis\"\n    i.say(i.get_species())          # => \"Ian: H. neanderthalensis\"\n    j.say(j.get_species())          # => \"Joel: H. neanderthalensis\"\n\n    # Call the static method\n    print(Human.grunt())            # => \"*grunt*\"\n    print(i.grunt())                # => \"*grunt*\"\n\n    # Update the property for this instance\n    i.age = 42\n    # Get the property\n    i.say(i.age)                    # => 42\n    j.say(j.age)                    # => 0\n    # Delete the property\n    del i.age\n    # i.age                         # => this would raise an AttributeError\n\n\n####################################################\n## 6.1 Multiple Inheritance\n####################################################\n\n# Another class definition\nclass Bat:\n\n    species = 'Baty'\n\n    def __init__(self, can_fly=True):\n        self.fly = can_fly\n\n    # This class also has a say method\n    def say(self, msg):\n        msg = '... ... ...'\n        return msg\n\n    # And its own method as well\n    def sonar(self):\n        return '))) ... ((('\n\nif __name__ == '__main__':\n    b = Bat()\n    print(b.say('hello'))\n    print(b.fly)\n\n\n# from \"filename-without-extension\" import \"function-or-class\"\nfrom human import Human\nfrom bat import Bat\n\n# Batman inherits from both Human and Bat\nclass Batman(Human, Bat):\n\n    # Batman has its own value for the species class attribute\n    species = 'Superhero'\n\n    def __init__(self, *args, **kwargs):\n        # Typically to inherit attributes you have to call super:\n        #super(Batman, self).__init__(*args, **kwargs)      \n        # However we are dealing with multiple inheritance here, and super()\n        # only works with the next base class in the MRO list.\n        # So instead we explicitly call __init__ for all ancestors.\n        # The use of *args and **kwargs allows for a clean way to pass arguments,\n        # with each parent \"peeling a layer of the onion\".\n        Human.__init__(self, 'anonymous', *args, **kwargs)\n        Bat.__init__(self, *args, can_fly=False, **kwargs)\n        # override the value for the name attribute\n        self.name = 'Sad Affleck'\n\n    def sing(self):\n        return 'nan nan nan nan nan batman!'\n\n\nif __name__ == '__main__':\n    sup = Batman()\n\n    # Instance type checks\n    if isinstance(sup, Human):\n        print('I am human')\n    if isinstance(sup, Bat):\n        print('I am bat')\n    if type(sup) is Batman:\n        print('I am Batman')\n\n    # Get the Method Resolution search Order used by both getattr() and super().\n    # This attribute is dynamic and can be updated\n    print(Batman.__mro__)       # => (<class '__main__.Batman'>, <class 'human.Human'>, <class 'bat.Bat'>, <class 'object'>)\n\n    # Calls parent method but uses its own class attribute\n    print(sup.get_species())    # => Superhero\n\n    # Calls overloaded method\n    print(sup.sing())           # => nan nan nan nan nan batman!\n\n    # Calls method from Human, because inheritance order matters\n    sup.say('I agree')          # => Sad Affleck: I agree\n\n    # Call method that exists only in 2nd ancestor\n    print(sup.sonar())          # => ))) ... (((\n\n    # Inherited class attribute\n    sup.age = 100\n    print(sup.age)\n\n    # Inherited attribute from 2nd ancestor whose default value was overridden.\n    print('Can I fly? ' + str(sup.fly))\n\n\n\n####################################################\n## 7. Advanced\n####################################################\n\n# Generators help you make lazy code.\ndef double_numbers(iterable):\n    for i in iterable:\n        yield i + i\n\n# Generators are memory-efficient because they only load the data needed to\n# process the next value in the iterable. This allows them to perform\n# operations on otherwise prohibitively large value ranges.\n# NOTE: `range` replaces `xrange` in Python 3.\nfor i in double_numbers(range(1, 900000000)):  # `range` is a generator.\n    print(i)\n    if i >= 30:\n        break\n\n# Just as you can create a list comprehension, you can create generator\n# comprehensions as well.\nvalues = (-x for x in [1,2,3,4,5])\nfor x in values:\n    print(x)  # prints -1 -2 -3 -4 -5 to console/terminal\n\n# You can also cast a generator comprehension directly to a list.\nvalues = (-x for x in [1,2,3,4,5])\ngen_to_list = list(values)\nprint(gen_to_list)  # => [-1, -2, -3, -4, -5]\n\n\n# Decorators\n# In this example `beg` wraps `say`. If say_please is True then it\n# will change the returned message.\nfrom functools import wraps\n\n\ndef beg(target_function):\n    @wraps(target_function)\n    def wrapper(*args, **kwargs):\n        msg, say_please = target_function(*args, **kwargs)\n        if say_please:\n            return \"{} {}\".format(msg, \"Please! I am poor :(\")\n        return msg\n\n    return wrapper\n\n\n@beg\ndef say(say_please=False):\n    msg = \"Can you buy me a beer?\"\n    return msg, say_please\n\n\nprint(say())                 # Can you buy me a beer?\nprint(say(say_please=True))  # Can you buy me a beer? Please! I am poor :(\n```\n\n## Ready For More?\n\n### Free Online\n\n* [Automate the Boring Stuff with Python](https://automatetheboringstuff.com)\n* [Ideas for Python Projects](http://pythonpracticeprojects.com)\n* [The Official Docs](http://docs.python.org/3/)\n* [Hitchhiker's Guide to Python](http://docs.python-guide.org/en/latest/)\n* [Python Course](http://www.python-course.eu/index.php)\n* [First Steps With Python](https://realpython.com/learn/python-first-steps/)\n* [A curated list of awesome Python frameworks, libraries and software](https://github.com/vinta/awesome-python)\n* [30 Python Language Features and Tricks You May Not Know About](http://sahandsaba.com/thirty-python-language-features-and-tricks-you-may-not-know.html)\n* [Official Style Guide for Python](https://www.python.org/dev/peps/pep-0008/)\n* [Python 3 Computer Science Circles](http://cscircles.cemc.uwaterloo.ca/)\n* [Dive Into Python 3](http://www.diveintopython3.net/index.html)\n* [A Crash Course in Python for Scientists](http://nbviewer.jupyter.org/gist/anonymous/5924718)\n\n### Dead Tree\n\n* [Programming Python](http://www.amazon.com/gp/product/0596158106/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0596158106&linkCode=as2&tag=homebits04-20)\n* [Dive Into Python 3](https://www.amazon.com/gp/product/1430224150?ie=UTF8&tag=diveintomark-20&creativeASIN=1430224150)\n* [Learn Python 3.0 VISUALLY](https://www.amazon.com/Learn-Python-3-0-VISUALLY-Interactive-ebook/dp/B00YI58B9U/)\n","slug":"learn-python3-1min","published":1,"updated":"2017-06-12T12:25:48.557Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3u525b3000rjsur5sriktlm","content":"<p>Python was created by Guido Van Rossum in the early 90s. It is now one of the most popular<br>languages in existence. I fell in love with Python for its syntactic clarity. It’s basically<br>executable pseudocode.</p>\n<p>Feedback would be highly appreciated! You can reach me at <a href=\"http://twitter.com/louiedinh\" target=\"_blank\" rel=\"external\">@louiedinh</a> or louiedinh [at] [google’s email service]</p>\n<p>Note: This article applies to Python 3 specifically. Check out <a href=\"http://learnxinyminutes.com/docs/python/\" target=\"_blank\" rel=\"external\">here</a> if you want to learn the old Python 2.7</p>\n<a id=\"more\"></a>\n<hr>\n<p>语言: python3<br>贡献者:  </p>\n<pre><code>- [&quot;Louie Dinh&quot;, &quot;http://pythonpracticeprojects.com&quot;]  \n- [&quot;Steven Basart&quot;, &quot;http://github.com/xksteven&quot;]  \n- [&quot;Andre Polykanine&quot;, &quot;https://github.com/Oire&quot;]  \n- [&quot;Zachary Ferguson&quot;, &quot;http://github.com/zfergus2&quot;]  \n- [&quot;evuez&quot;, &quot;http://github.com/evuez&quot;]  \n</code></pre><p>filename: learnpython3.py<br>译者:  </p>\n<pre><code>- [&quot;ChangingFond&quot;, &quot;http://blog.fangchengjin.cn&quot;]\n</code></pre><hr>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div><div class=\"line\">243</div><div class=\"line\">244</div><div class=\"line\">245</div><div class=\"line\">246</div><div class=\"line\">247</div><div class=\"line\">248</div><div class=\"line\">249</div><div class=\"line\">250</div><div class=\"line\">251</div><div class=\"line\">252</div><div class=\"line\">253</div><div class=\"line\">254</div><div class=\"line\">255</div><div class=\"line\">256</div><div class=\"line\">257</div><div class=\"line\">258</div><div class=\"line\">259</div><div class=\"line\">260</div><div class=\"line\">261</div><div class=\"line\">262</div><div class=\"line\">263</div><div class=\"line\">264</div><div class=\"line\">265</div><div class=\"line\">266</div><div class=\"line\">267</div><div class=\"line\">268</div><div class=\"line\">269</div><div class=\"line\">270</div><div class=\"line\">271</div><div class=\"line\">272</div><div class=\"line\">273</div><div class=\"line\">274</div><div class=\"line\">275</div><div class=\"line\">276</div><div class=\"line\">277</div><div class=\"line\">278</div><div class=\"line\">279</div><div class=\"line\">280</div><div class=\"line\">281</div><div class=\"line\">282</div><div class=\"line\">283</div><div class=\"line\">284</div><div class=\"line\">285</div><div class=\"line\">286</div><div class=\"line\">287</div><div class=\"line\">288</div><div class=\"line\">289</div><div class=\"line\">290</div><div class=\"line\">291</div><div class=\"line\">292</div><div class=\"line\">293</div><div class=\"line\">294</div><div class=\"line\">295</div><div class=\"line\">296</div><div class=\"line\">297</div><div class=\"line\">298</div><div class=\"line\">299</div><div class=\"line\">300</div><div class=\"line\">301</div><div class=\"line\">302</div><div class=\"line\">303</div><div class=\"line\">304</div><div class=\"line\">305</div><div class=\"line\">306</div><div class=\"line\">307</div><div class=\"line\">308</div><div class=\"line\">309</div><div class=\"line\">310</div><div class=\"line\">311</div><div class=\"line\">312</div><div class=\"line\">313</div><div class=\"line\">314</div><div class=\"line\">315</div><div class=\"line\">316</div><div class=\"line\">317</div><div class=\"line\">318</div><div class=\"line\">319</div><div class=\"line\">320</div><div class=\"line\">321</div><div class=\"line\">322</div><div class=\"line\">323</div><div class=\"line\">324</div><div class=\"line\">325</div><div class=\"line\">326</div><div class=\"line\">327</div><div class=\"line\">328</div><div class=\"line\">329</div><div class=\"line\">330</div><div class=\"line\">331</div><div class=\"line\">332</div><div class=\"line\">333</div><div class=\"line\">334</div><div class=\"line\">335</div><div class=\"line\">336</div><div class=\"line\">337</div><div class=\"line\">338</div><div class=\"line\">339</div><div class=\"line\">340</div><div class=\"line\">341</div><div class=\"line\">342</div><div class=\"line\">343</div><div class=\"line\">344</div><div class=\"line\">345</div><div class=\"line\">346</div><div class=\"line\">347</div><div class=\"line\">348</div><div class=\"line\">349</div><div class=\"line\">350</div><div class=\"line\">351</div><div class=\"line\">352</div><div class=\"line\">353</div><div class=\"line\">354</div><div class=\"line\">355</div><div class=\"line\">356</div><div class=\"line\">357</div><div class=\"line\">358</div><div class=\"line\">359</div><div class=\"line\">360</div><div class=\"line\">361</div><div class=\"line\">362</div><div class=\"line\">363</div><div class=\"line\">364</div><div class=\"line\">365</div><div class=\"line\">366</div><div class=\"line\">367</div><div class=\"line\">368</div><div class=\"line\">369</div><div class=\"line\">370</div><div class=\"line\">371</div><div class=\"line\">372</div><div class=\"line\">373</div><div class=\"line\">374</div><div class=\"line\">375</div><div class=\"line\">376</div><div class=\"line\">377</div><div class=\"line\">378</div><div class=\"line\">379</div><div class=\"line\">380</div><div class=\"line\">381</div><div class=\"line\">382</div><div class=\"line\">383</div><div class=\"line\">384</div><div class=\"line\">385</div><div class=\"line\">386</div><div class=\"line\">387</div><div class=\"line\">388</div><div class=\"line\">389</div><div class=\"line\">390</div><div class=\"line\">391</div><div class=\"line\">392</div><div class=\"line\">393</div><div class=\"line\">394</div><div class=\"line\">395</div><div class=\"line\">396</div><div class=\"line\">397</div><div class=\"line\">398</div><div class=\"line\">399</div><div class=\"line\">400</div><div class=\"line\">401</div><div class=\"line\">402</div><div class=\"line\">403</div><div class=\"line\">404</div><div class=\"line\">405</div><div class=\"line\">406</div><div class=\"line\">407</div><div class=\"line\">408</div><div class=\"line\">409</div><div class=\"line\">410</div><div class=\"line\">411</div><div class=\"line\">412</div><div class=\"line\">413</div><div class=\"line\">414</div><div class=\"line\">415</div><div class=\"line\">416</div><div class=\"line\">417</div><div class=\"line\">418</div><div class=\"line\">419</div><div class=\"line\">420</div><div class=\"line\">421</div><div class=\"line\">422</div><div class=\"line\">423</div><div class=\"line\">424</div><div class=\"line\">425</div><div class=\"line\">426</div><div class=\"line\">427</div><div class=\"line\">428</div><div class=\"line\">429</div><div class=\"line\">430</div><div class=\"line\">431</div><div class=\"line\">432</div><div class=\"line\">433</div><div class=\"line\">434</div><div class=\"line\">435</div><div class=\"line\">436</div><div class=\"line\">437</div><div class=\"line\">438</div><div class=\"line\">439</div><div class=\"line\">440</div><div class=\"line\">441</div><div class=\"line\">442</div><div class=\"line\">443</div><div class=\"line\">444</div><div class=\"line\">445</div><div class=\"line\">446</div><div class=\"line\">447</div><div class=\"line\">448</div><div class=\"line\">449</div><div class=\"line\">450</div><div class=\"line\">451</div><div class=\"line\">452</div><div class=\"line\">453</div><div class=\"line\">454</div><div class=\"line\">455</div><div class=\"line\">456</div><div class=\"line\">457</div><div class=\"line\">458</div><div class=\"line\">459</div><div class=\"line\">460</div><div class=\"line\">461</div><div class=\"line\">462</div><div class=\"line\">463</div><div class=\"line\">464</div><div class=\"line\">465</div><div class=\"line\">466</div><div class=\"line\">467</div><div class=\"line\">468</div><div class=\"line\">469</div><div class=\"line\">470</div><div class=\"line\">471</div><div class=\"line\">472</div><div class=\"line\">473</div><div class=\"line\">474</div><div class=\"line\">475</div><div class=\"line\">476</div><div class=\"line\">477</div><div class=\"line\">478</div><div class=\"line\">479</div><div class=\"line\">480</div><div class=\"line\">481</div><div class=\"line\">482</div><div class=\"line\">483</div><div class=\"line\">484</div><div class=\"line\">485</div><div class=\"line\">486</div><div class=\"line\">487</div><div class=\"line\">488</div><div class=\"line\">489</div><div class=\"line\">490</div><div class=\"line\">491</div><div class=\"line\">492</div><div class=\"line\">493</div><div class=\"line\">494</div><div class=\"line\">495</div><div class=\"line\">496</div><div class=\"line\">497</div><div class=\"line\">498</div><div class=\"line\">499</div><div class=\"line\">500</div><div class=\"line\">501</div><div class=\"line\">502</div><div class=\"line\">503</div><div class=\"line\">504</div><div class=\"line\">505</div><div class=\"line\">506</div><div class=\"line\">507</div><div class=\"line\">508</div><div class=\"line\">509</div><div class=\"line\">510</div><div class=\"line\">511</div><div class=\"line\">512</div><div class=\"line\">513</div><div class=\"line\">514</div><div class=\"line\">515</div><div class=\"line\">516</div><div class=\"line\">517</div><div class=\"line\">518</div><div class=\"line\">519</div><div class=\"line\">520</div><div class=\"line\">521</div><div class=\"line\">522</div><div class=\"line\">523</div><div class=\"line\">524</div><div class=\"line\">525</div><div class=\"line\">526</div><div class=\"line\">527</div><div class=\"line\">528</div><div class=\"line\">529</div><div class=\"line\">530</div><div class=\"line\">531</div><div class=\"line\">532</div><div class=\"line\">533</div><div class=\"line\">534</div><div class=\"line\">535</div><div class=\"line\">536</div><div class=\"line\">537</div><div class=\"line\">538</div><div class=\"line\">539</div><div class=\"line\">540</div><div class=\"line\">541</div><div class=\"line\">542</div><div class=\"line\">543</div><div class=\"line\">544</div><div class=\"line\">545</div><div class=\"line\">546</div><div class=\"line\">547</div><div class=\"line\">548</div><div class=\"line\">549</div><div class=\"line\">550</div><div class=\"line\">551</div><div class=\"line\">552</div><div class=\"line\">553</div><div class=\"line\">554</div><div class=\"line\">555</div><div class=\"line\">556</div><div class=\"line\">557</div><div class=\"line\">558</div><div class=\"line\">559</div><div class=\"line\">560</div><div class=\"line\">561</div><div class=\"line\">562</div><div class=\"line\">563</div><div class=\"line\">564</div><div class=\"line\">565</div><div class=\"line\">566</div><div class=\"line\">567</div><div class=\"line\">568</div><div class=\"line\">569</div><div class=\"line\">570</div><div class=\"line\">571</div><div class=\"line\">572</div><div class=\"line\">573</div><div class=\"line\">574</div><div class=\"line\">575</div><div class=\"line\">576</div><div class=\"line\">577</div><div class=\"line\">578</div><div class=\"line\">579</div><div class=\"line\">580</div><div class=\"line\">581</div><div class=\"line\">582</div><div class=\"line\">583</div><div class=\"line\">584</div><div class=\"line\">585</div><div class=\"line\">586</div><div class=\"line\">587</div><div class=\"line\">588</div><div class=\"line\">589</div><div class=\"line\">590</div><div class=\"line\">591</div><div class=\"line\">592</div><div class=\"line\">593</div><div class=\"line\">594</div><div class=\"line\">595</div><div class=\"line\">596</div><div class=\"line\">597</div><div class=\"line\">598</div><div class=\"line\">599</div><div class=\"line\">600</div><div class=\"line\">601</div><div class=\"line\">602</div><div class=\"line\">603</div><div class=\"line\">604</div><div class=\"line\">605</div><div class=\"line\">606</div><div class=\"line\">607</div><div class=\"line\">608</div><div class=\"line\">609</div><div class=\"line\">610</div><div class=\"line\">611</div><div class=\"line\">612</div><div class=\"line\">613</div><div class=\"line\">614</div><div class=\"line\">615</div><div class=\"line\">616</div><div class=\"line\">617</div><div class=\"line\">618</div><div class=\"line\">619</div><div class=\"line\">620</div><div class=\"line\">621</div><div class=\"line\">622</div><div class=\"line\">623</div><div class=\"line\">624</div><div class=\"line\">625</div><div class=\"line\">626</div><div class=\"line\">627</div><div class=\"line\">628</div><div class=\"line\">629</div><div class=\"line\">630</div><div class=\"line\">631</div><div class=\"line\">632</div><div class=\"line\">633</div><div class=\"line\">634</div><div class=\"line\">635</div><div class=\"line\">636</div><div class=\"line\">637</div><div class=\"line\">638</div><div class=\"line\">639</div><div class=\"line\">640</div><div class=\"line\">641</div><div class=\"line\">642</div><div class=\"line\">643</div><div class=\"line\">644</div><div class=\"line\">645</div><div class=\"line\">646</div><div class=\"line\">647</div><div class=\"line\">648</div><div class=\"line\">649</div><div class=\"line\">650</div><div class=\"line\">651</div><div class=\"line\">652</div><div class=\"line\">653</div><div class=\"line\">654</div><div class=\"line\">655</div><div class=\"line\">656</div><div class=\"line\">657</div><div class=\"line\">658</div><div class=\"line\">659</div><div class=\"line\">660</div><div class=\"line\">661</div><div class=\"line\">662</div><div class=\"line\">663</div><div class=\"line\">664</div><div class=\"line\">665</div><div class=\"line\">666</div><div class=\"line\">667</div><div class=\"line\">668</div><div class=\"line\">669</div><div class=\"line\">670</div><div class=\"line\">671</div><div class=\"line\">672</div><div class=\"line\">673</div><div class=\"line\">674</div><div class=\"line\">675</div><div class=\"line\">676</div><div class=\"line\">677</div><div class=\"line\">678</div><div class=\"line\">679</div><div class=\"line\">680</div><div class=\"line\">681</div><div class=\"line\">682</div><div class=\"line\">683</div><div class=\"line\">684</div><div class=\"line\">685</div><div class=\"line\">686</div><div class=\"line\">687</div><div class=\"line\">688</div><div class=\"line\">689</div><div class=\"line\">690</div><div class=\"line\">691</div><div class=\"line\">692</div><div class=\"line\">693</div><div class=\"line\">694</div><div class=\"line\">695</div><div class=\"line\">696</div><div class=\"line\">697</div><div class=\"line\">698</div><div class=\"line\">699</div><div class=\"line\">700</div><div class=\"line\">701</div><div class=\"line\">702</div><div class=\"line\">703</div><div class=\"line\">704</div><div class=\"line\">705</div><div class=\"line\">706</div><div class=\"line\">707</div><div class=\"line\">708</div><div class=\"line\">709</div><div class=\"line\">710</div><div class=\"line\">711</div><div class=\"line\">712</div><div class=\"line\">713</div><div class=\"line\">714</div><div class=\"line\">715</div><div class=\"line\">716</div><div class=\"line\">717</div><div class=\"line\">718</div><div class=\"line\">719</div><div class=\"line\">720</div><div class=\"line\">721</div><div class=\"line\">722</div><div class=\"line\">723</div><div class=\"line\">724</div><div class=\"line\">725</div><div class=\"line\">726</div><div class=\"line\">727</div><div class=\"line\">728</div><div class=\"line\">729</div><div class=\"line\">730</div><div class=\"line\">731</div><div class=\"line\">732</div><div class=\"line\">733</div><div class=\"line\">734</div><div class=\"line\">735</div><div class=\"line\">736</div><div class=\"line\">737</div><div class=\"line\">738</div><div class=\"line\">739</div><div class=\"line\">740</div><div class=\"line\">741</div><div class=\"line\">742</div><div class=\"line\">743</div><div class=\"line\">744</div><div class=\"line\">745</div><div class=\"line\">746</div><div class=\"line\">747</div><div class=\"line\">748</div><div class=\"line\">749</div><div class=\"line\">750</div><div class=\"line\">751</div><div class=\"line\">752</div><div class=\"line\">753</div><div class=\"line\">754</div><div class=\"line\">755</div><div class=\"line\">756</div><div class=\"line\">757</div><div class=\"line\">758</div><div class=\"line\">759</div><div class=\"line\">760</div><div class=\"line\">761</div><div class=\"line\">762</div><div class=\"line\">763</div><div class=\"line\">764</div><div class=\"line\">765</div><div class=\"line\">766</div><div class=\"line\">767</div><div class=\"line\">768</div><div class=\"line\">769</div><div class=\"line\">770</div><div class=\"line\">771</div><div class=\"line\">772</div><div class=\"line\">773</div><div class=\"line\">774</div><div class=\"line\">775</div><div class=\"line\">776</div><div class=\"line\">777</div><div class=\"line\">778</div><div class=\"line\">779</div><div class=\"line\">780</div><div class=\"line\">781</div><div class=\"line\">782</div><div class=\"line\">783</div><div class=\"line\">784</div><div class=\"line\">785</div><div class=\"line\">786</div><div class=\"line\">787</div><div class=\"line\">788</div><div class=\"line\">789</div><div class=\"line\">790</div><div class=\"line\">791</div><div class=\"line\">792</div><div class=\"line\">793</div><div class=\"line\">794</div><div class=\"line\">795</div><div class=\"line\">796</div><div class=\"line\">797</div><div class=\"line\">798</div><div class=\"line\">799</div><div class=\"line\">800</div><div class=\"line\">801</div><div class=\"line\">802</div><div class=\"line\">803</div><div class=\"line\">804</div><div class=\"line\">805</div><div class=\"line\">806</div><div class=\"line\">807</div><div class=\"line\">808</div><div class=\"line\">809</div><div class=\"line\">810</div><div class=\"line\">811</div><div class=\"line\">812</div><div class=\"line\">813</div><div class=\"line\">814</div><div class=\"line\">815</div><div class=\"line\">816</div><div class=\"line\">817</div><div class=\"line\">818</div><div class=\"line\">819</div><div class=\"line\">820</div><div class=\"line\">821</div><div class=\"line\">822</div><div class=\"line\">823</div><div class=\"line\">824</div><div class=\"line\">825</div><div class=\"line\">826</div><div class=\"line\">827</div><div class=\"line\">828</div><div class=\"line\">829</div><div class=\"line\">830</div><div class=\"line\">831</div><div class=\"line\">832</div><div class=\"line\">833</div><div class=\"line\">834</div><div class=\"line\">835</div><div class=\"line\">836</div><div class=\"line\">837</div><div class=\"line\">838</div><div class=\"line\">839</div><div class=\"line\">840</div><div class=\"line\">841</div><div class=\"line\">842</div><div class=\"line\">843</div><div class=\"line\">844</div><div class=\"line\">845</div><div class=\"line\">846</div><div class=\"line\">847</div><div class=\"line\">848</div><div class=\"line\">849</div><div class=\"line\">850</div><div class=\"line\">851</div><div class=\"line\">852</div><div class=\"line\">853</div><div class=\"line\">854</div><div class=\"line\">855</div><div class=\"line\">856</div><div class=\"line\">857</div><div class=\"line\">858</div><div class=\"line\">859</div><div class=\"line\">860</div><div class=\"line\">861</div><div class=\"line\">862</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Single line comments start with a number symbol.</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">\"\"\" Multiline strings can be written</span></div><div class=\"line\">    using three \"s, and are often used</div><div class=\"line\">    as comments</div><div class=\"line\">\"\"\"</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">####################################################</span></div><div class=\"line\"><span class=\"comment\">## 1. Primitive Datatypes and Operators</span></div><div class=\"line\"><span class=\"comment\">####################################################</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># You have numbers</span></div><div class=\"line\"><span class=\"number\">3</span>  <span class=\"comment\"># =&gt; 3</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Math is what you would expect</span></div><div class=\"line\"><span class=\"number\">1</span> + <span class=\"number\">1</span>   <span class=\"comment\"># =&gt; 2</span></div><div class=\"line\"><span class=\"number\">8</span> - <span class=\"number\">1</span>   <span class=\"comment\"># =&gt; 7</span></div><div class=\"line\"><span class=\"number\">10</span> * <span class=\"number\">2</span>  <span class=\"comment\"># =&gt; 20</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Except division which returns floats, real numbers, by default</span></div><div class=\"line\"><span class=\"number\">35</span> / <span class=\"number\">5</span>  <span class=\"comment\"># =&gt; 7.0</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Result of integer division truncated down both for positive and negative.</span></div><div class=\"line\"><span class=\"number\">5</span> // <span class=\"number\">3</span>       <span class=\"comment\"># =&gt; 1</span></div><div class=\"line\"><span class=\"number\">5.0</span> // <span class=\"number\">3.0</span>   <span class=\"comment\"># =&gt; 1.0 # works on floats too</span></div><div class=\"line\"><span class=\"number\">-5</span> // <span class=\"number\">3</span>      <span class=\"comment\"># =&gt; -2</span></div><div class=\"line\"><span class=\"number\">-5.0</span> // <span class=\"number\">3.0</span>  <span class=\"comment\"># =&gt; -2.0</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># When you use a float, results are floats</span></div><div class=\"line\"><span class=\"number\">3</span> * <span class=\"number\">2.0</span>  <span class=\"comment\"># =&gt; 6.0</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Modulo operation</span></div><div class=\"line\"><span class=\"number\">7</span> % <span class=\"number\">3</span>  <span class=\"comment\"># =&gt; 1</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Exponentiation (x**y, x to the yth power)</span></div><div class=\"line\"><span class=\"number\">2</span>**<span class=\"number\">4</span>  <span class=\"comment\"># =&gt; 16</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Enforce precedence with parentheses</span></div><div class=\"line\">(<span class=\"number\">1</span> + <span class=\"number\">3</span>) * <span class=\"number\">2</span>  <span class=\"comment\"># =&gt; 8</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Boolean values are primitives (Note: the capitalization)</span></div><div class=\"line\"><span class=\"keyword\">True</span></div><div class=\"line\"><span class=\"keyword\">False</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># negate with not</span></div><div class=\"line\"><span class=\"keyword\">not</span> <span class=\"keyword\">True</span>   <span class=\"comment\"># =&gt; False</span></div><div class=\"line\"><span class=\"keyword\">not</span> <span class=\"keyword\">False</span>  <span class=\"comment\"># =&gt; True</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Boolean Operators</span></div><div class=\"line\"><span class=\"comment\"># Note \"and\" and \"or\" are case-sensitive</span></div><div class=\"line\"><span class=\"keyword\">True</span> <span class=\"keyword\">and</span> <span class=\"keyword\">False</span>  <span class=\"comment\"># =&gt; False</span></div><div class=\"line\"><span class=\"keyword\">False</span> <span class=\"keyword\">or</span> <span class=\"keyword\">True</span>   <span class=\"comment\"># =&gt; True</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Note using Bool operators with ints</span></div><div class=\"line\"><span class=\"number\">0</span> <span class=\"keyword\">and</span> <span class=\"number\">2</span>     <span class=\"comment\"># =&gt; 0</span></div><div class=\"line\"><span class=\"number\">-5</span> <span class=\"keyword\">or</span> <span class=\"number\">0</span>     <span class=\"comment\"># =&gt; -5</span></div><div class=\"line\"><span class=\"number\">0</span> == <span class=\"keyword\">False</span>  <span class=\"comment\"># =&gt; True</span></div><div class=\"line\"><span class=\"number\">2</span> == <span class=\"keyword\">True</span>   <span class=\"comment\"># =&gt; False</span></div><div class=\"line\"><span class=\"number\">1</span> == <span class=\"keyword\">True</span>   <span class=\"comment\"># =&gt; True</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Equality is ==</span></div><div class=\"line\"><span class=\"number\">1</span> == <span class=\"number\">1</span>  <span class=\"comment\"># =&gt; True</span></div><div class=\"line\"><span class=\"number\">2</span> == <span class=\"number\">1</span>  <span class=\"comment\"># =&gt; False</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Inequality is !=</span></div><div class=\"line\"><span class=\"number\">1</span> != <span class=\"number\">1</span>  <span class=\"comment\"># =&gt; False</span></div><div class=\"line\"><span class=\"number\">2</span> != <span class=\"number\">1</span>  <span class=\"comment\"># =&gt; True</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># More comparisons</span></div><div class=\"line\"><span class=\"number\">1</span> &lt; <span class=\"number\">10</span>  <span class=\"comment\"># =&gt; True</span></div><div class=\"line\"><span class=\"number\">1</span> &gt; <span class=\"number\">10</span>  <span class=\"comment\"># =&gt; False</span></div><div class=\"line\"><span class=\"number\">2</span> &lt;= <span class=\"number\">2</span>  <span class=\"comment\"># =&gt; True</span></div><div class=\"line\"><span class=\"number\">2</span> &gt;= <span class=\"number\">2</span>  <span class=\"comment\"># =&gt; True</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Comparisons can be chained!</span></div><div class=\"line\"><span class=\"number\">1</span> &lt; <span class=\"number\">2</span> &lt; <span class=\"number\">3</span>  <span class=\"comment\"># =&gt; True</span></div><div class=\"line\"><span class=\"number\">2</span> &lt; <span class=\"number\">3</span> &lt; <span class=\"number\">2</span>  <span class=\"comment\"># =&gt; False</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># (is vs. ==) is checks if two variables refer to the same object, but == checks</span></div><div class=\"line\"><span class=\"comment\"># if the objects pointed to have the same values.</span></div><div class=\"line\">a = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]  <span class=\"comment\"># Point a at a new list, [1, 2, 3, 4]</span></div><div class=\"line\">b = a             <span class=\"comment\"># Point b at what a is pointing to</span></div><div class=\"line\">b <span class=\"keyword\">is</span> a            <span class=\"comment\"># =&gt; True, a and b refer to the same object</span></div><div class=\"line\">b == a            <span class=\"comment\"># =&gt; True, a's and b's objects are equal</span></div><div class=\"line\">b = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]  <span class=\"comment\"># Point b at a new list, [1, 2, 3, 4]</span></div><div class=\"line\">b <span class=\"keyword\">is</span> a            <span class=\"comment\"># =&gt; False, a and b do not refer to the same object</span></div><div class=\"line\">b == a            <span class=\"comment\"># =&gt; True, a's and b's objects are equal</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Strings are created with \" or '</span></div><div class=\"line\"><span class=\"string\">\"This is a string.\"</span></div><div class=\"line\"><span class=\"string\">'This is also a string.'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Strings can be added too! But try not to do this.</span></div><div class=\"line\"><span class=\"string\">\"Hello \"</span> + <span class=\"string\">\"world!\"</span>  <span class=\"comment\"># =&gt; \"Hello world!\"</span></div><div class=\"line\"><span class=\"comment\"># Strings can be added without using '+'</span></div><div class=\"line\"><span class=\"string\">\"Hello \"</span> <span class=\"string\">\"world!\"</span>    <span class=\"comment\"># =&gt; \"Hello world!\"</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># A string can be treated like a list of characters</span></div><div class=\"line\"><span class=\"string\">\"This is a string\"</span>[<span class=\"number\">0</span>]  <span class=\"comment\"># =&gt; 'T'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># You can find the length of a string</span></div><div class=\"line\">len(<span class=\"string\">\"This is a string\"</span>)  <span class=\"comment\"># =&gt; 16</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># .format can be used to format strings, like this:</span></div><div class=\"line\"><span class=\"string\">\"&#123;&#125; can be &#123;&#125;\"</span>.format(<span class=\"string\">\"Strings\"</span>, <span class=\"string\">\"interpolated\"</span>)  <span class=\"comment\"># =&gt; \"Strings can be interpolated\"</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># You can repeat the formatting arguments to save some typing.</span></div><div class=\"line\"><span class=\"string\">\"&#123;0&#125; be nimble, &#123;0&#125; be quick, &#123;0&#125; jump over the &#123;1&#125;\"</span>.format(<span class=\"string\">\"Jack\"</span>, <span class=\"string\">\"candle stick\"</span>)</div><div class=\"line\"><span class=\"comment\"># =&gt; \"Jack be nimble, Jack be quick, Jack jump over the candle stick\"</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># You can use keywords if you don't want to count.</span></div><div class=\"line\"><span class=\"string\">\"&#123;name&#125; wants to eat &#123;food&#125;\"</span>.format(name=<span class=\"string\">\"Bob\"</span>, food=<span class=\"string\">\"lasagna\"</span>)  <span class=\"comment\"># =&gt; \"Bob wants to eat lasagna\"</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># If your Python 3 code also needs to run on Python 2.5 and below, you can also</span></div><div class=\"line\"><span class=\"comment\"># still use the old style of formatting:</span></div><div class=\"line\"><span class=\"string\">\"%s can be %s the %s way\"</span> % (<span class=\"string\">\"Strings\"</span>, <span class=\"string\">\"interpolated\"</span>, <span class=\"string\">\"old\"</span>)  <span class=\"comment\"># =&gt; \"Strings can be interpolated the old way\"</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># None is an object</span></div><div class=\"line\"><span class=\"keyword\">None</span>  <span class=\"comment\"># =&gt; None</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Don't use the equality \"==\" symbol to compare objects to None</span></div><div class=\"line\"><span class=\"comment\"># Use \"is\" instead. This checks for equality of object identity.</span></div><div class=\"line\"><span class=\"string\">\"etc\"</span> <span class=\"keyword\">is</span> <span class=\"keyword\">None</span>  <span class=\"comment\"># =&gt; False</span></div><div class=\"line\"><span class=\"keyword\">None</span> <span class=\"keyword\">is</span> <span class=\"keyword\">None</span>   <span class=\"comment\"># =&gt; True</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># None, 0, and empty strings/lists/dicts all evaluate to False.</span></div><div class=\"line\"><span class=\"comment\"># All other values are True</span></div><div class=\"line\">bool(<span class=\"number\">0</span>)   <span class=\"comment\"># =&gt; False</span></div><div class=\"line\">bool(<span class=\"string\">\"\"</span>)  <span class=\"comment\"># =&gt; False</span></div><div class=\"line\">bool([])  <span class=\"comment\"># =&gt; False</span></div><div class=\"line\">bool(&#123;&#125;)  <span class=\"comment\"># =&gt; False</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">####################################################</span></div><div class=\"line\"><span class=\"comment\">## 2. Variables and Collections</span></div><div class=\"line\"><span class=\"comment\">####################################################</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Python has a print function</span></div><div class=\"line\">print(<span class=\"string\">\"I'm Python. Nice to meet you!\"</span>)  <span class=\"comment\"># =&gt; I'm Python. Nice to meet you!</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># By default the print function also prints out a newline at the end.</span></div><div class=\"line\"><span class=\"comment\"># Use the optional argument end to change the end character.</span></div><div class=\"line\">print(<span class=\"string\">\"Hello, World\"</span>, end=<span class=\"string\">\"!\"</span>)  <span class=\"comment\"># =&gt; Hello, World!</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Simple way to get input data from console</span></div><div class=\"line\">input_string_var = input(<span class=\"string\">\"Enter some data: \"</span>) <span class=\"comment\"># Returns the data as a string</span></div><div class=\"line\"><span class=\"comment\"># Note: In earlier versions of Python, input() method was named as raw_input()</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># No need to declare variables before assigning to them.</span></div><div class=\"line\"><span class=\"comment\"># Convention is to use lower_case_with_underscores</span></div><div class=\"line\">some_var = <span class=\"number\">5</span></div><div class=\"line\">some_var  <span class=\"comment\"># =&gt; 5</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Accessing a previously unassigned variable is an exception.</span></div><div class=\"line\"><span class=\"comment\"># See Control Flow to learn more about exception handling.</span></div><div class=\"line\">some_unknown_var  <span class=\"comment\"># Raises a NameError</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># if can be used as an expression</span></div><div class=\"line\"><span class=\"comment\"># Equivalent of C's '?:' ternary operator</span></div><div class=\"line\"><span class=\"string\">\"yahoo!\"</span> <span class=\"keyword\">if</span> <span class=\"number\">3</span> &gt; <span class=\"number\">2</span> <span class=\"keyword\">else</span> <span class=\"number\">2</span>  <span class=\"comment\"># =&gt; \"yahoo!\"</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Lists store sequences</span></div><div class=\"line\">li = []</div><div class=\"line\"><span class=\"comment\"># You can start with a prefilled list</span></div><div class=\"line\">other_li = [<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Add stuff to the end of a list with append</span></div><div class=\"line\">li.append(<span class=\"number\">1</span>)    <span class=\"comment\"># li is now [1]</span></div><div class=\"line\">li.append(<span class=\"number\">2</span>)    <span class=\"comment\"># li is now [1, 2]</span></div><div class=\"line\">li.append(<span class=\"number\">4</span>)    <span class=\"comment\"># li is now [1, 2, 4]</span></div><div class=\"line\">li.append(<span class=\"number\">3</span>)    <span class=\"comment\"># li is now [1, 2, 4, 3]</span></div><div class=\"line\"><span class=\"comment\"># Remove from the end with pop</span></div><div class=\"line\">li.pop()        <span class=\"comment\"># =&gt; 3 and li is now [1, 2, 4]</span></div><div class=\"line\"><span class=\"comment\"># Let's put it back</span></div><div class=\"line\">li.append(<span class=\"number\">3</span>)    <span class=\"comment\"># li is now [1, 2, 4, 3] again.</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Access a list like you would any array</span></div><div class=\"line\">li[<span class=\"number\">0</span>]   <span class=\"comment\"># =&gt; 1</span></div><div class=\"line\"><span class=\"comment\"># Look at the last element</span></div><div class=\"line\">li[<span class=\"number\">-1</span>]  <span class=\"comment\"># =&gt; 3</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Looking out of bounds is an IndexError</span></div><div class=\"line\">li[<span class=\"number\">4</span>]  <span class=\"comment\"># Raises an IndexError</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># You can look at ranges with slice syntax.</span></div><div class=\"line\"><span class=\"comment\"># (It's a closed/open range for you mathy types.)</span></div><div class=\"line\">li[<span class=\"number\">1</span>:<span class=\"number\">3</span>]   <span class=\"comment\"># =&gt; [2, 4]</span></div><div class=\"line\"><span class=\"comment\"># Omit the beginning</span></div><div class=\"line\">li[<span class=\"number\">2</span>:]    <span class=\"comment\"># =&gt; [4, 3]</span></div><div class=\"line\"><span class=\"comment\"># Omit the end</span></div><div class=\"line\">li[:<span class=\"number\">3</span>]    <span class=\"comment\"># =&gt; [1, 2, 4]</span></div><div class=\"line\"><span class=\"comment\"># Select every second entry</span></div><div class=\"line\">li[::<span class=\"number\">2</span>]   <span class=\"comment\"># =&gt;[1, 4]</span></div><div class=\"line\"><span class=\"comment\"># Return a reversed copy of the list</span></div><div class=\"line\">li[::<span class=\"number\">-1</span>]  <span class=\"comment\"># =&gt; [3, 4, 2, 1]</span></div><div class=\"line\"><span class=\"comment\"># Use any combination of these to make advanced slices</span></div><div class=\"line\"><span class=\"comment\"># li[start:end:step]</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Make a one layer deep copy using slices</span></div><div class=\"line\">li2 = li[:]  <span class=\"comment\"># =&gt; li2 = [1, 2, 4, 3] but (li2 is li) will result in false.</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Remove arbitrary elements from a list with \"del\"</span></div><div class=\"line\"><span class=\"keyword\">del</span> li[<span class=\"number\">2</span>]  <span class=\"comment\"># li is now [1, 2, 3]</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Remove first occurrence of a value</span></div><div class=\"line\">li.remove(<span class=\"number\">2</span>)  <span class=\"comment\"># li is now [1, 3]</span></div><div class=\"line\">li.remove(<span class=\"number\">2</span>)  <span class=\"comment\"># Raises a ValueError as 2 is not in the list</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Insert an element at a specific index</span></div><div class=\"line\">li.insert(<span class=\"number\">1</span>, <span class=\"number\">2</span>)  <span class=\"comment\"># li is now [1, 2, 3] again</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Get the index of the first item found matching the argument</span></div><div class=\"line\">li.index(<span class=\"number\">2</span>)  <span class=\"comment\"># =&gt; 1</span></div><div class=\"line\">li.index(<span class=\"number\">4</span>)  <span class=\"comment\"># Raises a ValueError as 4 is not in the list</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># You can add lists</span></div><div class=\"line\"><span class=\"comment\"># Note: values for li and for other_li are not modified.</span></div><div class=\"line\">li + other_li  <span class=\"comment\"># =&gt; [1, 2, 3, 4, 5, 6]</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Concatenate lists with \"extend()\"</span></div><div class=\"line\">li.extend(other_li)  <span class=\"comment\"># Now li is [1, 2, 3, 4, 5, 6]</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Check for existence in a list with \"in\"</span></div><div class=\"line\"><span class=\"number\">1</span> <span class=\"keyword\">in</span> li  <span class=\"comment\"># =&gt; True</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Examine the length with \"len()\"</span></div><div class=\"line\">len(li)  <span class=\"comment\"># =&gt; 6</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Tuples are like lists but are immutable.</span></div><div class=\"line\">tup = (<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>)</div><div class=\"line\">tup[<span class=\"number\">0</span>]      <span class=\"comment\"># =&gt; 1</span></div><div class=\"line\">tup[<span class=\"number\">0</span>] = <span class=\"number\">3</span>  <span class=\"comment\"># Raises a TypeError</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Note that a tuple of length one has to have a comma after the last element but</span></div><div class=\"line\"><span class=\"comment\"># tuples of other lengths, even zero, do not.</span></div><div class=\"line\">type((<span class=\"number\">1</span>))   <span class=\"comment\"># =&gt; &lt;class 'int'&gt;</span></div><div class=\"line\">type((<span class=\"number\">1</span>,))  <span class=\"comment\"># =&gt; &lt;class 'tuple'&gt;</span></div><div class=\"line\">type(())    <span class=\"comment\"># =&gt; &lt;class 'tuple'&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># You can do most of the list operations on tuples too</span></div><div class=\"line\">len(tup)         <span class=\"comment\"># =&gt; 3</span></div><div class=\"line\">tup + (<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>)  <span class=\"comment\"># =&gt; (1, 2, 3, 4, 5, 6)</span></div><div class=\"line\">tup[:<span class=\"number\">2</span>]          <span class=\"comment\"># =&gt; (1, 2)</span></div><div class=\"line\"><span class=\"number\">2</span> <span class=\"keyword\">in</span> tup         <span class=\"comment\"># =&gt; True</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># You can unpack tuples (or lists) into variables</span></div><div class=\"line\">a, b, c = (<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>)  <span class=\"comment\"># a is now 1, b is now 2 and c is now 3</span></div><div class=\"line\"><span class=\"comment\"># You can also do extended unpacking</span></div><div class=\"line\">a, *b, c = (<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>)  <span class=\"comment\"># a is now 1, b is now [2, 3] and c is now 4</span></div><div class=\"line\"><span class=\"comment\"># Tuples are created by default if you leave out the parentheses</span></div><div class=\"line\">d, e, f = <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span></div><div class=\"line\"><span class=\"comment\"># Now look how easy it is to swap two values</span></div><div class=\"line\">e, d = d, e  <span class=\"comment\"># d is now 5 and e is now 4</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Dictionaries store mappings</span></div><div class=\"line\">empty_dict = &#123;&#125;</div><div class=\"line\"><span class=\"comment\"># Here is a prefilled dictionary</span></div><div class=\"line\">filled_dict = &#123;<span class=\"string\">\"one\"</span>: <span class=\"number\">1</span>, <span class=\"string\">\"two\"</span>: <span class=\"number\">2</span>, <span class=\"string\">\"three\"</span>: <span class=\"number\">3</span>&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Note keys for dictionaries have to be immutable types. This is to ensure that</span></div><div class=\"line\"><span class=\"comment\"># the key can be converted to a constant hash value for quick look-ups.</span></div><div class=\"line\"><span class=\"comment\"># Immutable types include ints, floats, strings, tuples.</span></div><div class=\"line\">invalid_dict = &#123;[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]: <span class=\"string\">\"123\"</span>&#125;  <span class=\"comment\"># =&gt; Raises a TypeError: unhashable type: 'list'</span></div><div class=\"line\">valid_dict = &#123;(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>):[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]&#125;   <span class=\"comment\"># Values can be of any type, however.</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Look up values with []</span></div><div class=\"line\">filled_dict[<span class=\"string\">\"one\"</span>]  <span class=\"comment\"># =&gt; 1</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Get all keys as an iterable with \"keys()\". We need to wrap the call in list()</span></div><div class=\"line\"><span class=\"comment\"># to turn it into a list. We'll talk about those later.  Note - Dictionary key</span></div><div class=\"line\"><span class=\"comment\"># ordering is not guaranteed. Your results might not match this exactly.</span></div><div class=\"line\">list(filled_dict.keys())  <span class=\"comment\"># =&gt; [\"three\", \"two\", \"one\"]</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Get all values as an iterable with \"values()\". Once again we need to wrap it</span></div><div class=\"line\"><span class=\"comment\"># in list() to get it out of the iterable. Note - Same as above regarding key</span></div><div class=\"line\"><span class=\"comment\"># ordering.</span></div><div class=\"line\">list(filled_dict.values())  <span class=\"comment\"># =&gt; [3, 2, 1]</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Check for existence of keys in a dictionary with \"in\"</span></div><div class=\"line\"><span class=\"string\">\"one\"</span> <span class=\"keyword\">in</span> filled_dict  <span class=\"comment\"># =&gt; True</span></div><div class=\"line\"><span class=\"number\">1</span> <span class=\"keyword\">in</span> filled_dict      <span class=\"comment\"># =&gt; False</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Looking up a non-existing key is a KeyError</span></div><div class=\"line\">filled_dict[<span class=\"string\">\"four\"</span>]  <span class=\"comment\"># KeyError</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Use \"get()\" method to avoid the KeyError</span></div><div class=\"line\">filled_dict.get(<span class=\"string\">\"one\"</span>)      <span class=\"comment\"># =&gt; 1</span></div><div class=\"line\">filled_dict.get(<span class=\"string\">\"four\"</span>)     <span class=\"comment\"># =&gt; None</span></div><div class=\"line\"><span class=\"comment\"># The get method supports a default argument when the value is missing</span></div><div class=\"line\">filled_dict.get(<span class=\"string\">\"one\"</span>, <span class=\"number\">4</span>)   <span class=\"comment\"># =&gt; 1</span></div><div class=\"line\">filled_dict.get(<span class=\"string\">\"four\"</span>, <span class=\"number\">4</span>)  <span class=\"comment\"># =&gt; 4</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># \"setdefault()\" inserts into a dictionary only if the given key isn't present</span></div><div class=\"line\">filled_dict.setdefault(<span class=\"string\">\"five\"</span>, <span class=\"number\">5</span>)  <span class=\"comment\"># filled_dict[\"five\"] is set to 5</span></div><div class=\"line\">filled_dict.setdefault(<span class=\"string\">\"five\"</span>, <span class=\"number\">6</span>)  <span class=\"comment\"># filled_dict[\"five\"] is still 5</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Adding to a dictionary</span></div><div class=\"line\">filled_dict.update(&#123;<span class=\"string\">\"four\"</span>:<span class=\"number\">4</span>&#125;)  <span class=\"comment\"># =&gt; &#123;\"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4&#125;</span></div><div class=\"line\"><span class=\"comment\">#filled_dict[\"four\"] = 4        #another way to add to dict</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Remove keys from a dictionary with del</span></div><div class=\"line\"><span class=\"keyword\">del</span> filled_dict[<span class=\"string\">\"one\"</span>]  <span class=\"comment\"># Removes the key \"one\" from filled dict</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># From Python 3.5 you can also use the additional unpacking options</span></div><div class=\"line\">&#123;<span class=\"string\">'a'</span>: <span class=\"number\">1</span>, **&#123;<span class=\"string\">'b'</span>: <span class=\"number\">2</span>&#125;&#125;  <span class=\"comment\"># =&gt; &#123;'a': 1, 'b': 2&#125;</span></div><div class=\"line\">&#123;<span class=\"string\">'a'</span>: <span class=\"number\">1</span>, **&#123;<span class=\"string\">'a'</span>: <span class=\"number\">2</span>&#125;&#125;  <span class=\"comment\"># =&gt; &#123;'a': 2&#125;</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Sets store ... well sets</span></div><div class=\"line\">empty_set = set()</div><div class=\"line\"><span class=\"comment\"># Initialize a set with a bunch of values. Yeah, it looks a bit like a dict. Sorry.</span></div><div class=\"line\">some_set = &#123;<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>&#125;  <span class=\"comment\"># some_set is now &#123;1, 2, 3, 4&#125;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Similar to keys of a dictionary, elements of a set have to be immutable.</span></div><div class=\"line\">invalid_set = &#123;[<span class=\"number\">1</span>], <span class=\"number\">1</span>&#125;  <span class=\"comment\"># =&gt; Raises a TypeError: unhashable type: 'list'</span></div><div class=\"line\">valid_set = &#123;(<span class=\"number\">1</span>,), <span class=\"number\">1</span>&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Can set new variables to a set</span></div><div class=\"line\">filled_set = some_set</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Add one more item to the set</span></div><div class=\"line\">filled_set.add(<span class=\"number\">5</span>)  <span class=\"comment\"># filled_set is now &#123;1, 2, 3, 4, 5&#125;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Do set intersection with &amp;</span></div><div class=\"line\">other_set = &#123;<span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>&#125;</div><div class=\"line\">filled_set &amp; other_set  <span class=\"comment\"># =&gt; &#123;3, 4, 5&#125;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Do set union with |</span></div><div class=\"line\">filled_set | other_set  <span class=\"comment\"># =&gt; &#123;1, 2, 3, 4, 5, 6&#125;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Do set difference with -</span></div><div class=\"line\">&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>&#125; - &#123;<span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>&#125;  <span class=\"comment\"># =&gt; &#123;1, 4&#125;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Do set symmetric difference with ^</span></div><div class=\"line\">&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>&#125; ^ &#123;<span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>&#125;  <span class=\"comment\"># =&gt; &#123;1, 4, 5&#125;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Check if set on the left is a superset of set on the right</span></div><div class=\"line\">&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>&#125; &gt;= &#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>&#125; <span class=\"comment\"># =&gt; False</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Check if set on the left is a subset of set on the right</span></div><div class=\"line\">&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>&#125; &lt;= &#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>&#125; <span class=\"comment\"># =&gt; True</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Check for existence in a set with in</span></div><div class=\"line\"><span class=\"number\">2</span> <span class=\"keyword\">in</span> filled_set   <span class=\"comment\"># =&gt; True</span></div><div class=\"line\"><span class=\"number\">10</span> <span class=\"keyword\">in</span> filled_set  <span class=\"comment\"># =&gt; False</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">####################################################</span></div><div class=\"line\"><span class=\"comment\">## 3. Control Flow and Iterables</span></div><div class=\"line\"><span class=\"comment\">####################################################</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Let's just make a variable</span></div><div class=\"line\">some_var = <span class=\"number\">5</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Here is an if statement. Indentation is significant in python!</span></div><div class=\"line\"><span class=\"comment\"># prints \"some_var is smaller than 10\"</span></div><div class=\"line\"><span class=\"keyword\">if</span> some_var &gt; <span class=\"number\">10</span>:</div><div class=\"line\">    print(<span class=\"string\">\"some_var is totally bigger than 10.\"</span>)</div><div class=\"line\"><span class=\"keyword\">elif</span> some_var &lt; <span class=\"number\">10</span>:    <span class=\"comment\"># This elif clause is optional.</span></div><div class=\"line\">    print(<span class=\"string\">\"some_var is smaller than 10.\"</span>)</div><div class=\"line\"><span class=\"keyword\">else</span>:                  <span class=\"comment\"># This is optional too.</span></div><div class=\"line\">    print(<span class=\"string\">\"some_var is indeed 10.\"</span>)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">\"\"\"</span></div><div class=\"line\">For loops iterate over lists</div><div class=\"line\">prints:</div><div class=\"line\">    dog is a mammal</div><div class=\"line\">    cat is a mammal</div><div class=\"line\">    mouse is a mammal</div><div class=\"line\">\"\"\"</div><div class=\"line\"><span class=\"keyword\">for</span> animal <span class=\"keyword\">in</span> [<span class=\"string\">\"dog\"</span>, <span class=\"string\">\"cat\"</span>, <span class=\"string\">\"mouse\"</span>]:</div><div class=\"line\">    <span class=\"comment\"># You can use format() to interpolate formatted strings</span></div><div class=\"line\">    print(<span class=\"string\">\"&#123;&#125; is a mammal\"</span>.format(animal))</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">\"\"\"</span></div><div class=\"line\">\"range(number)\" returns an iterable of numbers</div><div class=\"line\">from zero to the given number</div><div class=\"line\">prints:</div><div class=\"line\">    0</div><div class=\"line\">    1</div><div class=\"line\">    2</div><div class=\"line\">    3</div><div class=\"line\">\"\"\"</div><div class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">4</span>):</div><div class=\"line\">    print(i)</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">\"\"\"</span></div><div class=\"line\">\"range(lower, upper)\" returns an iterable of numbers</div><div class=\"line\">from the lower number to the upper number</div><div class=\"line\">prints:</div><div class=\"line\">    4</div><div class=\"line\">    5</div><div class=\"line\">    6</div><div class=\"line\">    7</div><div class=\"line\">\"\"\"</div><div class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">4</span>, <span class=\"number\">8</span>):</div><div class=\"line\">    print(i)</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">\"\"\"</span></div><div class=\"line\">\"range(lower, upper, step)\" returns an iterable of numbers</div><div class=\"line\">from the lower number to the upper number, while incrementing</div><div class=\"line\">by step. If step is not indicated, the default value is 1.</div><div class=\"line\">prints:</div><div class=\"line\">    4</div><div class=\"line\">    6</div><div class=\"line\">\"\"\"</div><div class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">4</span>, <span class=\"number\">8</span>, <span class=\"number\">2</span>):</div><div class=\"line\">    print(i)</div><div class=\"line\"><span class=\"string\">\"\"\"</span></div><div class=\"line\"></div><div class=\"line\">While loops go until a condition is no longer met.</div><div class=\"line\">prints:</div><div class=\"line\">    0</div><div class=\"line\">    1</div><div class=\"line\">    2</div><div class=\"line\">    3</div><div class=\"line\">\"\"\"</div><div class=\"line\">x = <span class=\"number\">0</span></div><div class=\"line\"><span class=\"keyword\">while</span> x &lt; <span class=\"number\">4</span>:</div><div class=\"line\">    print(x)</div><div class=\"line\">    x += <span class=\"number\">1</span>  <span class=\"comment\"># Shorthand for x = x + 1</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Handle exceptions with a try/except block</span></div><div class=\"line\"><span class=\"keyword\">try</span>:</div><div class=\"line\">    <span class=\"comment\"># Use \"raise\" to raise an error</span></div><div class=\"line\">    <span class=\"keyword\">raise</span> IndexError(<span class=\"string\">\"This is an index error\"</span>)</div><div class=\"line\"><span class=\"keyword\">except</span> IndexError <span class=\"keyword\">as</span> e:</div><div class=\"line\">    <span class=\"keyword\">pass</span>                 <span class=\"comment\"># Pass is just a no-op. Usually you would do recovery here.</span></div><div class=\"line\"><span class=\"keyword\">except</span> (TypeError, NameError):</div><div class=\"line\">    <span class=\"keyword\">pass</span>                 <span class=\"comment\"># Multiple exceptions can be handled together, if required.</span></div><div class=\"line\"><span class=\"keyword\">else</span>:                    <span class=\"comment\"># Optional clause to the try/except block. Must follow all except blocks</span></div><div class=\"line\">    print(<span class=\"string\">\"All good!\"</span>)   <span class=\"comment\"># Runs only if the code in try raises no exceptions</span></div><div class=\"line\"><span class=\"keyword\">finally</span>:                 <span class=\"comment\">#  Execute under all circumstances</span></div><div class=\"line\">    print(<span class=\"string\">\"We can clean up resources here\"</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Instead of try/finally to cleanup resources you can use a with statement</span></div><div class=\"line\"><span class=\"keyword\">with</span> open(<span class=\"string\">\"myfile.txt\"</span>) <span class=\"keyword\">as</span> f:</div><div class=\"line\">    <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> f:</div><div class=\"line\">        print(line)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Python offers a fundamental abstraction called the Iterable.</span></div><div class=\"line\"><span class=\"comment\"># An iterable is an object that can be treated as a sequence.</span></div><div class=\"line\"><span class=\"comment\"># The object returned the range function, is an iterable.</span></div><div class=\"line\"></div><div class=\"line\">filled_dict = &#123;<span class=\"string\">\"one\"</span>: <span class=\"number\">1</span>, <span class=\"string\">\"two\"</span>: <span class=\"number\">2</span>, <span class=\"string\">\"three\"</span>: <span class=\"number\">3</span>&#125;</div><div class=\"line\">our_iterable = filled_dict.keys()</div><div class=\"line\">print(our_iterable)  <span class=\"comment\"># =&gt; dict_keys(['one', 'two', 'three']). This is an object that implements our Iterable interface.</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># We can loop over it.</span></div><div class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> our_iterable:</div><div class=\"line\">    print(i)  <span class=\"comment\"># Prints one, two, three</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># However we cannot address elements by index.</span></div><div class=\"line\">our_iterable[<span class=\"number\">1</span>]  <span class=\"comment\"># Raises a TypeError</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># An iterable is an object that knows how to create an iterator.</span></div><div class=\"line\">our_iterator = iter(our_iterable)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Our iterator is an object that can remember the state as we traverse through it.</span></div><div class=\"line\"><span class=\"comment\"># We get the next object with \"next()\".</span></div><div class=\"line\">next(our_iterator)  <span class=\"comment\"># =&gt; \"one\"</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># It maintains state as we iterate.</span></div><div class=\"line\">next(our_iterator)  <span class=\"comment\"># =&gt; \"two\"</span></div><div class=\"line\">next(our_iterator)  <span class=\"comment\"># =&gt; \"three\"</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># After the iterator has returned all of its data, it gives you a StopIterator Exception</span></div><div class=\"line\">next(our_iterator)  <span class=\"comment\"># Raises StopIteration</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># You can grab all the elements of an iterator by calling list() on it.</span></div><div class=\"line\">list(filled_dict.keys())  <span class=\"comment\"># =&gt; Returns [\"one\", \"two\", \"three\"]</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">####################################################</span></div><div class=\"line\"><span class=\"comment\">## 4. Functions</span></div><div class=\"line\"><span class=\"comment\">####################################################</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Use \"def\" to create new functions</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">add</span><span class=\"params\">(x, y)</span>:</span></div><div class=\"line\">    print(<span class=\"string\">\"x is &#123;&#125; and y is &#123;&#125;\"</span>.format(x, y))</div><div class=\"line\">    <span class=\"keyword\">return</span> x + y  <span class=\"comment\"># Return values with a return statement</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Calling functions with parameters</span></div><div class=\"line\">add(<span class=\"number\">5</span>, <span class=\"number\">6</span>)  <span class=\"comment\"># =&gt; prints out \"x is 5 and y is 6\" and returns 11</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Another way to call functions is with keyword arguments</span></div><div class=\"line\">add(y=<span class=\"number\">6</span>, x=<span class=\"number\">5</span>)  <span class=\"comment\"># Keyword arguments can arrive in any order.</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># You can define functions that take a variable number of</span></div><div class=\"line\"><span class=\"comment\"># positional arguments</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">varargs</span><span class=\"params\">(*args)</span>:</span></div><div class=\"line\">    <span class=\"keyword\">return</span> args</div><div class=\"line\"></div><div class=\"line\">varargs(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>)  <span class=\"comment\"># =&gt; (1, 2, 3)</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># You can define functions that take a variable number of</span></div><div class=\"line\"><span class=\"comment\"># keyword arguments, as well</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">keyword_args</span><span class=\"params\">(**kwargs)</span>:</span></div><div class=\"line\">    <span class=\"keyword\">return</span> kwargs</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Let's call it to see what happens</span></div><div class=\"line\">keyword_args(big=<span class=\"string\">\"foot\"</span>, loch=<span class=\"string\">\"ness\"</span>)  <span class=\"comment\"># =&gt; &#123;\"big\": \"foot\", \"loch\": \"ness\"&#125;</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># You can do both at once, if you like</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">all_the_args</span><span class=\"params\">(*args, **kwargs)</span>:</span></div><div class=\"line\">    print(args)</div><div class=\"line\">    print(kwargs)</div><div class=\"line\"><span class=\"string\">\"\"\"</span></div><div class=\"line\">all_the_args(1, 2, a=3, b=4) prints:</div><div class=\"line\">    (1, 2)</div><div class=\"line\">    &#123;\"a\": 3, \"b\": 4&#125;</div><div class=\"line\">\"\"\"</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># When calling functions, you can do the opposite of args/kwargs!</span></div><div class=\"line\"><span class=\"comment\"># Use * to expand tuples and use ** to expand kwargs.</span></div><div class=\"line\">args = (<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>)</div><div class=\"line\">kwargs = &#123;<span class=\"string\">\"a\"</span>: <span class=\"number\">3</span>, <span class=\"string\">\"b\"</span>: <span class=\"number\">4</span>&#125;</div><div class=\"line\">all_the_args(*args)            <span class=\"comment\"># equivalent to foo(1, 2, 3, 4)</span></div><div class=\"line\">all_the_args(**kwargs)         <span class=\"comment\"># equivalent to foo(a=3, b=4)</span></div><div class=\"line\">all_the_args(*args, **kwargs)  <span class=\"comment\"># equivalent to foo(1, 2, 3, 4, a=3, b=4)</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Returning multiple values (with tuple assignments)</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">swap</span><span class=\"params\">(x, y)</span>:</span></div><div class=\"line\">    <span class=\"keyword\">return</span> y, x  <span class=\"comment\"># Return multiple values as a tuple without the parenthesis.</span></div><div class=\"line\">                 <span class=\"comment\"># (Note: parenthesis have been excluded but can be included)</span></div><div class=\"line\"></div><div class=\"line\">x = <span class=\"number\">1</span></div><div class=\"line\">y = <span class=\"number\">2</span></div><div class=\"line\">x, y = swap(x, y)     <span class=\"comment\"># =&gt; x = 2, y = 1</span></div><div class=\"line\"><span class=\"comment\"># (x, y) = swap(x,y)  # Again parenthesis have been excluded but can be included.</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Function Scope</span></div><div class=\"line\">x = <span class=\"number\">5</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">set_x</span><span class=\"params\">(num)</span>:</span></div><div class=\"line\">    <span class=\"comment\"># Local var x not the same as global variable x</span></div><div class=\"line\">    x = num    <span class=\"comment\"># =&gt; 43</span></div><div class=\"line\">    <span class=\"keyword\">print</span> (x)  <span class=\"comment\"># =&gt; 43</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">set_global_x</span><span class=\"params\">(num)</span>:</span></div><div class=\"line\">    <span class=\"keyword\">global</span> x</div><div class=\"line\">    <span class=\"keyword\">print</span> (x)  <span class=\"comment\"># =&gt; 5</span></div><div class=\"line\">    x = num    <span class=\"comment\"># global var x is now set to 6</span></div><div class=\"line\">    <span class=\"keyword\">print</span> (x)  <span class=\"comment\"># =&gt; 6</span></div><div class=\"line\"></div><div class=\"line\">set_x(<span class=\"number\">43</span>)</div><div class=\"line\">set_global_x(<span class=\"number\">6</span>)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Python has first class functions</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">create_adder</span><span class=\"params\">(x)</span>:</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">adder</span><span class=\"params\">(y)</span>:</span></div><div class=\"line\">        <span class=\"keyword\">return</span> x + y</div><div class=\"line\">    <span class=\"keyword\">return</span> adder</div><div class=\"line\"></div><div class=\"line\">add_10 = create_adder(<span class=\"number\">10</span>)</div><div class=\"line\">add_10(<span class=\"number\">3</span>)   <span class=\"comment\"># =&gt; 13</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># There are also anonymous functions</span></div><div class=\"line\">(<span class=\"keyword\">lambda</span> x: x &gt; <span class=\"number\">2</span>)(<span class=\"number\">3</span>)                  <span class=\"comment\"># =&gt; True</span></div><div class=\"line\">(<span class=\"keyword\">lambda</span> x, y: x ** <span class=\"number\">2</span> + y ** <span class=\"number\">2</span>)(<span class=\"number\">2</span>, <span class=\"number\">1</span>)  <span class=\"comment\"># =&gt; 5</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># There are built-in higher order functions</span></div><div class=\"line\">list(map(add_10, [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]))          <span class=\"comment\"># =&gt; [11, 12, 13]</span></div><div class=\"line\">list(map(max, [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], [<span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>]))  <span class=\"comment\"># =&gt; [4, 2, 3]</span></div><div class=\"line\"></div><div class=\"line\">list(filter(<span class=\"keyword\">lambda</span> x: x &gt; <span class=\"number\">5</span>, [<span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>]))  <span class=\"comment\"># =&gt; [6, 7]</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># We can use list comprehensions for nice maps and filters</span></div><div class=\"line\"><span class=\"comment\"># List comprehension stores the output as a list which can itself be a nested list</span></div><div class=\"line\">[add_10(i) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]]         <span class=\"comment\"># =&gt; [11, 12, 13]</span></div><div class=\"line\">[x <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> [<span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>] <span class=\"keyword\">if</span> x &gt; <span class=\"number\">5</span>]  <span class=\"comment\"># =&gt; [6, 7]</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># You can construct set and dict comprehensions as well.</span></div><div class=\"line\">&#123;x <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> <span class=\"string\">'abcddeef'</span> <span class=\"keyword\">if</span> x <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> <span class=\"string\">'abc'</span>&#125;  <span class=\"comment\"># =&gt; &#123;'d', 'e', 'f'&#125;</span></div><div class=\"line\">&#123;x: x**<span class=\"number\">2</span> <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(<span class=\"number\">5</span>)&#125;  <span class=\"comment\"># =&gt; &#123;0: 0, 1: 1, 2: 4, 3: 9, 4: 16&#125;</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">####################################################</span></div><div class=\"line\"><span class=\"comment\">## 5. Modules</span></div><div class=\"line\"><span class=\"comment\">####################################################</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># You can import modules</span></div><div class=\"line\"><span class=\"keyword\">import</span> math</div><div class=\"line\">print(math.sqrt(<span class=\"number\">16</span>))  <span class=\"comment\"># =&gt; 4.0</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># You can get specific functions from a module</span></div><div class=\"line\"><span class=\"keyword\">from</span> math <span class=\"keyword\">import</span> ceil, floor</div><div class=\"line\">print(ceil(<span class=\"number\">3.7</span>))   <span class=\"comment\"># =&gt; 4.0</span></div><div class=\"line\">print(floor(<span class=\"number\">3.7</span>))  <span class=\"comment\"># =&gt; 3.0</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># You can import all functions from a module.</span></div><div class=\"line\"><span class=\"comment\"># Warning: this is not recommended</span></div><div class=\"line\"><span class=\"keyword\">from</span> math <span class=\"keyword\">import</span> *</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># You can shorten module names</span></div><div class=\"line\"><span class=\"keyword\">import</span> math <span class=\"keyword\">as</span> m</div><div class=\"line\">math.sqrt(<span class=\"number\">16</span>) == m.sqrt(<span class=\"number\">16</span>)  <span class=\"comment\"># =&gt; True</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Python modules are just ordinary python files. You</span></div><div class=\"line\"><span class=\"comment\"># can write your own, and import them. The name of the</span></div><div class=\"line\"><span class=\"comment\"># module is the same as the name of the file.</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># You can find out which functions and attributes</span></div><div class=\"line\"><span class=\"comment\"># defines a module.</span></div><div class=\"line\"><span class=\"keyword\">import</span> math</div><div class=\"line\">dir(math)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># If you have a Python script named math.py in the same</span></div><div class=\"line\"><span class=\"comment\"># folder as your current script, the file math.py will</span></div><div class=\"line\"><span class=\"comment\"># be loaded instead of the built-in Python module.</span></div><div class=\"line\"><span class=\"comment\"># This happens because the local folder has priority</span></div><div class=\"line\"><span class=\"comment\"># over Python's built-in libraries.</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">####################################################</span></div><div class=\"line\"><span class=\"comment\">## 6. Classes</span></div><div class=\"line\"><span class=\"comment\">####################################################</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># We use the \"class\" operator to get a class</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Human</span>:</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># A class attribute. It is shared by all instances of this class</span></div><div class=\"line\">    species = <span class=\"string\">\"H. sapiens\"</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># Basic initializer, this is called when this class is instantiated.</span></div><div class=\"line\">    <span class=\"comment\"># Note that the double leading and trailing underscores denote objects</span></div><div class=\"line\">    <span class=\"comment\"># or attributes that are used by python but that live in user-controlled</span></div><div class=\"line\">    <span class=\"comment\"># namespaces. Methods(or objects or attributes) like: __init__, __str__,</span></div><div class=\"line\">    <span class=\"comment\"># __repr__ etc. are called magic methods (or sometimes called dunder methods)</span></div><div class=\"line\">    <span class=\"comment\"># You should not invent such names on your own.</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self, name)</span>:</span></div><div class=\"line\">        <span class=\"comment\"># Assign the argument to the instance's name attribute</span></div><div class=\"line\">        self.name = name</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\"># Initialize property</span></div><div class=\"line\">        self.age = <span class=\"number\">0</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># An instance method. All methods take \"self\" as the first argument</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">say</span><span class=\"params\">(self, msg)</span>:</span></div><div class=\"line\">        <span class=\"keyword\">print</span> (<span class=\"string\">\"&#123;name&#125;: &#123;message&#125;\"</span>.format(name=self.name, message=msg))</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># Another instance method</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">sing</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'yo... yo... microphone check... one two... one two...'</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># A class method is shared among all instances</span></div><div class=\"line\">    <span class=\"comment\"># They are called with the calling class as the first argument</span></div><div class=\"line\"><span class=\"meta\">    @classmethod</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_species</span><span class=\"params\">(cls)</span>:</span></div><div class=\"line\">        <span class=\"keyword\">return</span> cls.species</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># A static method is called without a class or instance reference</span></div><div class=\"line\"><span class=\"meta\">    @staticmethod</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">grunt</span><span class=\"params\">()</span>:</span></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"*grunt*\"</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># A property is just like a getter.</span></div><div class=\"line\">    <span class=\"comment\"># It turns the method age() into an read-only attribute</span></div><div class=\"line\">    <span class=\"comment\"># of the same name.</span></div><div class=\"line\"><span class=\"meta\">    @property</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">age</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"keyword\">return</span> self._age</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># This allows the property to be set</span></div><div class=\"line\"><span class=\"meta\">    @age.setter</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">age</span><span class=\"params\">(self, age)</span>:</span></div><div class=\"line\">        self._age = age</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># This allows the property to be deleted</span></div><div class=\"line\"><span class=\"meta\">    @age.deleter</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">age</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"keyword\">del</span> self._age</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># When a Python interpreter reads a source file it executes all its code.</span></div><div class=\"line\"><span class=\"comment\"># This __name__ check makes sure this code block is only executed when this</span></div><div class=\"line\"><span class=\"comment\"># module is the main program.</span></div><div class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</div><div class=\"line\">    <span class=\"comment\"># Instantiate a class</span></div><div class=\"line\">    i = Human(name=<span class=\"string\">\"Ian\"</span>)</div><div class=\"line\">    i.say(<span class=\"string\">\"hi\"</span>)                     <span class=\"comment\"># \"Ian: hi\"</span></div><div class=\"line\">    j = Human(<span class=\"string\">\"Joel\"</span>)</div><div class=\"line\">    j.say(<span class=\"string\">\"hello\"</span>)                  <span class=\"comment\"># \"Joel: hello\"</span></div><div class=\"line\">    <span class=\"comment\"># i and j are instances of type Human, or in other words: they are Human objects</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># Call our class method</span></div><div class=\"line\">    i.say(i.get_species())          <span class=\"comment\"># \"Ian: H. sapiens\"</span></div><div class=\"line\">    <span class=\"comment\"># Change the shared attribute</span></div><div class=\"line\">    Human.species = <span class=\"string\">\"H. neanderthalensis\"</span></div><div class=\"line\">    i.say(i.get_species())          <span class=\"comment\"># =&gt; \"Ian: H. neanderthalensis\"</span></div><div class=\"line\">    j.say(j.get_species())          <span class=\"comment\"># =&gt; \"Joel: H. neanderthalensis\"</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># Call the static method</span></div><div class=\"line\">    print(Human.grunt())            <span class=\"comment\"># =&gt; \"*grunt*\"</span></div><div class=\"line\">    print(i.grunt())                <span class=\"comment\"># =&gt; \"*grunt*\"</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># Update the property for this instance</span></div><div class=\"line\">    i.age = <span class=\"number\">42</span></div><div class=\"line\">    <span class=\"comment\"># Get the property</span></div><div class=\"line\">    i.say(i.age)                    <span class=\"comment\"># =&gt; 42</span></div><div class=\"line\">    j.say(j.age)                    <span class=\"comment\"># =&gt; 0</span></div><div class=\"line\">    <span class=\"comment\"># Delete the property</span></div><div class=\"line\">    <span class=\"keyword\">del</span> i.age</div><div class=\"line\">    <span class=\"comment\"># i.age                         # =&gt; this would raise an AttributeError</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">####################################################</span></div><div class=\"line\"><span class=\"comment\">## 6.1 Multiple Inheritance</span></div><div class=\"line\"><span class=\"comment\">####################################################</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Another class definition</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Bat</span>:</span></div><div class=\"line\"></div><div class=\"line\">    species = <span class=\"string\">'Baty'</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self, can_fly=True)</span>:</span></div><div class=\"line\">        self.fly = can_fly</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># This class also has a say method</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">say</span><span class=\"params\">(self, msg)</span>:</span></div><div class=\"line\">        msg = <span class=\"string\">'... ... ...'</span></div><div class=\"line\">        <span class=\"keyword\">return</span> msg</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># And its own method as well</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">sonar</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'))) ... ((('</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</div><div class=\"line\">    b = Bat()</div><div class=\"line\">    print(b.say(<span class=\"string\">'hello'</span>))</div><div class=\"line\">    print(b.fly)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># from \"filename-without-extension\" import \"function-or-class\"</span></div><div class=\"line\"><span class=\"keyword\">from</span> human <span class=\"keyword\">import</span> Human</div><div class=\"line\"><span class=\"keyword\">from</span> bat <span class=\"keyword\">import</span> Bat</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Batman inherits from both Human and Bat</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Batman</span><span class=\"params\">(Human, Bat)</span>:</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># Batman has its own value for the species class attribute</span></div><div class=\"line\">    species = <span class=\"string\">'Superhero'</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self, *args, **kwargs)</span>:</span></div><div class=\"line\">        <span class=\"comment\"># Typically to inherit attributes you have to call super:</span></div><div class=\"line\">        <span class=\"comment\">#super(Batman, self).__init__(*args, **kwargs)      </span></div><div class=\"line\">        <span class=\"comment\"># However we are dealing with multiple inheritance here, and super()</span></div><div class=\"line\">        <span class=\"comment\"># only works with the next base class in the MRO list.</span></div><div class=\"line\">        <span class=\"comment\"># So instead we explicitly call __init__ for all ancestors.</span></div><div class=\"line\">        <span class=\"comment\"># The use of *args and **kwargs allows for a clean way to pass arguments,</span></div><div class=\"line\">        <span class=\"comment\"># with each parent \"peeling a layer of the onion\".</span></div><div class=\"line\">        Human.__init__(self, <span class=\"string\">'anonymous'</span>, *args, **kwargs)</div><div class=\"line\">        Bat.__init__(self, *args, can_fly=<span class=\"keyword\">False</span>, **kwargs)</div><div class=\"line\">        <span class=\"comment\"># override the value for the name attribute</span></div><div class=\"line\">        self.name = <span class=\"string\">'Sad Affleck'</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">sing</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'nan nan nan nan nan batman!'</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</div><div class=\"line\">    sup = Batman()</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># Instance type checks</span></div><div class=\"line\">    <span class=\"keyword\">if</span> isinstance(sup, Human):</div><div class=\"line\">        print(<span class=\"string\">'I am human'</span>)</div><div class=\"line\">    <span class=\"keyword\">if</span> isinstance(sup, Bat):</div><div class=\"line\">        print(<span class=\"string\">'I am bat'</span>)</div><div class=\"line\">    <span class=\"keyword\">if</span> type(sup) <span class=\"keyword\">is</span> Batman:</div><div class=\"line\">        print(<span class=\"string\">'I am Batman'</span>)</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># Get the Method Resolution search Order used by both getattr() and super().</span></div><div class=\"line\">    <span class=\"comment\"># This attribute is dynamic and can be updated</span></div><div class=\"line\">    print(Batman.__mro__)       <span class=\"comment\"># =&gt; (&lt;class '__main__.Batman'&gt;, &lt;class 'human.Human'&gt;, &lt;class 'bat.Bat'&gt;, &lt;class 'object'&gt;)</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># Calls parent method but uses its own class attribute</span></div><div class=\"line\">    print(sup.get_species())    <span class=\"comment\"># =&gt; Superhero</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># Calls overloaded method</span></div><div class=\"line\">    print(sup.sing())           <span class=\"comment\"># =&gt; nan nan nan nan nan batman!</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># Calls method from Human, because inheritance order matters</span></div><div class=\"line\">    sup.say(<span class=\"string\">'I agree'</span>)          <span class=\"comment\"># =&gt; Sad Affleck: I agree</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># Call method that exists only in 2nd ancestor</span></div><div class=\"line\">    print(sup.sonar())          <span class=\"comment\"># =&gt; ))) ... (((</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># Inherited class attribute</span></div><div class=\"line\">    sup.age = <span class=\"number\">100</span></div><div class=\"line\">    print(sup.age)</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># Inherited attribute from 2nd ancestor whose default value was overridden.</span></div><div class=\"line\">    print(<span class=\"string\">'Can I fly? '</span> + str(sup.fly))</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">####################################################</span></div><div class=\"line\"><span class=\"comment\">## 7. Advanced</span></div><div class=\"line\"><span class=\"comment\">####################################################</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Generators help you make lazy code.</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">double_numbers</span><span class=\"params\">(iterable)</span>:</span></div><div class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> iterable:</div><div class=\"line\">        <span class=\"keyword\">yield</span> i + i</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Generators are memory-efficient because they only load the data needed to</span></div><div class=\"line\"><span class=\"comment\"># process the next value in the iterable. This allows them to perform</span></div><div class=\"line\"><span class=\"comment\"># operations on otherwise prohibitively large value ranges.</span></div><div class=\"line\"><span class=\"comment\"># <span class=\"doctag\">NOTE:</span> `range` replaces `xrange` in Python 3.</span></div><div class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> double_numbers(range(<span class=\"number\">1</span>, <span class=\"number\">900000000</span>)):  <span class=\"comment\"># `range` is a generator.</span></div><div class=\"line\">    print(i)</div><div class=\"line\">    <span class=\"keyword\">if</span> i &gt;= <span class=\"number\">30</span>:</div><div class=\"line\">        <span class=\"keyword\">break</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Just as you can create a list comprehension, you can create generator</span></div><div class=\"line\"><span class=\"comment\"># comprehensions as well.</span></div><div class=\"line\">values = (-x <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>])</div><div class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> values:</div><div class=\"line\">    print(x)  <span class=\"comment\"># prints -1 -2 -3 -4 -5 to console/terminal</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># You can also cast a generator comprehension directly to a list.</span></div><div class=\"line\">values = (-x <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>])</div><div class=\"line\">gen_to_list = list(values)</div><div class=\"line\">print(gen_to_list)  <span class=\"comment\"># =&gt; [-1, -2, -3, -4, -5]</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Decorators</span></div><div class=\"line\"><span class=\"comment\"># In this example `beg` wraps `say`. If say_please is True then it</span></div><div class=\"line\"><span class=\"comment\"># will change the returned message.</span></div><div class=\"line\"><span class=\"keyword\">from</span> functools <span class=\"keyword\">import</span> wraps</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">beg</span><span class=\"params\">(target_function)</span>:</span></div><div class=\"line\"><span class=\"meta\">    @wraps(target_function)</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wrapper</span><span class=\"params\">(*args, **kwargs)</span>:</span></div><div class=\"line\">        msg, say_please = target_function(*args, **kwargs)</div><div class=\"line\">        <span class=\"keyword\">if</span> say_please:</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">\"&#123;&#125; &#123;&#125;\"</span>.format(msg, <span class=\"string\">\"Please! I am poor :(\"</span>)</div><div class=\"line\">        <span class=\"keyword\">return</span> msg</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> wrapper</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@beg</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">say</span><span class=\"params\">(say_please=False)</span>:</span></div><div class=\"line\">    msg = <span class=\"string\">\"Can you buy me a beer?\"</span></div><div class=\"line\">    <span class=\"keyword\">return</span> msg, say_please</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">print(say())                 <span class=\"comment\"># Can you buy me a beer?</span></div><div class=\"line\">print(say(say_please=<span class=\"keyword\">True</span>))  <span class=\"comment\"># Can you buy me a beer? Please! I am poor :(</span></div></pre></td></tr></table></figure>\n<h2 id=\"Ready-For-More\"><a href=\"#Ready-For-More\" class=\"headerlink\" title=\"Ready For More?\"></a>Ready For More?</h2><h3 id=\"Free-Online\"><a href=\"#Free-Online\" class=\"headerlink\" title=\"Free Online\"></a>Free Online</h3><ul>\n<li><a href=\"https://automatetheboringstuff.com\" target=\"_blank\" rel=\"external\">Automate the Boring Stuff with Python</a></li>\n<li><a href=\"http://pythonpracticeprojects.com\" target=\"_blank\" rel=\"external\">Ideas for Python Projects</a></li>\n<li><a href=\"http://docs.python.org/3/\" target=\"_blank\" rel=\"external\">The Official Docs</a></li>\n<li><a href=\"http://docs.python-guide.org/en/latest/\" target=\"_blank\" rel=\"external\">Hitchhiker’s Guide to Python</a></li>\n<li><a href=\"http://www.python-course.eu/index.php\" target=\"_blank\" rel=\"external\">Python Course</a></li>\n<li><a href=\"https://realpython.com/learn/python-first-steps/\" target=\"_blank\" rel=\"external\">First Steps With Python</a></li>\n<li><a href=\"https://github.com/vinta/awesome-python\" target=\"_blank\" rel=\"external\">A curated list of awesome Python frameworks, libraries and software</a></li>\n<li><a href=\"http://sahandsaba.com/thirty-python-language-features-and-tricks-you-may-not-know.html\" target=\"_blank\" rel=\"external\">30 Python Language Features and Tricks You May Not Know About</a></li>\n<li><a href=\"https://www.python.org/dev/peps/pep-0008/\" target=\"_blank\" rel=\"external\">Official Style Guide for Python</a></li>\n<li><a href=\"http://cscircles.cemc.uwaterloo.ca/\" target=\"_blank\" rel=\"external\">Python 3 Computer Science Circles</a></li>\n<li><a href=\"http://www.diveintopython3.net/index.html\" target=\"_blank\" rel=\"external\">Dive Into Python 3</a></li>\n<li><a href=\"http://nbviewer.jupyter.org/gist/anonymous/5924718\" target=\"_blank\" rel=\"external\">A Crash Course in Python for Scientists</a></li>\n</ul>\n<h3 id=\"Dead-Tree\"><a href=\"#Dead-Tree\" class=\"headerlink\" title=\"Dead Tree\"></a>Dead Tree</h3><ul>\n<li><a href=\"http://www.amazon.com/gp/product/0596158106/ref=as_li_qf_sp_asin_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0596158106&amp;linkCode=as2&amp;tag=homebits04-20\" target=\"_blank\" rel=\"external\">Programming Python</a></li>\n<li><a href=\"https://www.amazon.com/gp/product/1430224150?ie=UTF8&amp;tag=diveintomark-20&amp;creativeASIN=1430224150\" target=\"_blank\" rel=\"external\">Dive Into Python 3</a></li>\n<li><a href=\"https://www.amazon.com/Learn-Python-3-0-VISUALLY-Interactive-ebook/dp/B00YI58B9U/\" target=\"_blank\" rel=\"external\">Learn Python 3.0 VISUALLY</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>Python was created by Guido Van Rossum in the early 90s. It is now one of the most popular<br>languages in existence. I fell in love with Python for its syntactic clarity. It’s basically<br>executable pseudocode.</p>\n<p>Feedback would be highly appreciated! You can reach me at <a href=\"http://twitter.com/louiedinh\" target=\"_blank\" rel=\"external\">@louiedinh</a> or louiedinh [at] [google’s email service]</p>\n<p>Note: This article applies to Python 3 specifically. Check out <a href=\"http://learnxinyminutes.com/docs/python/\" target=\"_blank\" rel=\"external\">here</a> if you want to learn the old Python 2.7</p>","more":"<hr>\n<p>语言: python3<br>贡献者:  </p>\n<pre><code>- [&quot;Louie Dinh&quot;, &quot;http://pythonpracticeprojects.com&quot;]  \n- [&quot;Steven Basart&quot;, &quot;http://github.com/xksteven&quot;]  \n- [&quot;Andre Polykanine&quot;, &quot;https://github.com/Oire&quot;]  \n- [&quot;Zachary Ferguson&quot;, &quot;http://github.com/zfergus2&quot;]  \n- [&quot;evuez&quot;, &quot;http://github.com/evuez&quot;]  \n</code></pre><p>filename: learnpython3.py<br>译者:  </p>\n<pre><code>- [&quot;ChangingFond&quot;, &quot;http://blog.fangchengjin.cn&quot;]\n</code></pre><hr>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div><div class=\"line\">243</div><div class=\"line\">244</div><div class=\"line\">245</div><div class=\"line\">246</div><div class=\"line\">247</div><div class=\"line\">248</div><div class=\"line\">249</div><div class=\"line\">250</div><div class=\"line\">251</div><div class=\"line\">252</div><div class=\"line\">253</div><div class=\"line\">254</div><div class=\"line\">255</div><div class=\"line\">256</div><div class=\"line\">257</div><div class=\"line\">258</div><div class=\"line\">259</div><div class=\"line\">260</div><div class=\"line\">261</div><div class=\"line\">262</div><div class=\"line\">263</div><div class=\"line\">264</div><div class=\"line\">265</div><div class=\"line\">266</div><div class=\"line\">267</div><div class=\"line\">268</div><div class=\"line\">269</div><div class=\"line\">270</div><div class=\"line\">271</div><div class=\"line\">272</div><div class=\"line\">273</div><div class=\"line\">274</div><div class=\"line\">275</div><div class=\"line\">276</div><div class=\"line\">277</div><div class=\"line\">278</div><div class=\"line\">279</div><div class=\"line\">280</div><div class=\"line\">281</div><div class=\"line\">282</div><div class=\"line\">283</div><div class=\"line\">284</div><div class=\"line\">285</div><div class=\"line\">286</div><div class=\"line\">287</div><div class=\"line\">288</div><div class=\"line\">289</div><div class=\"line\">290</div><div class=\"line\">291</div><div class=\"line\">292</div><div class=\"line\">293</div><div class=\"line\">294</div><div class=\"line\">295</div><div class=\"line\">296</div><div class=\"line\">297</div><div class=\"line\">298</div><div class=\"line\">299</div><div class=\"line\">300</div><div class=\"line\">301</div><div class=\"line\">302</div><div class=\"line\">303</div><div class=\"line\">304</div><div class=\"line\">305</div><div class=\"line\">306</div><div class=\"line\">307</div><div class=\"line\">308</div><div class=\"line\">309</div><div class=\"line\">310</div><div class=\"line\">311</div><div class=\"line\">312</div><div class=\"line\">313</div><div class=\"line\">314</div><div class=\"line\">315</div><div class=\"line\">316</div><div class=\"line\">317</div><div class=\"line\">318</div><div class=\"line\">319</div><div class=\"line\">320</div><div class=\"line\">321</div><div class=\"line\">322</div><div class=\"line\">323</div><div class=\"line\">324</div><div class=\"line\">325</div><div class=\"line\">326</div><div class=\"line\">327</div><div class=\"line\">328</div><div class=\"line\">329</div><div class=\"line\">330</div><div class=\"line\">331</div><div class=\"line\">332</div><div class=\"line\">333</div><div class=\"line\">334</div><div class=\"line\">335</div><div class=\"line\">336</div><div class=\"line\">337</div><div class=\"line\">338</div><div class=\"line\">339</div><div class=\"line\">340</div><div class=\"line\">341</div><div class=\"line\">342</div><div class=\"line\">343</div><div class=\"line\">344</div><div class=\"line\">345</div><div class=\"line\">346</div><div class=\"line\">347</div><div class=\"line\">348</div><div class=\"line\">349</div><div class=\"line\">350</div><div class=\"line\">351</div><div class=\"line\">352</div><div class=\"line\">353</div><div class=\"line\">354</div><div class=\"line\">355</div><div class=\"line\">356</div><div class=\"line\">357</div><div class=\"line\">358</div><div class=\"line\">359</div><div class=\"line\">360</div><div class=\"line\">361</div><div class=\"line\">362</div><div class=\"line\">363</div><div class=\"line\">364</div><div class=\"line\">365</div><div class=\"line\">366</div><div class=\"line\">367</div><div class=\"line\">368</div><div class=\"line\">369</div><div class=\"line\">370</div><div class=\"line\">371</div><div class=\"line\">372</div><div class=\"line\">373</div><div class=\"line\">374</div><div class=\"line\">375</div><div class=\"line\">376</div><div class=\"line\">377</div><div class=\"line\">378</div><div class=\"line\">379</div><div class=\"line\">380</div><div class=\"line\">381</div><div class=\"line\">382</div><div class=\"line\">383</div><div class=\"line\">384</div><div class=\"line\">385</div><div class=\"line\">386</div><div class=\"line\">387</div><div class=\"line\">388</div><div class=\"line\">389</div><div class=\"line\">390</div><div class=\"line\">391</div><div class=\"line\">392</div><div class=\"line\">393</div><div class=\"line\">394</div><div class=\"line\">395</div><div class=\"line\">396</div><div class=\"line\">397</div><div class=\"line\">398</div><div class=\"line\">399</div><div class=\"line\">400</div><div class=\"line\">401</div><div class=\"line\">402</div><div class=\"line\">403</div><div class=\"line\">404</div><div class=\"line\">405</div><div class=\"line\">406</div><div class=\"line\">407</div><div class=\"line\">408</div><div class=\"line\">409</div><div class=\"line\">410</div><div class=\"line\">411</div><div class=\"line\">412</div><div class=\"line\">413</div><div class=\"line\">414</div><div class=\"line\">415</div><div class=\"line\">416</div><div class=\"line\">417</div><div class=\"line\">418</div><div class=\"line\">419</div><div class=\"line\">420</div><div class=\"line\">421</div><div class=\"line\">422</div><div class=\"line\">423</div><div class=\"line\">424</div><div class=\"line\">425</div><div class=\"line\">426</div><div class=\"line\">427</div><div class=\"line\">428</div><div class=\"line\">429</div><div class=\"line\">430</div><div class=\"line\">431</div><div class=\"line\">432</div><div class=\"line\">433</div><div class=\"line\">434</div><div class=\"line\">435</div><div class=\"line\">436</div><div class=\"line\">437</div><div class=\"line\">438</div><div class=\"line\">439</div><div class=\"line\">440</div><div class=\"line\">441</div><div class=\"line\">442</div><div class=\"line\">443</div><div class=\"line\">444</div><div class=\"line\">445</div><div class=\"line\">446</div><div class=\"line\">447</div><div class=\"line\">448</div><div class=\"line\">449</div><div class=\"line\">450</div><div class=\"line\">451</div><div class=\"line\">452</div><div class=\"line\">453</div><div class=\"line\">454</div><div class=\"line\">455</div><div class=\"line\">456</div><div class=\"line\">457</div><div class=\"line\">458</div><div class=\"line\">459</div><div class=\"line\">460</div><div class=\"line\">461</div><div class=\"line\">462</div><div class=\"line\">463</div><div class=\"line\">464</div><div class=\"line\">465</div><div class=\"line\">466</div><div class=\"line\">467</div><div class=\"line\">468</div><div class=\"line\">469</div><div class=\"line\">470</div><div class=\"line\">471</div><div class=\"line\">472</div><div class=\"line\">473</div><div class=\"line\">474</div><div class=\"line\">475</div><div class=\"line\">476</div><div class=\"line\">477</div><div class=\"line\">478</div><div class=\"line\">479</div><div class=\"line\">480</div><div class=\"line\">481</div><div class=\"line\">482</div><div class=\"line\">483</div><div class=\"line\">484</div><div class=\"line\">485</div><div class=\"line\">486</div><div class=\"line\">487</div><div class=\"line\">488</div><div class=\"line\">489</div><div class=\"line\">490</div><div class=\"line\">491</div><div class=\"line\">492</div><div class=\"line\">493</div><div class=\"line\">494</div><div class=\"line\">495</div><div class=\"line\">496</div><div class=\"line\">497</div><div class=\"line\">498</div><div class=\"line\">499</div><div class=\"line\">500</div><div class=\"line\">501</div><div class=\"line\">502</div><div class=\"line\">503</div><div class=\"line\">504</div><div class=\"line\">505</div><div class=\"line\">506</div><div class=\"line\">507</div><div class=\"line\">508</div><div class=\"line\">509</div><div class=\"line\">510</div><div class=\"line\">511</div><div class=\"line\">512</div><div class=\"line\">513</div><div class=\"line\">514</div><div class=\"line\">515</div><div class=\"line\">516</div><div class=\"line\">517</div><div class=\"line\">518</div><div class=\"line\">519</div><div class=\"line\">520</div><div class=\"line\">521</div><div class=\"line\">522</div><div class=\"line\">523</div><div class=\"line\">524</div><div class=\"line\">525</div><div class=\"line\">526</div><div class=\"line\">527</div><div class=\"line\">528</div><div class=\"line\">529</div><div class=\"line\">530</div><div class=\"line\">531</div><div class=\"line\">532</div><div class=\"line\">533</div><div class=\"line\">534</div><div class=\"line\">535</div><div class=\"line\">536</div><div class=\"line\">537</div><div class=\"line\">538</div><div class=\"line\">539</div><div class=\"line\">540</div><div class=\"line\">541</div><div class=\"line\">542</div><div class=\"line\">543</div><div class=\"line\">544</div><div class=\"line\">545</div><div class=\"line\">546</div><div class=\"line\">547</div><div class=\"line\">548</div><div class=\"line\">549</div><div class=\"line\">550</div><div class=\"line\">551</div><div class=\"line\">552</div><div class=\"line\">553</div><div class=\"line\">554</div><div class=\"line\">555</div><div class=\"line\">556</div><div class=\"line\">557</div><div class=\"line\">558</div><div class=\"line\">559</div><div class=\"line\">560</div><div class=\"line\">561</div><div class=\"line\">562</div><div class=\"line\">563</div><div class=\"line\">564</div><div class=\"line\">565</div><div class=\"line\">566</div><div class=\"line\">567</div><div class=\"line\">568</div><div class=\"line\">569</div><div class=\"line\">570</div><div class=\"line\">571</div><div class=\"line\">572</div><div class=\"line\">573</div><div class=\"line\">574</div><div class=\"line\">575</div><div class=\"line\">576</div><div class=\"line\">577</div><div class=\"line\">578</div><div class=\"line\">579</div><div class=\"line\">580</div><div class=\"line\">581</div><div class=\"line\">582</div><div class=\"line\">583</div><div class=\"line\">584</div><div class=\"line\">585</div><div class=\"line\">586</div><div class=\"line\">587</div><div class=\"line\">588</div><div class=\"line\">589</div><div class=\"line\">590</div><div class=\"line\">591</div><div class=\"line\">592</div><div class=\"line\">593</div><div class=\"line\">594</div><div class=\"line\">595</div><div class=\"line\">596</div><div class=\"line\">597</div><div class=\"line\">598</div><div class=\"line\">599</div><div class=\"line\">600</div><div class=\"line\">601</div><div class=\"line\">602</div><div class=\"line\">603</div><div class=\"line\">604</div><div class=\"line\">605</div><div class=\"line\">606</div><div class=\"line\">607</div><div class=\"line\">608</div><div class=\"line\">609</div><div class=\"line\">610</div><div class=\"line\">611</div><div class=\"line\">612</div><div class=\"line\">613</div><div class=\"line\">614</div><div class=\"line\">615</div><div class=\"line\">616</div><div class=\"line\">617</div><div class=\"line\">618</div><div class=\"line\">619</div><div class=\"line\">620</div><div class=\"line\">621</div><div class=\"line\">622</div><div class=\"line\">623</div><div class=\"line\">624</div><div class=\"line\">625</div><div class=\"line\">626</div><div class=\"line\">627</div><div class=\"line\">628</div><div class=\"line\">629</div><div class=\"line\">630</div><div class=\"line\">631</div><div class=\"line\">632</div><div class=\"line\">633</div><div class=\"line\">634</div><div class=\"line\">635</div><div class=\"line\">636</div><div class=\"line\">637</div><div class=\"line\">638</div><div class=\"line\">639</div><div class=\"line\">640</div><div class=\"line\">641</div><div class=\"line\">642</div><div class=\"line\">643</div><div class=\"line\">644</div><div class=\"line\">645</div><div class=\"line\">646</div><div class=\"line\">647</div><div class=\"line\">648</div><div class=\"line\">649</div><div class=\"line\">650</div><div class=\"line\">651</div><div class=\"line\">652</div><div class=\"line\">653</div><div class=\"line\">654</div><div class=\"line\">655</div><div class=\"line\">656</div><div class=\"line\">657</div><div class=\"line\">658</div><div class=\"line\">659</div><div class=\"line\">660</div><div class=\"line\">661</div><div class=\"line\">662</div><div class=\"line\">663</div><div class=\"line\">664</div><div class=\"line\">665</div><div class=\"line\">666</div><div class=\"line\">667</div><div class=\"line\">668</div><div class=\"line\">669</div><div class=\"line\">670</div><div class=\"line\">671</div><div class=\"line\">672</div><div class=\"line\">673</div><div class=\"line\">674</div><div class=\"line\">675</div><div class=\"line\">676</div><div class=\"line\">677</div><div class=\"line\">678</div><div class=\"line\">679</div><div class=\"line\">680</div><div class=\"line\">681</div><div class=\"line\">682</div><div class=\"line\">683</div><div class=\"line\">684</div><div class=\"line\">685</div><div class=\"line\">686</div><div class=\"line\">687</div><div class=\"line\">688</div><div class=\"line\">689</div><div class=\"line\">690</div><div class=\"line\">691</div><div class=\"line\">692</div><div class=\"line\">693</div><div class=\"line\">694</div><div class=\"line\">695</div><div class=\"line\">696</div><div class=\"line\">697</div><div class=\"line\">698</div><div class=\"line\">699</div><div class=\"line\">700</div><div class=\"line\">701</div><div class=\"line\">702</div><div class=\"line\">703</div><div class=\"line\">704</div><div class=\"line\">705</div><div class=\"line\">706</div><div class=\"line\">707</div><div class=\"line\">708</div><div class=\"line\">709</div><div class=\"line\">710</div><div class=\"line\">711</div><div class=\"line\">712</div><div class=\"line\">713</div><div class=\"line\">714</div><div class=\"line\">715</div><div class=\"line\">716</div><div class=\"line\">717</div><div class=\"line\">718</div><div class=\"line\">719</div><div class=\"line\">720</div><div class=\"line\">721</div><div class=\"line\">722</div><div class=\"line\">723</div><div class=\"line\">724</div><div class=\"line\">725</div><div class=\"line\">726</div><div class=\"line\">727</div><div class=\"line\">728</div><div class=\"line\">729</div><div class=\"line\">730</div><div class=\"line\">731</div><div class=\"line\">732</div><div class=\"line\">733</div><div class=\"line\">734</div><div class=\"line\">735</div><div class=\"line\">736</div><div class=\"line\">737</div><div class=\"line\">738</div><div class=\"line\">739</div><div class=\"line\">740</div><div class=\"line\">741</div><div class=\"line\">742</div><div class=\"line\">743</div><div class=\"line\">744</div><div class=\"line\">745</div><div class=\"line\">746</div><div class=\"line\">747</div><div class=\"line\">748</div><div class=\"line\">749</div><div class=\"line\">750</div><div class=\"line\">751</div><div class=\"line\">752</div><div class=\"line\">753</div><div class=\"line\">754</div><div class=\"line\">755</div><div class=\"line\">756</div><div class=\"line\">757</div><div class=\"line\">758</div><div class=\"line\">759</div><div class=\"line\">760</div><div class=\"line\">761</div><div class=\"line\">762</div><div class=\"line\">763</div><div class=\"line\">764</div><div class=\"line\">765</div><div class=\"line\">766</div><div class=\"line\">767</div><div class=\"line\">768</div><div class=\"line\">769</div><div class=\"line\">770</div><div class=\"line\">771</div><div class=\"line\">772</div><div class=\"line\">773</div><div class=\"line\">774</div><div class=\"line\">775</div><div class=\"line\">776</div><div class=\"line\">777</div><div class=\"line\">778</div><div class=\"line\">779</div><div class=\"line\">780</div><div class=\"line\">781</div><div class=\"line\">782</div><div class=\"line\">783</div><div class=\"line\">784</div><div class=\"line\">785</div><div class=\"line\">786</div><div class=\"line\">787</div><div class=\"line\">788</div><div class=\"line\">789</div><div class=\"line\">790</div><div class=\"line\">791</div><div class=\"line\">792</div><div class=\"line\">793</div><div class=\"line\">794</div><div class=\"line\">795</div><div class=\"line\">796</div><div class=\"line\">797</div><div class=\"line\">798</div><div class=\"line\">799</div><div class=\"line\">800</div><div class=\"line\">801</div><div class=\"line\">802</div><div class=\"line\">803</div><div class=\"line\">804</div><div class=\"line\">805</div><div class=\"line\">806</div><div class=\"line\">807</div><div class=\"line\">808</div><div class=\"line\">809</div><div class=\"line\">810</div><div class=\"line\">811</div><div class=\"line\">812</div><div class=\"line\">813</div><div class=\"line\">814</div><div class=\"line\">815</div><div class=\"line\">816</div><div class=\"line\">817</div><div class=\"line\">818</div><div class=\"line\">819</div><div class=\"line\">820</div><div class=\"line\">821</div><div class=\"line\">822</div><div class=\"line\">823</div><div class=\"line\">824</div><div class=\"line\">825</div><div class=\"line\">826</div><div class=\"line\">827</div><div class=\"line\">828</div><div class=\"line\">829</div><div class=\"line\">830</div><div class=\"line\">831</div><div class=\"line\">832</div><div class=\"line\">833</div><div class=\"line\">834</div><div class=\"line\">835</div><div class=\"line\">836</div><div class=\"line\">837</div><div class=\"line\">838</div><div class=\"line\">839</div><div class=\"line\">840</div><div class=\"line\">841</div><div class=\"line\">842</div><div class=\"line\">843</div><div class=\"line\">844</div><div class=\"line\">845</div><div class=\"line\">846</div><div class=\"line\">847</div><div class=\"line\">848</div><div class=\"line\">849</div><div class=\"line\">850</div><div class=\"line\">851</div><div class=\"line\">852</div><div class=\"line\">853</div><div class=\"line\">854</div><div class=\"line\">855</div><div class=\"line\">856</div><div class=\"line\">857</div><div class=\"line\">858</div><div class=\"line\">859</div><div class=\"line\">860</div><div class=\"line\">861</div><div class=\"line\">862</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Single line comments start with a number symbol.</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">\"\"\" Multiline strings can be written</span></div><div class=\"line\">    using three \"s, and are often used</div><div class=\"line\">    as comments</div><div class=\"line\">\"\"\"</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">####################################################</span></div><div class=\"line\"><span class=\"comment\">## 1. Primitive Datatypes and Operators</span></div><div class=\"line\"><span class=\"comment\">####################################################</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># You have numbers</span></div><div class=\"line\"><span class=\"number\">3</span>  <span class=\"comment\"># =&gt; 3</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Math is what you would expect</span></div><div class=\"line\"><span class=\"number\">1</span> + <span class=\"number\">1</span>   <span class=\"comment\"># =&gt; 2</span></div><div class=\"line\"><span class=\"number\">8</span> - <span class=\"number\">1</span>   <span class=\"comment\"># =&gt; 7</span></div><div class=\"line\"><span class=\"number\">10</span> * <span class=\"number\">2</span>  <span class=\"comment\"># =&gt; 20</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Except division which returns floats, real numbers, by default</span></div><div class=\"line\"><span class=\"number\">35</span> / <span class=\"number\">5</span>  <span class=\"comment\"># =&gt; 7.0</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Result of integer division truncated down both for positive and negative.</span></div><div class=\"line\"><span class=\"number\">5</span> // <span class=\"number\">3</span>       <span class=\"comment\"># =&gt; 1</span></div><div class=\"line\"><span class=\"number\">5.0</span> // <span class=\"number\">3.0</span>   <span class=\"comment\"># =&gt; 1.0 # works on floats too</span></div><div class=\"line\"><span class=\"number\">-5</span> // <span class=\"number\">3</span>      <span class=\"comment\"># =&gt; -2</span></div><div class=\"line\"><span class=\"number\">-5.0</span> // <span class=\"number\">3.0</span>  <span class=\"comment\"># =&gt; -2.0</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># When you use a float, results are floats</span></div><div class=\"line\"><span class=\"number\">3</span> * <span class=\"number\">2.0</span>  <span class=\"comment\"># =&gt; 6.0</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Modulo operation</span></div><div class=\"line\"><span class=\"number\">7</span> % <span class=\"number\">3</span>  <span class=\"comment\"># =&gt; 1</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Exponentiation (x**y, x to the yth power)</span></div><div class=\"line\"><span class=\"number\">2</span>**<span class=\"number\">4</span>  <span class=\"comment\"># =&gt; 16</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Enforce precedence with parentheses</span></div><div class=\"line\">(<span class=\"number\">1</span> + <span class=\"number\">3</span>) * <span class=\"number\">2</span>  <span class=\"comment\"># =&gt; 8</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Boolean values are primitives (Note: the capitalization)</span></div><div class=\"line\"><span class=\"keyword\">True</span></div><div class=\"line\"><span class=\"keyword\">False</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># negate with not</span></div><div class=\"line\"><span class=\"keyword\">not</span> <span class=\"keyword\">True</span>   <span class=\"comment\"># =&gt; False</span></div><div class=\"line\"><span class=\"keyword\">not</span> <span class=\"keyword\">False</span>  <span class=\"comment\"># =&gt; True</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Boolean Operators</span></div><div class=\"line\"><span class=\"comment\"># Note \"and\" and \"or\" are case-sensitive</span></div><div class=\"line\"><span class=\"keyword\">True</span> <span class=\"keyword\">and</span> <span class=\"keyword\">False</span>  <span class=\"comment\"># =&gt; False</span></div><div class=\"line\"><span class=\"keyword\">False</span> <span class=\"keyword\">or</span> <span class=\"keyword\">True</span>   <span class=\"comment\"># =&gt; True</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Note using Bool operators with ints</span></div><div class=\"line\"><span class=\"number\">0</span> <span class=\"keyword\">and</span> <span class=\"number\">2</span>     <span class=\"comment\"># =&gt; 0</span></div><div class=\"line\"><span class=\"number\">-5</span> <span class=\"keyword\">or</span> <span class=\"number\">0</span>     <span class=\"comment\"># =&gt; -5</span></div><div class=\"line\"><span class=\"number\">0</span> == <span class=\"keyword\">False</span>  <span class=\"comment\"># =&gt; True</span></div><div class=\"line\"><span class=\"number\">2</span> == <span class=\"keyword\">True</span>   <span class=\"comment\"># =&gt; False</span></div><div class=\"line\"><span class=\"number\">1</span> == <span class=\"keyword\">True</span>   <span class=\"comment\"># =&gt; True</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Equality is ==</span></div><div class=\"line\"><span class=\"number\">1</span> == <span class=\"number\">1</span>  <span class=\"comment\"># =&gt; True</span></div><div class=\"line\"><span class=\"number\">2</span> == <span class=\"number\">1</span>  <span class=\"comment\"># =&gt; False</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Inequality is !=</span></div><div class=\"line\"><span class=\"number\">1</span> != <span class=\"number\">1</span>  <span class=\"comment\"># =&gt; False</span></div><div class=\"line\"><span class=\"number\">2</span> != <span class=\"number\">1</span>  <span class=\"comment\"># =&gt; True</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># More comparisons</span></div><div class=\"line\"><span class=\"number\">1</span> &lt; <span class=\"number\">10</span>  <span class=\"comment\"># =&gt; True</span></div><div class=\"line\"><span class=\"number\">1</span> &gt; <span class=\"number\">10</span>  <span class=\"comment\"># =&gt; False</span></div><div class=\"line\"><span class=\"number\">2</span> &lt;= <span class=\"number\">2</span>  <span class=\"comment\"># =&gt; True</span></div><div class=\"line\"><span class=\"number\">2</span> &gt;= <span class=\"number\">2</span>  <span class=\"comment\"># =&gt; True</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Comparisons can be chained!</span></div><div class=\"line\"><span class=\"number\">1</span> &lt; <span class=\"number\">2</span> &lt; <span class=\"number\">3</span>  <span class=\"comment\"># =&gt; True</span></div><div class=\"line\"><span class=\"number\">2</span> &lt; <span class=\"number\">3</span> &lt; <span class=\"number\">2</span>  <span class=\"comment\"># =&gt; False</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># (is vs. ==) is checks if two variables refer to the same object, but == checks</span></div><div class=\"line\"><span class=\"comment\"># if the objects pointed to have the same values.</span></div><div class=\"line\">a = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]  <span class=\"comment\"># Point a at a new list, [1, 2, 3, 4]</span></div><div class=\"line\">b = a             <span class=\"comment\"># Point b at what a is pointing to</span></div><div class=\"line\">b <span class=\"keyword\">is</span> a            <span class=\"comment\"># =&gt; True, a and b refer to the same object</span></div><div class=\"line\">b == a            <span class=\"comment\"># =&gt; True, a's and b's objects are equal</span></div><div class=\"line\">b = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]  <span class=\"comment\"># Point b at a new list, [1, 2, 3, 4]</span></div><div class=\"line\">b <span class=\"keyword\">is</span> a            <span class=\"comment\"># =&gt; False, a and b do not refer to the same object</span></div><div class=\"line\">b == a            <span class=\"comment\"># =&gt; True, a's and b's objects are equal</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Strings are created with \" or '</span></div><div class=\"line\"><span class=\"string\">\"This is a string.\"</span></div><div class=\"line\"><span class=\"string\">'This is also a string.'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Strings can be added too! But try not to do this.</span></div><div class=\"line\"><span class=\"string\">\"Hello \"</span> + <span class=\"string\">\"world!\"</span>  <span class=\"comment\"># =&gt; \"Hello world!\"</span></div><div class=\"line\"><span class=\"comment\"># Strings can be added without using '+'</span></div><div class=\"line\"><span class=\"string\">\"Hello \"</span> <span class=\"string\">\"world!\"</span>    <span class=\"comment\"># =&gt; \"Hello world!\"</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># A string can be treated like a list of characters</span></div><div class=\"line\"><span class=\"string\">\"This is a string\"</span>[<span class=\"number\">0</span>]  <span class=\"comment\"># =&gt; 'T'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># You can find the length of a string</span></div><div class=\"line\">len(<span class=\"string\">\"This is a string\"</span>)  <span class=\"comment\"># =&gt; 16</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># .format can be used to format strings, like this:</span></div><div class=\"line\"><span class=\"string\">\"&#123;&#125; can be &#123;&#125;\"</span>.format(<span class=\"string\">\"Strings\"</span>, <span class=\"string\">\"interpolated\"</span>)  <span class=\"comment\"># =&gt; \"Strings can be interpolated\"</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># You can repeat the formatting arguments to save some typing.</span></div><div class=\"line\"><span class=\"string\">\"&#123;0&#125; be nimble, &#123;0&#125; be quick, &#123;0&#125; jump over the &#123;1&#125;\"</span>.format(<span class=\"string\">\"Jack\"</span>, <span class=\"string\">\"candle stick\"</span>)</div><div class=\"line\"><span class=\"comment\"># =&gt; \"Jack be nimble, Jack be quick, Jack jump over the candle stick\"</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># You can use keywords if you don't want to count.</span></div><div class=\"line\"><span class=\"string\">\"&#123;name&#125; wants to eat &#123;food&#125;\"</span>.format(name=<span class=\"string\">\"Bob\"</span>, food=<span class=\"string\">\"lasagna\"</span>)  <span class=\"comment\"># =&gt; \"Bob wants to eat lasagna\"</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># If your Python 3 code also needs to run on Python 2.5 and below, you can also</span></div><div class=\"line\"><span class=\"comment\"># still use the old style of formatting:</span></div><div class=\"line\"><span class=\"string\">\"%s can be %s the %s way\"</span> % (<span class=\"string\">\"Strings\"</span>, <span class=\"string\">\"interpolated\"</span>, <span class=\"string\">\"old\"</span>)  <span class=\"comment\"># =&gt; \"Strings can be interpolated the old way\"</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># None is an object</span></div><div class=\"line\"><span class=\"keyword\">None</span>  <span class=\"comment\"># =&gt; None</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Don't use the equality \"==\" symbol to compare objects to None</span></div><div class=\"line\"><span class=\"comment\"># Use \"is\" instead. This checks for equality of object identity.</span></div><div class=\"line\"><span class=\"string\">\"etc\"</span> <span class=\"keyword\">is</span> <span class=\"keyword\">None</span>  <span class=\"comment\"># =&gt; False</span></div><div class=\"line\"><span class=\"keyword\">None</span> <span class=\"keyword\">is</span> <span class=\"keyword\">None</span>   <span class=\"comment\"># =&gt; True</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># None, 0, and empty strings/lists/dicts all evaluate to False.</span></div><div class=\"line\"><span class=\"comment\"># All other values are True</span></div><div class=\"line\">bool(<span class=\"number\">0</span>)   <span class=\"comment\"># =&gt; False</span></div><div class=\"line\">bool(<span class=\"string\">\"\"</span>)  <span class=\"comment\"># =&gt; False</span></div><div class=\"line\">bool([])  <span class=\"comment\"># =&gt; False</span></div><div class=\"line\">bool(&#123;&#125;)  <span class=\"comment\"># =&gt; False</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">####################################################</span></div><div class=\"line\"><span class=\"comment\">## 2. Variables and Collections</span></div><div class=\"line\"><span class=\"comment\">####################################################</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Python has a print function</span></div><div class=\"line\">print(<span class=\"string\">\"I'm Python. Nice to meet you!\"</span>)  <span class=\"comment\"># =&gt; I'm Python. Nice to meet you!</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># By default the print function also prints out a newline at the end.</span></div><div class=\"line\"><span class=\"comment\"># Use the optional argument end to change the end character.</span></div><div class=\"line\">print(<span class=\"string\">\"Hello, World\"</span>, end=<span class=\"string\">\"!\"</span>)  <span class=\"comment\"># =&gt; Hello, World!</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Simple way to get input data from console</span></div><div class=\"line\">input_string_var = input(<span class=\"string\">\"Enter some data: \"</span>) <span class=\"comment\"># Returns the data as a string</span></div><div class=\"line\"><span class=\"comment\"># Note: In earlier versions of Python, input() method was named as raw_input()</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># No need to declare variables before assigning to them.</span></div><div class=\"line\"><span class=\"comment\"># Convention is to use lower_case_with_underscores</span></div><div class=\"line\">some_var = <span class=\"number\">5</span></div><div class=\"line\">some_var  <span class=\"comment\"># =&gt; 5</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Accessing a previously unassigned variable is an exception.</span></div><div class=\"line\"><span class=\"comment\"># See Control Flow to learn more about exception handling.</span></div><div class=\"line\">some_unknown_var  <span class=\"comment\"># Raises a NameError</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># if can be used as an expression</span></div><div class=\"line\"><span class=\"comment\"># Equivalent of C's '?:' ternary operator</span></div><div class=\"line\"><span class=\"string\">\"yahoo!\"</span> <span class=\"keyword\">if</span> <span class=\"number\">3</span> &gt; <span class=\"number\">2</span> <span class=\"keyword\">else</span> <span class=\"number\">2</span>  <span class=\"comment\"># =&gt; \"yahoo!\"</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Lists store sequences</span></div><div class=\"line\">li = []</div><div class=\"line\"><span class=\"comment\"># You can start with a prefilled list</span></div><div class=\"line\">other_li = [<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Add stuff to the end of a list with append</span></div><div class=\"line\">li.append(<span class=\"number\">1</span>)    <span class=\"comment\"># li is now [1]</span></div><div class=\"line\">li.append(<span class=\"number\">2</span>)    <span class=\"comment\"># li is now [1, 2]</span></div><div class=\"line\">li.append(<span class=\"number\">4</span>)    <span class=\"comment\"># li is now [1, 2, 4]</span></div><div class=\"line\">li.append(<span class=\"number\">3</span>)    <span class=\"comment\"># li is now [1, 2, 4, 3]</span></div><div class=\"line\"><span class=\"comment\"># Remove from the end with pop</span></div><div class=\"line\">li.pop()        <span class=\"comment\"># =&gt; 3 and li is now [1, 2, 4]</span></div><div class=\"line\"><span class=\"comment\"># Let's put it back</span></div><div class=\"line\">li.append(<span class=\"number\">3</span>)    <span class=\"comment\"># li is now [1, 2, 4, 3] again.</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Access a list like you would any array</span></div><div class=\"line\">li[<span class=\"number\">0</span>]   <span class=\"comment\"># =&gt; 1</span></div><div class=\"line\"><span class=\"comment\"># Look at the last element</span></div><div class=\"line\">li[<span class=\"number\">-1</span>]  <span class=\"comment\"># =&gt; 3</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Looking out of bounds is an IndexError</span></div><div class=\"line\">li[<span class=\"number\">4</span>]  <span class=\"comment\"># Raises an IndexError</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># You can look at ranges with slice syntax.</span></div><div class=\"line\"><span class=\"comment\"># (It's a closed/open range for you mathy types.)</span></div><div class=\"line\">li[<span class=\"number\">1</span>:<span class=\"number\">3</span>]   <span class=\"comment\"># =&gt; [2, 4]</span></div><div class=\"line\"><span class=\"comment\"># Omit the beginning</span></div><div class=\"line\">li[<span class=\"number\">2</span>:]    <span class=\"comment\"># =&gt; [4, 3]</span></div><div class=\"line\"><span class=\"comment\"># Omit the end</span></div><div class=\"line\">li[:<span class=\"number\">3</span>]    <span class=\"comment\"># =&gt; [1, 2, 4]</span></div><div class=\"line\"><span class=\"comment\"># Select every second entry</span></div><div class=\"line\">li[::<span class=\"number\">2</span>]   <span class=\"comment\"># =&gt;[1, 4]</span></div><div class=\"line\"><span class=\"comment\"># Return a reversed copy of the list</span></div><div class=\"line\">li[::<span class=\"number\">-1</span>]  <span class=\"comment\"># =&gt; [3, 4, 2, 1]</span></div><div class=\"line\"><span class=\"comment\"># Use any combination of these to make advanced slices</span></div><div class=\"line\"><span class=\"comment\"># li[start:end:step]</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Make a one layer deep copy using slices</span></div><div class=\"line\">li2 = li[:]  <span class=\"comment\"># =&gt; li2 = [1, 2, 4, 3] but (li2 is li) will result in false.</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Remove arbitrary elements from a list with \"del\"</span></div><div class=\"line\"><span class=\"keyword\">del</span> li[<span class=\"number\">2</span>]  <span class=\"comment\"># li is now [1, 2, 3]</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Remove first occurrence of a value</span></div><div class=\"line\">li.remove(<span class=\"number\">2</span>)  <span class=\"comment\"># li is now [1, 3]</span></div><div class=\"line\">li.remove(<span class=\"number\">2</span>)  <span class=\"comment\"># Raises a ValueError as 2 is not in the list</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Insert an element at a specific index</span></div><div class=\"line\">li.insert(<span class=\"number\">1</span>, <span class=\"number\">2</span>)  <span class=\"comment\"># li is now [1, 2, 3] again</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Get the index of the first item found matching the argument</span></div><div class=\"line\">li.index(<span class=\"number\">2</span>)  <span class=\"comment\"># =&gt; 1</span></div><div class=\"line\">li.index(<span class=\"number\">4</span>)  <span class=\"comment\"># Raises a ValueError as 4 is not in the list</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># You can add lists</span></div><div class=\"line\"><span class=\"comment\"># Note: values for li and for other_li are not modified.</span></div><div class=\"line\">li + other_li  <span class=\"comment\"># =&gt; [1, 2, 3, 4, 5, 6]</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Concatenate lists with \"extend()\"</span></div><div class=\"line\">li.extend(other_li)  <span class=\"comment\"># Now li is [1, 2, 3, 4, 5, 6]</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Check for existence in a list with \"in\"</span></div><div class=\"line\"><span class=\"number\">1</span> <span class=\"keyword\">in</span> li  <span class=\"comment\"># =&gt; True</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Examine the length with \"len()\"</span></div><div class=\"line\">len(li)  <span class=\"comment\"># =&gt; 6</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Tuples are like lists but are immutable.</span></div><div class=\"line\">tup = (<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>)</div><div class=\"line\">tup[<span class=\"number\">0</span>]      <span class=\"comment\"># =&gt; 1</span></div><div class=\"line\">tup[<span class=\"number\">0</span>] = <span class=\"number\">3</span>  <span class=\"comment\"># Raises a TypeError</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Note that a tuple of length one has to have a comma after the last element but</span></div><div class=\"line\"><span class=\"comment\"># tuples of other lengths, even zero, do not.</span></div><div class=\"line\">type((<span class=\"number\">1</span>))   <span class=\"comment\"># =&gt; &lt;class 'int'&gt;</span></div><div class=\"line\">type((<span class=\"number\">1</span>,))  <span class=\"comment\"># =&gt; &lt;class 'tuple'&gt;</span></div><div class=\"line\">type(())    <span class=\"comment\"># =&gt; &lt;class 'tuple'&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># You can do most of the list operations on tuples too</span></div><div class=\"line\">len(tup)         <span class=\"comment\"># =&gt; 3</span></div><div class=\"line\">tup + (<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>)  <span class=\"comment\"># =&gt; (1, 2, 3, 4, 5, 6)</span></div><div class=\"line\">tup[:<span class=\"number\">2</span>]          <span class=\"comment\"># =&gt; (1, 2)</span></div><div class=\"line\"><span class=\"number\">2</span> <span class=\"keyword\">in</span> tup         <span class=\"comment\"># =&gt; True</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># You can unpack tuples (or lists) into variables</span></div><div class=\"line\">a, b, c = (<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>)  <span class=\"comment\"># a is now 1, b is now 2 and c is now 3</span></div><div class=\"line\"><span class=\"comment\"># You can also do extended unpacking</span></div><div class=\"line\">a, *b, c = (<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>)  <span class=\"comment\"># a is now 1, b is now [2, 3] and c is now 4</span></div><div class=\"line\"><span class=\"comment\"># Tuples are created by default if you leave out the parentheses</span></div><div class=\"line\">d, e, f = <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span></div><div class=\"line\"><span class=\"comment\"># Now look how easy it is to swap two values</span></div><div class=\"line\">e, d = d, e  <span class=\"comment\"># d is now 5 and e is now 4</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Dictionaries store mappings</span></div><div class=\"line\">empty_dict = &#123;&#125;</div><div class=\"line\"><span class=\"comment\"># Here is a prefilled dictionary</span></div><div class=\"line\">filled_dict = &#123;<span class=\"string\">\"one\"</span>: <span class=\"number\">1</span>, <span class=\"string\">\"two\"</span>: <span class=\"number\">2</span>, <span class=\"string\">\"three\"</span>: <span class=\"number\">3</span>&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Note keys for dictionaries have to be immutable types. This is to ensure that</span></div><div class=\"line\"><span class=\"comment\"># the key can be converted to a constant hash value for quick look-ups.</span></div><div class=\"line\"><span class=\"comment\"># Immutable types include ints, floats, strings, tuples.</span></div><div class=\"line\">invalid_dict = &#123;[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]: <span class=\"string\">\"123\"</span>&#125;  <span class=\"comment\"># =&gt; Raises a TypeError: unhashable type: 'list'</span></div><div class=\"line\">valid_dict = &#123;(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>):[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]&#125;   <span class=\"comment\"># Values can be of any type, however.</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Look up values with []</span></div><div class=\"line\">filled_dict[<span class=\"string\">\"one\"</span>]  <span class=\"comment\"># =&gt; 1</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Get all keys as an iterable with \"keys()\". We need to wrap the call in list()</span></div><div class=\"line\"><span class=\"comment\"># to turn it into a list. We'll talk about those later.  Note - Dictionary key</span></div><div class=\"line\"><span class=\"comment\"># ordering is not guaranteed. Your results might not match this exactly.</span></div><div class=\"line\">list(filled_dict.keys())  <span class=\"comment\"># =&gt; [\"three\", \"two\", \"one\"]</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Get all values as an iterable with \"values()\". Once again we need to wrap it</span></div><div class=\"line\"><span class=\"comment\"># in list() to get it out of the iterable. Note - Same as above regarding key</span></div><div class=\"line\"><span class=\"comment\"># ordering.</span></div><div class=\"line\">list(filled_dict.values())  <span class=\"comment\"># =&gt; [3, 2, 1]</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Check for existence of keys in a dictionary with \"in\"</span></div><div class=\"line\"><span class=\"string\">\"one\"</span> <span class=\"keyword\">in</span> filled_dict  <span class=\"comment\"># =&gt; True</span></div><div class=\"line\"><span class=\"number\">1</span> <span class=\"keyword\">in</span> filled_dict      <span class=\"comment\"># =&gt; False</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Looking up a non-existing key is a KeyError</span></div><div class=\"line\">filled_dict[<span class=\"string\">\"four\"</span>]  <span class=\"comment\"># KeyError</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Use \"get()\" method to avoid the KeyError</span></div><div class=\"line\">filled_dict.get(<span class=\"string\">\"one\"</span>)      <span class=\"comment\"># =&gt; 1</span></div><div class=\"line\">filled_dict.get(<span class=\"string\">\"four\"</span>)     <span class=\"comment\"># =&gt; None</span></div><div class=\"line\"><span class=\"comment\"># The get method supports a default argument when the value is missing</span></div><div class=\"line\">filled_dict.get(<span class=\"string\">\"one\"</span>, <span class=\"number\">4</span>)   <span class=\"comment\"># =&gt; 1</span></div><div class=\"line\">filled_dict.get(<span class=\"string\">\"four\"</span>, <span class=\"number\">4</span>)  <span class=\"comment\"># =&gt; 4</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># \"setdefault()\" inserts into a dictionary only if the given key isn't present</span></div><div class=\"line\">filled_dict.setdefault(<span class=\"string\">\"five\"</span>, <span class=\"number\">5</span>)  <span class=\"comment\"># filled_dict[\"five\"] is set to 5</span></div><div class=\"line\">filled_dict.setdefault(<span class=\"string\">\"five\"</span>, <span class=\"number\">6</span>)  <span class=\"comment\"># filled_dict[\"five\"] is still 5</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Adding to a dictionary</span></div><div class=\"line\">filled_dict.update(&#123;<span class=\"string\">\"four\"</span>:<span class=\"number\">4</span>&#125;)  <span class=\"comment\"># =&gt; &#123;\"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4&#125;</span></div><div class=\"line\"><span class=\"comment\">#filled_dict[\"four\"] = 4        #another way to add to dict</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Remove keys from a dictionary with del</span></div><div class=\"line\"><span class=\"keyword\">del</span> filled_dict[<span class=\"string\">\"one\"</span>]  <span class=\"comment\"># Removes the key \"one\" from filled dict</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># From Python 3.5 you can also use the additional unpacking options</span></div><div class=\"line\">&#123;<span class=\"string\">'a'</span>: <span class=\"number\">1</span>, **&#123;<span class=\"string\">'b'</span>: <span class=\"number\">2</span>&#125;&#125;  <span class=\"comment\"># =&gt; &#123;'a': 1, 'b': 2&#125;</span></div><div class=\"line\">&#123;<span class=\"string\">'a'</span>: <span class=\"number\">1</span>, **&#123;<span class=\"string\">'a'</span>: <span class=\"number\">2</span>&#125;&#125;  <span class=\"comment\"># =&gt; &#123;'a': 2&#125;</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Sets store ... well sets</span></div><div class=\"line\">empty_set = set()</div><div class=\"line\"><span class=\"comment\"># Initialize a set with a bunch of values. Yeah, it looks a bit like a dict. Sorry.</span></div><div class=\"line\">some_set = &#123;<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>&#125;  <span class=\"comment\"># some_set is now &#123;1, 2, 3, 4&#125;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Similar to keys of a dictionary, elements of a set have to be immutable.</span></div><div class=\"line\">invalid_set = &#123;[<span class=\"number\">1</span>], <span class=\"number\">1</span>&#125;  <span class=\"comment\"># =&gt; Raises a TypeError: unhashable type: 'list'</span></div><div class=\"line\">valid_set = &#123;(<span class=\"number\">1</span>,), <span class=\"number\">1</span>&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Can set new variables to a set</span></div><div class=\"line\">filled_set = some_set</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Add one more item to the set</span></div><div class=\"line\">filled_set.add(<span class=\"number\">5</span>)  <span class=\"comment\"># filled_set is now &#123;1, 2, 3, 4, 5&#125;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Do set intersection with &amp;</span></div><div class=\"line\">other_set = &#123;<span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>&#125;</div><div class=\"line\">filled_set &amp; other_set  <span class=\"comment\"># =&gt; &#123;3, 4, 5&#125;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Do set union with |</span></div><div class=\"line\">filled_set | other_set  <span class=\"comment\"># =&gt; &#123;1, 2, 3, 4, 5, 6&#125;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Do set difference with -</span></div><div class=\"line\">&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>&#125; - &#123;<span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>&#125;  <span class=\"comment\"># =&gt; &#123;1, 4&#125;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Do set symmetric difference with ^</span></div><div class=\"line\">&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>&#125; ^ &#123;<span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>&#125;  <span class=\"comment\"># =&gt; &#123;1, 4, 5&#125;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Check if set on the left is a superset of set on the right</span></div><div class=\"line\">&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>&#125; &gt;= &#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>&#125; <span class=\"comment\"># =&gt; False</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Check if set on the left is a subset of set on the right</span></div><div class=\"line\">&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>&#125; &lt;= &#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>&#125; <span class=\"comment\"># =&gt; True</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Check for existence in a set with in</span></div><div class=\"line\"><span class=\"number\">2</span> <span class=\"keyword\">in</span> filled_set   <span class=\"comment\"># =&gt; True</span></div><div class=\"line\"><span class=\"number\">10</span> <span class=\"keyword\">in</span> filled_set  <span class=\"comment\"># =&gt; False</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">####################################################</span></div><div class=\"line\"><span class=\"comment\">## 3. Control Flow and Iterables</span></div><div class=\"line\"><span class=\"comment\">####################################################</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Let's just make a variable</span></div><div class=\"line\">some_var = <span class=\"number\">5</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Here is an if statement. Indentation is significant in python!</span></div><div class=\"line\"><span class=\"comment\"># prints \"some_var is smaller than 10\"</span></div><div class=\"line\"><span class=\"keyword\">if</span> some_var &gt; <span class=\"number\">10</span>:</div><div class=\"line\">    print(<span class=\"string\">\"some_var is totally bigger than 10.\"</span>)</div><div class=\"line\"><span class=\"keyword\">elif</span> some_var &lt; <span class=\"number\">10</span>:    <span class=\"comment\"># This elif clause is optional.</span></div><div class=\"line\">    print(<span class=\"string\">\"some_var is smaller than 10.\"</span>)</div><div class=\"line\"><span class=\"keyword\">else</span>:                  <span class=\"comment\"># This is optional too.</span></div><div class=\"line\">    print(<span class=\"string\">\"some_var is indeed 10.\"</span>)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">\"\"\"</span></div><div class=\"line\">For loops iterate over lists</div><div class=\"line\">prints:</div><div class=\"line\">    dog is a mammal</div><div class=\"line\">    cat is a mammal</div><div class=\"line\">    mouse is a mammal</div><div class=\"line\">\"\"\"</div><div class=\"line\"><span class=\"keyword\">for</span> animal <span class=\"keyword\">in</span> [<span class=\"string\">\"dog\"</span>, <span class=\"string\">\"cat\"</span>, <span class=\"string\">\"mouse\"</span>]:</div><div class=\"line\">    <span class=\"comment\"># You can use format() to interpolate formatted strings</span></div><div class=\"line\">    print(<span class=\"string\">\"&#123;&#125; is a mammal\"</span>.format(animal))</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">\"\"\"</span></div><div class=\"line\">\"range(number)\" returns an iterable of numbers</div><div class=\"line\">from zero to the given number</div><div class=\"line\">prints:</div><div class=\"line\">    0</div><div class=\"line\">    1</div><div class=\"line\">    2</div><div class=\"line\">    3</div><div class=\"line\">\"\"\"</div><div class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">4</span>):</div><div class=\"line\">    print(i)</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">\"\"\"</span></div><div class=\"line\">\"range(lower, upper)\" returns an iterable of numbers</div><div class=\"line\">from the lower number to the upper number</div><div class=\"line\">prints:</div><div class=\"line\">    4</div><div class=\"line\">    5</div><div class=\"line\">    6</div><div class=\"line\">    7</div><div class=\"line\">\"\"\"</div><div class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">4</span>, <span class=\"number\">8</span>):</div><div class=\"line\">    print(i)</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">\"\"\"</span></div><div class=\"line\">\"range(lower, upper, step)\" returns an iterable of numbers</div><div class=\"line\">from the lower number to the upper number, while incrementing</div><div class=\"line\">by step. If step is not indicated, the default value is 1.</div><div class=\"line\">prints:</div><div class=\"line\">    4</div><div class=\"line\">    6</div><div class=\"line\">\"\"\"</div><div class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">4</span>, <span class=\"number\">8</span>, <span class=\"number\">2</span>):</div><div class=\"line\">    print(i)</div><div class=\"line\"><span class=\"string\">\"\"\"</span></div><div class=\"line\"></div><div class=\"line\">While loops go until a condition is no longer met.</div><div class=\"line\">prints:</div><div class=\"line\">    0</div><div class=\"line\">    1</div><div class=\"line\">    2</div><div class=\"line\">    3</div><div class=\"line\">\"\"\"</div><div class=\"line\">x = <span class=\"number\">0</span></div><div class=\"line\"><span class=\"keyword\">while</span> x &lt; <span class=\"number\">4</span>:</div><div class=\"line\">    print(x)</div><div class=\"line\">    x += <span class=\"number\">1</span>  <span class=\"comment\"># Shorthand for x = x + 1</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Handle exceptions with a try/except block</span></div><div class=\"line\"><span class=\"keyword\">try</span>:</div><div class=\"line\">    <span class=\"comment\"># Use \"raise\" to raise an error</span></div><div class=\"line\">    <span class=\"keyword\">raise</span> IndexError(<span class=\"string\">\"This is an index error\"</span>)</div><div class=\"line\"><span class=\"keyword\">except</span> IndexError <span class=\"keyword\">as</span> e:</div><div class=\"line\">    <span class=\"keyword\">pass</span>                 <span class=\"comment\"># Pass is just a no-op. Usually you would do recovery here.</span></div><div class=\"line\"><span class=\"keyword\">except</span> (TypeError, NameError):</div><div class=\"line\">    <span class=\"keyword\">pass</span>                 <span class=\"comment\"># Multiple exceptions can be handled together, if required.</span></div><div class=\"line\"><span class=\"keyword\">else</span>:                    <span class=\"comment\"># Optional clause to the try/except block. Must follow all except blocks</span></div><div class=\"line\">    print(<span class=\"string\">\"All good!\"</span>)   <span class=\"comment\"># Runs only if the code in try raises no exceptions</span></div><div class=\"line\"><span class=\"keyword\">finally</span>:                 <span class=\"comment\">#  Execute under all circumstances</span></div><div class=\"line\">    print(<span class=\"string\">\"We can clean up resources here\"</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Instead of try/finally to cleanup resources you can use a with statement</span></div><div class=\"line\"><span class=\"keyword\">with</span> open(<span class=\"string\">\"myfile.txt\"</span>) <span class=\"keyword\">as</span> f:</div><div class=\"line\">    <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> f:</div><div class=\"line\">        print(line)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Python offers a fundamental abstraction called the Iterable.</span></div><div class=\"line\"><span class=\"comment\"># An iterable is an object that can be treated as a sequence.</span></div><div class=\"line\"><span class=\"comment\"># The object returned the range function, is an iterable.</span></div><div class=\"line\"></div><div class=\"line\">filled_dict = &#123;<span class=\"string\">\"one\"</span>: <span class=\"number\">1</span>, <span class=\"string\">\"two\"</span>: <span class=\"number\">2</span>, <span class=\"string\">\"three\"</span>: <span class=\"number\">3</span>&#125;</div><div class=\"line\">our_iterable = filled_dict.keys()</div><div class=\"line\">print(our_iterable)  <span class=\"comment\"># =&gt; dict_keys(['one', 'two', 'three']). This is an object that implements our Iterable interface.</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># We can loop over it.</span></div><div class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> our_iterable:</div><div class=\"line\">    print(i)  <span class=\"comment\"># Prints one, two, three</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># However we cannot address elements by index.</span></div><div class=\"line\">our_iterable[<span class=\"number\">1</span>]  <span class=\"comment\"># Raises a TypeError</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># An iterable is an object that knows how to create an iterator.</span></div><div class=\"line\">our_iterator = iter(our_iterable)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Our iterator is an object that can remember the state as we traverse through it.</span></div><div class=\"line\"><span class=\"comment\"># We get the next object with \"next()\".</span></div><div class=\"line\">next(our_iterator)  <span class=\"comment\"># =&gt; \"one\"</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># It maintains state as we iterate.</span></div><div class=\"line\">next(our_iterator)  <span class=\"comment\"># =&gt; \"two\"</span></div><div class=\"line\">next(our_iterator)  <span class=\"comment\"># =&gt; \"three\"</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># After the iterator has returned all of its data, it gives you a StopIterator Exception</span></div><div class=\"line\">next(our_iterator)  <span class=\"comment\"># Raises StopIteration</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># You can grab all the elements of an iterator by calling list() on it.</span></div><div class=\"line\">list(filled_dict.keys())  <span class=\"comment\"># =&gt; Returns [\"one\", \"two\", \"three\"]</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">####################################################</span></div><div class=\"line\"><span class=\"comment\">## 4. Functions</span></div><div class=\"line\"><span class=\"comment\">####################################################</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Use \"def\" to create new functions</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">add</span><span class=\"params\">(x, y)</span>:</span></div><div class=\"line\">    print(<span class=\"string\">\"x is &#123;&#125; and y is &#123;&#125;\"</span>.format(x, y))</div><div class=\"line\">    <span class=\"keyword\">return</span> x + y  <span class=\"comment\"># Return values with a return statement</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Calling functions with parameters</span></div><div class=\"line\">add(<span class=\"number\">5</span>, <span class=\"number\">6</span>)  <span class=\"comment\"># =&gt; prints out \"x is 5 and y is 6\" and returns 11</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Another way to call functions is with keyword arguments</span></div><div class=\"line\">add(y=<span class=\"number\">6</span>, x=<span class=\"number\">5</span>)  <span class=\"comment\"># Keyword arguments can arrive in any order.</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># You can define functions that take a variable number of</span></div><div class=\"line\"><span class=\"comment\"># positional arguments</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">varargs</span><span class=\"params\">(*args)</span>:</span></div><div class=\"line\">    <span class=\"keyword\">return</span> args</div><div class=\"line\"></div><div class=\"line\">varargs(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>)  <span class=\"comment\"># =&gt; (1, 2, 3)</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># You can define functions that take a variable number of</span></div><div class=\"line\"><span class=\"comment\"># keyword arguments, as well</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">keyword_args</span><span class=\"params\">(**kwargs)</span>:</span></div><div class=\"line\">    <span class=\"keyword\">return</span> kwargs</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Let's call it to see what happens</span></div><div class=\"line\">keyword_args(big=<span class=\"string\">\"foot\"</span>, loch=<span class=\"string\">\"ness\"</span>)  <span class=\"comment\"># =&gt; &#123;\"big\": \"foot\", \"loch\": \"ness\"&#125;</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># You can do both at once, if you like</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">all_the_args</span><span class=\"params\">(*args, **kwargs)</span>:</span></div><div class=\"line\">    print(args)</div><div class=\"line\">    print(kwargs)</div><div class=\"line\"><span class=\"string\">\"\"\"</span></div><div class=\"line\">all_the_args(1, 2, a=3, b=4) prints:</div><div class=\"line\">    (1, 2)</div><div class=\"line\">    &#123;\"a\": 3, \"b\": 4&#125;</div><div class=\"line\">\"\"\"</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># When calling functions, you can do the opposite of args/kwargs!</span></div><div class=\"line\"><span class=\"comment\"># Use * to expand tuples and use ** to expand kwargs.</span></div><div class=\"line\">args = (<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>)</div><div class=\"line\">kwargs = &#123;<span class=\"string\">\"a\"</span>: <span class=\"number\">3</span>, <span class=\"string\">\"b\"</span>: <span class=\"number\">4</span>&#125;</div><div class=\"line\">all_the_args(*args)            <span class=\"comment\"># equivalent to foo(1, 2, 3, 4)</span></div><div class=\"line\">all_the_args(**kwargs)         <span class=\"comment\"># equivalent to foo(a=3, b=4)</span></div><div class=\"line\">all_the_args(*args, **kwargs)  <span class=\"comment\"># equivalent to foo(1, 2, 3, 4, a=3, b=4)</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Returning multiple values (with tuple assignments)</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">swap</span><span class=\"params\">(x, y)</span>:</span></div><div class=\"line\">    <span class=\"keyword\">return</span> y, x  <span class=\"comment\"># Return multiple values as a tuple without the parenthesis.</span></div><div class=\"line\">                 <span class=\"comment\"># (Note: parenthesis have been excluded but can be included)</span></div><div class=\"line\"></div><div class=\"line\">x = <span class=\"number\">1</span></div><div class=\"line\">y = <span class=\"number\">2</span></div><div class=\"line\">x, y = swap(x, y)     <span class=\"comment\"># =&gt; x = 2, y = 1</span></div><div class=\"line\"><span class=\"comment\"># (x, y) = swap(x,y)  # Again parenthesis have been excluded but can be included.</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Function Scope</span></div><div class=\"line\">x = <span class=\"number\">5</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">set_x</span><span class=\"params\">(num)</span>:</span></div><div class=\"line\">    <span class=\"comment\"># Local var x not the same as global variable x</span></div><div class=\"line\">    x = num    <span class=\"comment\"># =&gt; 43</span></div><div class=\"line\">    <span class=\"keyword\">print</span> (x)  <span class=\"comment\"># =&gt; 43</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">set_global_x</span><span class=\"params\">(num)</span>:</span></div><div class=\"line\">    <span class=\"keyword\">global</span> x</div><div class=\"line\">    <span class=\"keyword\">print</span> (x)  <span class=\"comment\"># =&gt; 5</span></div><div class=\"line\">    x = num    <span class=\"comment\"># global var x is now set to 6</span></div><div class=\"line\">    <span class=\"keyword\">print</span> (x)  <span class=\"comment\"># =&gt; 6</span></div><div class=\"line\"></div><div class=\"line\">set_x(<span class=\"number\">43</span>)</div><div class=\"line\">set_global_x(<span class=\"number\">6</span>)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Python has first class functions</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">create_adder</span><span class=\"params\">(x)</span>:</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">adder</span><span class=\"params\">(y)</span>:</span></div><div class=\"line\">        <span class=\"keyword\">return</span> x + y</div><div class=\"line\">    <span class=\"keyword\">return</span> adder</div><div class=\"line\"></div><div class=\"line\">add_10 = create_adder(<span class=\"number\">10</span>)</div><div class=\"line\">add_10(<span class=\"number\">3</span>)   <span class=\"comment\"># =&gt; 13</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># There are also anonymous functions</span></div><div class=\"line\">(<span class=\"keyword\">lambda</span> x: x &gt; <span class=\"number\">2</span>)(<span class=\"number\">3</span>)                  <span class=\"comment\"># =&gt; True</span></div><div class=\"line\">(<span class=\"keyword\">lambda</span> x, y: x ** <span class=\"number\">2</span> + y ** <span class=\"number\">2</span>)(<span class=\"number\">2</span>, <span class=\"number\">1</span>)  <span class=\"comment\"># =&gt; 5</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># There are built-in higher order functions</span></div><div class=\"line\">list(map(add_10, [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]))          <span class=\"comment\"># =&gt; [11, 12, 13]</span></div><div class=\"line\">list(map(max, [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], [<span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>]))  <span class=\"comment\"># =&gt; [4, 2, 3]</span></div><div class=\"line\"></div><div class=\"line\">list(filter(<span class=\"keyword\">lambda</span> x: x &gt; <span class=\"number\">5</span>, [<span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>]))  <span class=\"comment\"># =&gt; [6, 7]</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># We can use list comprehensions for nice maps and filters</span></div><div class=\"line\"><span class=\"comment\"># List comprehension stores the output as a list which can itself be a nested list</span></div><div class=\"line\">[add_10(i) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]]         <span class=\"comment\"># =&gt; [11, 12, 13]</span></div><div class=\"line\">[x <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> [<span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>] <span class=\"keyword\">if</span> x &gt; <span class=\"number\">5</span>]  <span class=\"comment\"># =&gt; [6, 7]</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># You can construct set and dict comprehensions as well.</span></div><div class=\"line\">&#123;x <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> <span class=\"string\">'abcddeef'</span> <span class=\"keyword\">if</span> x <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> <span class=\"string\">'abc'</span>&#125;  <span class=\"comment\"># =&gt; &#123;'d', 'e', 'f'&#125;</span></div><div class=\"line\">&#123;x: x**<span class=\"number\">2</span> <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(<span class=\"number\">5</span>)&#125;  <span class=\"comment\"># =&gt; &#123;0: 0, 1: 1, 2: 4, 3: 9, 4: 16&#125;</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">####################################################</span></div><div class=\"line\"><span class=\"comment\">## 5. Modules</span></div><div class=\"line\"><span class=\"comment\">####################################################</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># You can import modules</span></div><div class=\"line\"><span class=\"keyword\">import</span> math</div><div class=\"line\">print(math.sqrt(<span class=\"number\">16</span>))  <span class=\"comment\"># =&gt; 4.0</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># You can get specific functions from a module</span></div><div class=\"line\"><span class=\"keyword\">from</span> math <span class=\"keyword\">import</span> ceil, floor</div><div class=\"line\">print(ceil(<span class=\"number\">3.7</span>))   <span class=\"comment\"># =&gt; 4.0</span></div><div class=\"line\">print(floor(<span class=\"number\">3.7</span>))  <span class=\"comment\"># =&gt; 3.0</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># You can import all functions from a module.</span></div><div class=\"line\"><span class=\"comment\"># Warning: this is not recommended</span></div><div class=\"line\"><span class=\"keyword\">from</span> math <span class=\"keyword\">import</span> *</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># You can shorten module names</span></div><div class=\"line\"><span class=\"keyword\">import</span> math <span class=\"keyword\">as</span> m</div><div class=\"line\">math.sqrt(<span class=\"number\">16</span>) == m.sqrt(<span class=\"number\">16</span>)  <span class=\"comment\"># =&gt; True</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Python modules are just ordinary python files. You</span></div><div class=\"line\"><span class=\"comment\"># can write your own, and import them. The name of the</span></div><div class=\"line\"><span class=\"comment\"># module is the same as the name of the file.</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># You can find out which functions and attributes</span></div><div class=\"line\"><span class=\"comment\"># defines a module.</span></div><div class=\"line\"><span class=\"keyword\">import</span> math</div><div class=\"line\">dir(math)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># If you have a Python script named math.py in the same</span></div><div class=\"line\"><span class=\"comment\"># folder as your current script, the file math.py will</span></div><div class=\"line\"><span class=\"comment\"># be loaded instead of the built-in Python module.</span></div><div class=\"line\"><span class=\"comment\"># This happens because the local folder has priority</span></div><div class=\"line\"><span class=\"comment\"># over Python's built-in libraries.</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">####################################################</span></div><div class=\"line\"><span class=\"comment\">## 6. Classes</span></div><div class=\"line\"><span class=\"comment\">####################################################</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># We use the \"class\" operator to get a class</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Human</span>:</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># A class attribute. It is shared by all instances of this class</span></div><div class=\"line\">    species = <span class=\"string\">\"H. sapiens\"</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># Basic initializer, this is called when this class is instantiated.</span></div><div class=\"line\">    <span class=\"comment\"># Note that the double leading and trailing underscores denote objects</span></div><div class=\"line\">    <span class=\"comment\"># or attributes that are used by python but that live in user-controlled</span></div><div class=\"line\">    <span class=\"comment\"># namespaces. Methods(or objects or attributes) like: __init__, __str__,</span></div><div class=\"line\">    <span class=\"comment\"># __repr__ etc. are called magic methods (or sometimes called dunder methods)</span></div><div class=\"line\">    <span class=\"comment\"># You should not invent such names on your own.</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self, name)</span>:</span></div><div class=\"line\">        <span class=\"comment\"># Assign the argument to the instance's name attribute</span></div><div class=\"line\">        self.name = name</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\"># Initialize property</span></div><div class=\"line\">        self.age = <span class=\"number\">0</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># An instance method. All methods take \"self\" as the first argument</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">say</span><span class=\"params\">(self, msg)</span>:</span></div><div class=\"line\">        <span class=\"keyword\">print</span> (<span class=\"string\">\"&#123;name&#125;: &#123;message&#125;\"</span>.format(name=self.name, message=msg))</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># Another instance method</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">sing</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'yo... yo... microphone check... one two... one two...'</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># A class method is shared among all instances</span></div><div class=\"line\">    <span class=\"comment\"># They are called with the calling class as the first argument</span></div><div class=\"line\"><span class=\"meta\">    @classmethod</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_species</span><span class=\"params\">(cls)</span>:</span></div><div class=\"line\">        <span class=\"keyword\">return</span> cls.species</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># A static method is called without a class or instance reference</span></div><div class=\"line\"><span class=\"meta\">    @staticmethod</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">grunt</span><span class=\"params\">()</span>:</span></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"*grunt*\"</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># A property is just like a getter.</span></div><div class=\"line\">    <span class=\"comment\"># It turns the method age() into an read-only attribute</span></div><div class=\"line\">    <span class=\"comment\"># of the same name.</span></div><div class=\"line\"><span class=\"meta\">    @property</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">age</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"keyword\">return</span> self._age</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># This allows the property to be set</span></div><div class=\"line\"><span class=\"meta\">    @age.setter</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">age</span><span class=\"params\">(self, age)</span>:</span></div><div class=\"line\">        self._age = age</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># This allows the property to be deleted</span></div><div class=\"line\"><span class=\"meta\">    @age.deleter</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">age</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"keyword\">del</span> self._age</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># When a Python interpreter reads a source file it executes all its code.</span></div><div class=\"line\"><span class=\"comment\"># This __name__ check makes sure this code block is only executed when this</span></div><div class=\"line\"><span class=\"comment\"># module is the main program.</span></div><div class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</div><div class=\"line\">    <span class=\"comment\"># Instantiate a class</span></div><div class=\"line\">    i = Human(name=<span class=\"string\">\"Ian\"</span>)</div><div class=\"line\">    i.say(<span class=\"string\">\"hi\"</span>)                     <span class=\"comment\"># \"Ian: hi\"</span></div><div class=\"line\">    j = Human(<span class=\"string\">\"Joel\"</span>)</div><div class=\"line\">    j.say(<span class=\"string\">\"hello\"</span>)                  <span class=\"comment\"># \"Joel: hello\"</span></div><div class=\"line\">    <span class=\"comment\"># i and j are instances of type Human, or in other words: they are Human objects</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># Call our class method</span></div><div class=\"line\">    i.say(i.get_species())          <span class=\"comment\"># \"Ian: H. sapiens\"</span></div><div class=\"line\">    <span class=\"comment\"># Change the shared attribute</span></div><div class=\"line\">    Human.species = <span class=\"string\">\"H. neanderthalensis\"</span></div><div class=\"line\">    i.say(i.get_species())          <span class=\"comment\"># =&gt; \"Ian: H. neanderthalensis\"</span></div><div class=\"line\">    j.say(j.get_species())          <span class=\"comment\"># =&gt; \"Joel: H. neanderthalensis\"</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># Call the static method</span></div><div class=\"line\">    print(Human.grunt())            <span class=\"comment\"># =&gt; \"*grunt*\"</span></div><div class=\"line\">    print(i.grunt())                <span class=\"comment\"># =&gt; \"*grunt*\"</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># Update the property for this instance</span></div><div class=\"line\">    i.age = <span class=\"number\">42</span></div><div class=\"line\">    <span class=\"comment\"># Get the property</span></div><div class=\"line\">    i.say(i.age)                    <span class=\"comment\"># =&gt; 42</span></div><div class=\"line\">    j.say(j.age)                    <span class=\"comment\"># =&gt; 0</span></div><div class=\"line\">    <span class=\"comment\"># Delete the property</span></div><div class=\"line\">    <span class=\"keyword\">del</span> i.age</div><div class=\"line\">    <span class=\"comment\"># i.age                         # =&gt; this would raise an AttributeError</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">####################################################</span></div><div class=\"line\"><span class=\"comment\">## 6.1 Multiple Inheritance</span></div><div class=\"line\"><span class=\"comment\">####################################################</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Another class definition</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Bat</span>:</span></div><div class=\"line\"></div><div class=\"line\">    species = <span class=\"string\">'Baty'</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self, can_fly=True)</span>:</span></div><div class=\"line\">        self.fly = can_fly</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># This class also has a say method</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">say</span><span class=\"params\">(self, msg)</span>:</span></div><div class=\"line\">        msg = <span class=\"string\">'... ... ...'</span></div><div class=\"line\">        <span class=\"keyword\">return</span> msg</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># And its own method as well</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">sonar</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'))) ... ((('</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</div><div class=\"line\">    b = Bat()</div><div class=\"line\">    print(b.say(<span class=\"string\">'hello'</span>))</div><div class=\"line\">    print(b.fly)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># from \"filename-without-extension\" import \"function-or-class\"</span></div><div class=\"line\"><span class=\"keyword\">from</span> human <span class=\"keyword\">import</span> Human</div><div class=\"line\"><span class=\"keyword\">from</span> bat <span class=\"keyword\">import</span> Bat</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Batman inherits from both Human and Bat</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Batman</span><span class=\"params\">(Human, Bat)</span>:</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># Batman has its own value for the species class attribute</span></div><div class=\"line\">    species = <span class=\"string\">'Superhero'</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self, *args, **kwargs)</span>:</span></div><div class=\"line\">        <span class=\"comment\"># Typically to inherit attributes you have to call super:</span></div><div class=\"line\">        <span class=\"comment\">#super(Batman, self).__init__(*args, **kwargs)      </span></div><div class=\"line\">        <span class=\"comment\"># However we are dealing with multiple inheritance here, and super()</span></div><div class=\"line\">        <span class=\"comment\"># only works with the next base class in the MRO list.</span></div><div class=\"line\">        <span class=\"comment\"># So instead we explicitly call __init__ for all ancestors.</span></div><div class=\"line\">        <span class=\"comment\"># The use of *args and **kwargs allows for a clean way to pass arguments,</span></div><div class=\"line\">        <span class=\"comment\"># with each parent \"peeling a layer of the onion\".</span></div><div class=\"line\">        Human.__init__(self, <span class=\"string\">'anonymous'</span>, *args, **kwargs)</div><div class=\"line\">        Bat.__init__(self, *args, can_fly=<span class=\"keyword\">False</span>, **kwargs)</div><div class=\"line\">        <span class=\"comment\"># override the value for the name attribute</span></div><div class=\"line\">        self.name = <span class=\"string\">'Sad Affleck'</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">sing</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'nan nan nan nan nan batman!'</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</div><div class=\"line\">    sup = Batman()</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># Instance type checks</span></div><div class=\"line\">    <span class=\"keyword\">if</span> isinstance(sup, Human):</div><div class=\"line\">        print(<span class=\"string\">'I am human'</span>)</div><div class=\"line\">    <span class=\"keyword\">if</span> isinstance(sup, Bat):</div><div class=\"line\">        print(<span class=\"string\">'I am bat'</span>)</div><div class=\"line\">    <span class=\"keyword\">if</span> type(sup) <span class=\"keyword\">is</span> Batman:</div><div class=\"line\">        print(<span class=\"string\">'I am Batman'</span>)</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># Get the Method Resolution search Order used by both getattr() and super().</span></div><div class=\"line\">    <span class=\"comment\"># This attribute is dynamic and can be updated</span></div><div class=\"line\">    print(Batman.__mro__)       <span class=\"comment\"># =&gt; (&lt;class '__main__.Batman'&gt;, &lt;class 'human.Human'&gt;, &lt;class 'bat.Bat'&gt;, &lt;class 'object'&gt;)</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># Calls parent method but uses its own class attribute</span></div><div class=\"line\">    print(sup.get_species())    <span class=\"comment\"># =&gt; Superhero</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># Calls overloaded method</span></div><div class=\"line\">    print(sup.sing())           <span class=\"comment\"># =&gt; nan nan nan nan nan batman!</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># Calls method from Human, because inheritance order matters</span></div><div class=\"line\">    sup.say(<span class=\"string\">'I agree'</span>)          <span class=\"comment\"># =&gt; Sad Affleck: I agree</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># Call method that exists only in 2nd ancestor</span></div><div class=\"line\">    print(sup.sonar())          <span class=\"comment\"># =&gt; ))) ... (((</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># Inherited class attribute</span></div><div class=\"line\">    sup.age = <span class=\"number\">100</span></div><div class=\"line\">    print(sup.age)</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># Inherited attribute from 2nd ancestor whose default value was overridden.</span></div><div class=\"line\">    print(<span class=\"string\">'Can I fly? '</span> + str(sup.fly))</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">####################################################</span></div><div class=\"line\"><span class=\"comment\">## 7. Advanced</span></div><div class=\"line\"><span class=\"comment\">####################################################</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Generators help you make lazy code.</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">double_numbers</span><span class=\"params\">(iterable)</span>:</span></div><div class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> iterable:</div><div class=\"line\">        <span class=\"keyword\">yield</span> i + i</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Generators are memory-efficient because they only load the data needed to</span></div><div class=\"line\"><span class=\"comment\"># process the next value in the iterable. This allows them to perform</span></div><div class=\"line\"><span class=\"comment\"># operations on otherwise prohibitively large value ranges.</span></div><div class=\"line\"><span class=\"comment\"># <span class=\"doctag\">NOTE:</span> `range` replaces `xrange` in Python 3.</span></div><div class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> double_numbers(range(<span class=\"number\">1</span>, <span class=\"number\">900000000</span>)):  <span class=\"comment\"># `range` is a generator.</span></div><div class=\"line\">    print(i)</div><div class=\"line\">    <span class=\"keyword\">if</span> i &gt;= <span class=\"number\">30</span>:</div><div class=\"line\">        <span class=\"keyword\">break</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Just as you can create a list comprehension, you can create generator</span></div><div class=\"line\"><span class=\"comment\"># comprehensions as well.</span></div><div class=\"line\">values = (-x <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>])</div><div class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> values:</div><div class=\"line\">    print(x)  <span class=\"comment\"># prints -1 -2 -3 -4 -5 to console/terminal</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># You can also cast a generator comprehension directly to a list.</span></div><div class=\"line\">values = (-x <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>])</div><div class=\"line\">gen_to_list = list(values)</div><div class=\"line\">print(gen_to_list)  <span class=\"comment\"># =&gt; [-1, -2, -3, -4, -5]</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Decorators</span></div><div class=\"line\"><span class=\"comment\"># In this example `beg` wraps `say`. If say_please is True then it</span></div><div class=\"line\"><span class=\"comment\"># will change the returned message.</span></div><div class=\"line\"><span class=\"keyword\">from</span> functools <span class=\"keyword\">import</span> wraps</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">beg</span><span class=\"params\">(target_function)</span>:</span></div><div class=\"line\"><span class=\"meta\">    @wraps(target_function)</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wrapper</span><span class=\"params\">(*args, **kwargs)</span>:</span></div><div class=\"line\">        msg, say_please = target_function(*args, **kwargs)</div><div class=\"line\">        <span class=\"keyword\">if</span> say_please:</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">\"&#123;&#125; &#123;&#125;\"</span>.format(msg, <span class=\"string\">\"Please! I am poor :(\"</span>)</div><div class=\"line\">        <span class=\"keyword\">return</span> msg</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> wrapper</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@beg</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">say</span><span class=\"params\">(say_please=False)</span>:</span></div><div class=\"line\">    msg = <span class=\"string\">\"Can you buy me a beer?\"</span></div><div class=\"line\">    <span class=\"keyword\">return</span> msg, say_please</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">print(say())                 <span class=\"comment\"># Can you buy me a beer?</span></div><div class=\"line\">print(say(say_please=<span class=\"keyword\">True</span>))  <span class=\"comment\"># Can you buy me a beer? Please! I am poor :(</span></div></pre></td></tr></table></figure>\n<h2 id=\"Ready-For-More\"><a href=\"#Ready-For-More\" class=\"headerlink\" title=\"Ready For More?\"></a>Ready For More?</h2><h3 id=\"Free-Online\"><a href=\"#Free-Online\" class=\"headerlink\" title=\"Free Online\"></a>Free Online</h3><ul>\n<li><a href=\"https://automatetheboringstuff.com\" target=\"_blank\" rel=\"external\">Automate the Boring Stuff with Python</a></li>\n<li><a href=\"http://pythonpracticeprojects.com\" target=\"_blank\" rel=\"external\">Ideas for Python Projects</a></li>\n<li><a href=\"http://docs.python.org/3/\" target=\"_blank\" rel=\"external\">The Official Docs</a></li>\n<li><a href=\"http://docs.python-guide.org/en/latest/\" target=\"_blank\" rel=\"external\">Hitchhiker’s Guide to Python</a></li>\n<li><a href=\"http://www.python-course.eu/index.php\" target=\"_blank\" rel=\"external\">Python Course</a></li>\n<li><a href=\"https://realpython.com/learn/python-first-steps/\" target=\"_blank\" rel=\"external\">First Steps With Python</a></li>\n<li><a href=\"https://github.com/vinta/awesome-python\" target=\"_blank\" rel=\"external\">A curated list of awesome Python frameworks, libraries and software</a></li>\n<li><a href=\"http://sahandsaba.com/thirty-python-language-features-and-tricks-you-may-not-know.html\" target=\"_blank\" rel=\"external\">30 Python Language Features and Tricks You May Not Know About</a></li>\n<li><a href=\"https://www.python.org/dev/peps/pep-0008/\" target=\"_blank\" rel=\"external\">Official Style Guide for Python</a></li>\n<li><a href=\"http://cscircles.cemc.uwaterloo.ca/\" target=\"_blank\" rel=\"external\">Python 3 Computer Science Circles</a></li>\n<li><a href=\"http://www.diveintopython3.net/index.html\" target=\"_blank\" rel=\"external\">Dive Into Python 3</a></li>\n<li><a href=\"http://nbviewer.jupyter.org/gist/anonymous/5924718\" target=\"_blank\" rel=\"external\">A Crash Course in Python for Scientists</a></li>\n</ul>\n<h3 id=\"Dead-Tree\"><a href=\"#Dead-Tree\" class=\"headerlink\" title=\"Dead Tree\"></a>Dead Tree</h3><ul>\n<li><a href=\"http://www.amazon.com/gp/product/0596158106/ref=as_li_qf_sp_asin_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0596158106&amp;linkCode=as2&amp;tag=homebits04-20\" target=\"_blank\" rel=\"external\">Programming Python</a></li>\n<li><a href=\"https://www.amazon.com/gp/product/1430224150?ie=UTF8&amp;tag=diveintomark-20&amp;creativeASIN=1430224150\" target=\"_blank\" rel=\"external\">Dive Into Python 3</a></li>\n<li><a href=\"https://www.amazon.com/Learn-Python-3-0-VISUALLY-Interactive-ebook/dp/B00YI58B9U/\" target=\"_blank\" rel=\"external\">Learn Python 3.0 VISUALLY</a></li>\n</ul>"},{"title":"PHP5.3+配置连接SQL Sever","date":"2016-11-25T02:52:50.000Z","updated":"2017-06-12T07:12:22.000Z","_content":"\n- php5.2.x自带php_mssql.dll的扩展连接SQL Server，但这个扩展只能支持SQL Server 2000以下版本。\n- php连接方式\n```\nmssql_connect('localhost', '用户名', '密码');\n```\n- php5.3.x不再支持php_mssql.dll扩展库\n\n<!--more-->\n\n## PHP5.3+配置SQL Sever\n\n详细配置方式可见 [https://github.com/Microsoft/msphpsql](https://github.com/Microsoft/msphpsql)\n\n## 下载Microsoft Drivers for PHP for SQL Server\n进入[https://www.microsoft.com/en-us/download/details.aspx?id=20098](https://www.microsoft.com/en-us/download/details.aspx?id=20098)  \n　　点击download  \n　　本人安装的是php环境是5.6.21，选择SQLSRV32.EXE下载\n>\n- Version 4.0 supports PHP 7.0+\n- Version 3.2 supports PHP 5.6, 5.5, and 5.4\n- Version 3.1 supports PHP 5.5 and 5.4\n- Version 3.0 supports PHP 5.4.\n\n## 配置Microsoft Drivers for PHP for SQL Server\n\n下载的文件是一个自解压的 EXE文件，将其解压，解压后会新增以下文件\n![Markdown](http://7xwh8v.com1.z0.glb.clouddn.com/16/11/19/1.png)\n\n1. 其中54、55、56表示php的5.4.x、5.5.x 和5.6.x版本；\n2. vc6或vc9的选择要看你使用的web服务器软件，如果使用的是IIS那就选择vc9，如果是Apache 则选择vc6；\n3. ts和nts的选择要看你安装的php版本是线程安全版的还是非线程安全版，ts是线程安全，nts是非线程安全。\n\n选择你对应的扩展拷贝到拷到php/ext目录下，在php.ini文件，添加以下代码：\n```\nextension=php_pdo_sqlsrv_56_ts.dll（用于pdo）\nextension=php_sqlsrv_56_ts.dll\n```\n\n## 验证连接\n1. 重启服务器，打开phpinfo();看到Registered PHP Streams一栏出现sqlsrv就证明添加扩展成功\n2. php连接测试\n```\n<?php\n  $serverName = \"(local)\";\n  $connectionInfo = array(\"UID\"=>\"sa\",\"PWD\"=>\"admin\",\"Database\"=>\"test\");\n  $conn = sqlsrv_connect($serverName, $connectionInfo);\n  if( $conn ){\n     echo \"Connection established.\\n\";\n  }else{\n     echo \"Connection could not be established.\\n\";\n     die(var_dump(sqlsrv_errors()));\n  }\n  sqlsrv_close($conn);\n?>\n```\n3. yii2连接方式\n```\n$db = new Connection([  \n    'dsn' =＞ 'sqlsrv:Server=youripaddress;Database=xxx',  \n    'username' =＞ 'yourusername',  \n    'password' =＞ 'yourpassword',  \n    'charset' =＞ 'utf8',  \n]);  \n```\n4. 常用函数\nsqlsrv_connect\nsqlsrv_close\nsqlsrv_commit\nsqlsrv_errors\nsqlsrv_fetch\nsqlsrv_fetch_array\nsqlsrv_fetch_metadata\nsqlsrv_num_rows\nsqlsrv_query\nsqlsrv_rollback\nsqlsrv_rows_affected\n具体用法可参见[php官网](http://php.net/manual/en/ref.sqlsrv.php)\n\n## 注意事项\n\n需安装``` ODBC Driver 11 or Microsoft ODBC Driver 13  ```\n  - [ODBC Driver 11 下载地址](href=\"https://www.microsoft.com/en-us/download/details.aspx?id=36434\")\n  - [ODBC Driver 13 下载地址](href=\"https://www.microsoft.com/en-us/download/details.aspx?id=50420\")\n\n具体安装版本可参见下载页面说明，安装后重启即可。\n","source":"_posts/php-connect-sqlserver.md","raw":"---\ntitle: PHP5.3+配置连接SQL Sever\ndate: 2016-11-25 10:52:50\nupdated: 2017-06-12 15:12:22\ncategories:\n- 编程笔记\ntags:\n- php\n- SQL Server\n---\n\n- php5.2.x自带php_mssql.dll的扩展连接SQL Server，但这个扩展只能支持SQL Server 2000以下版本。\n- php连接方式\n```\nmssql_connect('localhost', '用户名', '密码');\n```\n- php5.3.x不再支持php_mssql.dll扩展库\n\n<!--more-->\n\n## PHP5.3+配置SQL Sever\n\n详细配置方式可见 [https://github.com/Microsoft/msphpsql](https://github.com/Microsoft/msphpsql)\n\n## 下载Microsoft Drivers for PHP for SQL Server\n进入[https://www.microsoft.com/en-us/download/details.aspx?id=20098](https://www.microsoft.com/en-us/download/details.aspx?id=20098)  \n　　点击download  \n　　本人安装的是php环境是5.6.21，选择SQLSRV32.EXE下载\n>\n- Version 4.0 supports PHP 7.0+\n- Version 3.2 supports PHP 5.6, 5.5, and 5.4\n- Version 3.1 supports PHP 5.5 and 5.4\n- Version 3.0 supports PHP 5.4.\n\n## 配置Microsoft Drivers for PHP for SQL Server\n\n下载的文件是一个自解压的 EXE文件，将其解压，解压后会新增以下文件\n![Markdown](http://7xwh8v.com1.z0.glb.clouddn.com/16/11/19/1.png)\n\n1. 其中54、55、56表示php的5.4.x、5.5.x 和5.6.x版本；\n2. vc6或vc9的选择要看你使用的web服务器软件，如果使用的是IIS那就选择vc9，如果是Apache 则选择vc6；\n3. ts和nts的选择要看你安装的php版本是线程安全版的还是非线程安全版，ts是线程安全，nts是非线程安全。\n\n选择你对应的扩展拷贝到拷到php/ext目录下，在php.ini文件，添加以下代码：\n```\nextension=php_pdo_sqlsrv_56_ts.dll（用于pdo）\nextension=php_sqlsrv_56_ts.dll\n```\n\n## 验证连接\n1. 重启服务器，打开phpinfo();看到Registered PHP Streams一栏出现sqlsrv就证明添加扩展成功\n2. php连接测试\n```\n<?php\n  $serverName = \"(local)\";\n  $connectionInfo = array(\"UID\"=>\"sa\",\"PWD\"=>\"admin\",\"Database\"=>\"test\");\n  $conn = sqlsrv_connect($serverName, $connectionInfo);\n  if( $conn ){\n     echo \"Connection established.\\n\";\n  }else{\n     echo \"Connection could not be established.\\n\";\n     die(var_dump(sqlsrv_errors()));\n  }\n  sqlsrv_close($conn);\n?>\n```\n3. yii2连接方式\n```\n$db = new Connection([  \n    'dsn' =＞ 'sqlsrv:Server=youripaddress;Database=xxx',  \n    'username' =＞ 'yourusername',  \n    'password' =＞ 'yourpassword',  \n    'charset' =＞ 'utf8',  \n]);  \n```\n4. 常用函数\nsqlsrv_connect\nsqlsrv_close\nsqlsrv_commit\nsqlsrv_errors\nsqlsrv_fetch\nsqlsrv_fetch_array\nsqlsrv_fetch_metadata\nsqlsrv_num_rows\nsqlsrv_query\nsqlsrv_rollback\nsqlsrv_rows_affected\n具体用法可参见[php官网](http://php.net/manual/en/ref.sqlsrv.php)\n\n## 注意事项\n\n需安装``` ODBC Driver 11 or Microsoft ODBC Driver 13  ```\n  - [ODBC Driver 11 下载地址](href=\"https://www.microsoft.com/en-us/download/details.aspx?id=36434\")\n  - [ODBC Driver 13 下载地址](href=\"https://www.microsoft.com/en-us/download/details.aspx?id=50420\")\n\n具体安装版本可参见下载页面说明，安装后重启即可。\n","slug":"php-connect-sqlserver","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cj3u525bc000tjsurzr8vzqlt","content":"<ul>\n<li>php5.2.x自带php_mssql.dll的扩展连接SQL Server，但这个扩展只能支持SQL Server 2000以下版本。</li>\n<li><p>php连接方式</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mssql_connect(&apos;localhost&apos;, &apos;用户名&apos;, &apos;密码&apos;);</div></pre></td></tr></table></figure>\n</li>\n<li><p>php5.3.x不再支持php_mssql.dll扩展库</p>\n</li>\n</ul>\n<a id=\"more\"></a>\n<h2 id=\"PHP5-3-配置SQL-Sever\"><a href=\"#PHP5-3-配置SQL-Sever\" class=\"headerlink\" title=\"PHP5.3+配置SQL Sever\"></a>PHP5.3+配置SQL Sever</h2><p>详细配置方式可见 <a href=\"https://github.com/Microsoft/msphpsql\" target=\"_blank\" rel=\"external\">https://github.com/Microsoft/msphpsql</a></p>\n<h2 id=\"下载Microsoft-Drivers-for-PHP-for-SQL-Server\"><a href=\"#下载Microsoft-Drivers-for-PHP-for-SQL-Server\" class=\"headerlink\" title=\"下载Microsoft Drivers for PHP for SQL Server\"></a>下载Microsoft Drivers for PHP for SQL Server</h2><p>进入<a href=\"https://www.microsoft.com/en-us/download/details.aspx?id=20098\" target=\"_blank\" rel=\"external\">https://www.microsoft.com/en-us/download/details.aspx?id=20098</a><br>　　点击download<br>　　本人安装的是php环境是5.6.21，选择SQLSRV32.EXE下载<br>&gt;</p>\n<ul>\n<li>Version 4.0 supports PHP 7.0+</li>\n<li>Version 3.2 supports PHP 5.6, 5.5, and 5.4</li>\n<li>Version 3.1 supports PHP 5.5 and 5.4</li>\n<li>Version 3.0 supports PHP 5.4.</li>\n</ul>\n<h2 id=\"配置Microsoft-Drivers-for-PHP-for-SQL-Server\"><a href=\"#配置Microsoft-Drivers-for-PHP-for-SQL-Server\" class=\"headerlink\" title=\"配置Microsoft Drivers for PHP for SQL Server\"></a>配置Microsoft Drivers for PHP for SQL Server</h2><p>下载的文件是一个自解压的 EXE文件，将其解压，解压后会新增以下文件<br><img src=\"http://7xwh8v.com1.z0.glb.clouddn.com/16/11/19/1.png\" alt=\"Markdown\"></p>\n<ol>\n<li>其中54、55、56表示php的5.4.x、5.5.x 和5.6.x版本；</li>\n<li>vc6或vc9的选择要看你使用的web服务器软件，如果使用的是IIS那就选择vc9，如果是Apache 则选择vc6；</li>\n<li>ts和nts的选择要看你安装的php版本是线程安全版的还是非线程安全版，ts是线程安全，nts是非线程安全。</li>\n</ol>\n<p>选择你对应的扩展拷贝到拷到php/ext目录下，在php.ini文件，添加以下代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">extension=php_pdo_sqlsrv_56_ts.dll（用于pdo）</div><div class=\"line\">extension=php_sqlsrv_56_ts.dll</div></pre></td></tr></table></figure></p>\n<h2 id=\"验证连接\"><a href=\"#验证连接\" class=\"headerlink\" title=\"验证连接\"></a>验证连接</h2><ol>\n<li>重启服务器，打开phpinfo();看到Registered PHP Streams一栏出现sqlsrv就证明添加扩展成功</li>\n<li><p>php连接测试</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php</div><div class=\"line\">  $serverName = &quot;(local)&quot;;</div><div class=\"line\">  $connectionInfo = array(&quot;UID&quot;=&gt;&quot;sa&quot;,&quot;PWD&quot;=&gt;&quot;admin&quot;,&quot;Database&quot;=&gt;&quot;test&quot;);</div><div class=\"line\">  $conn = sqlsrv_connect($serverName, $connectionInfo);</div><div class=\"line\">  if( $conn )&#123;</div><div class=\"line\">     echo &quot;Connection established.\\n&quot;;</div><div class=\"line\">  &#125;else&#123;</div><div class=\"line\">     echo &quot;Connection could not be established.\\n&quot;;</div><div class=\"line\">     die(var_dump(sqlsrv_errors()));</div><div class=\"line\">  &#125;</div><div class=\"line\">  sqlsrv_close($conn);</div><div class=\"line\">?&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>yii2连接方式</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">$db = new Connection([  </div><div class=\"line\">    &apos;dsn&apos; =＞ &apos;sqlsrv:Server=youripaddress;Database=xxx&apos;,  </div><div class=\"line\">    &apos;username&apos; =＞ &apos;yourusername&apos;,  </div><div class=\"line\">    &apos;password&apos; =＞ &apos;yourpassword&apos;,  </div><div class=\"line\">    &apos;charset&apos; =＞ &apos;utf8&apos;,  </div><div class=\"line\">]);</div></pre></td></tr></table></figure>\n</li>\n<li><p>常用函数<br>sqlsrv_connect<br>sqlsrv_close<br>sqlsrv_commit<br>sqlsrv_errors<br>sqlsrv_fetch<br>sqlsrv_fetch_array<br>sqlsrv_fetch_metadata<br>sqlsrv_num_rows<br>sqlsrv_query<br>sqlsrv_rollback<br>sqlsrv_rows_affected<br>具体用法可参见<a href=\"http://php.net/manual/en/ref.sqlsrv.php\" target=\"_blank\" rel=\"external\">php官网</a></p>\n</li>\n</ol>\n<h2 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h2><p>需安装<code>ODBC Driver 11 or Microsoft ODBC Driver 13</code></p>\n<ul>\n<li><a href=\"href=&quot;https://www.microsoft.com/en-us/download/details.aspx?id=36434&quot;\">ODBC Driver 11 下载地址</a></li>\n<li><a href=\"href=&quot;https://www.microsoft.com/en-us/download/details.aspx?id=50420&quot;\">ODBC Driver 13 下载地址</a></li>\n</ul>\n<p>具体安装版本可参见下载页面说明，安装后重启即可。</p>\n","site":{"data":{}},"excerpt":"<ul>\n<li>php5.2.x自带php_mssql.dll的扩展连接SQL Server，但这个扩展只能支持SQL Server 2000以下版本。</li>\n<li><p>php连接方式</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mssql_connect(&apos;localhost&apos;, &apos;用户名&apos;, &apos;密码&apos;);</div></pre></td></tr></table></figure>\n</li>\n<li><p>php5.3.x不再支持php_mssql.dll扩展库</p>\n</li>\n</ul>","more":"<h2 id=\"PHP5-3-配置SQL-Sever\"><a href=\"#PHP5-3-配置SQL-Sever\" class=\"headerlink\" title=\"PHP5.3+配置SQL Sever\"></a>PHP5.3+配置SQL Sever</h2><p>详细配置方式可见 <a href=\"https://github.com/Microsoft/msphpsql\" target=\"_blank\" rel=\"external\">https://github.com/Microsoft/msphpsql</a></p>\n<h2 id=\"下载Microsoft-Drivers-for-PHP-for-SQL-Server\"><a href=\"#下载Microsoft-Drivers-for-PHP-for-SQL-Server\" class=\"headerlink\" title=\"下载Microsoft Drivers for PHP for SQL Server\"></a>下载Microsoft Drivers for PHP for SQL Server</h2><p>进入<a href=\"https://www.microsoft.com/en-us/download/details.aspx?id=20098\" target=\"_blank\" rel=\"external\">https://www.microsoft.com/en-us/download/details.aspx?id=20098</a><br>　　点击download<br>　　本人安装的是php环境是5.6.21，选择SQLSRV32.EXE下载<br>&gt;</p>\n<ul>\n<li>Version 4.0 supports PHP 7.0+</li>\n<li>Version 3.2 supports PHP 5.6, 5.5, and 5.4</li>\n<li>Version 3.1 supports PHP 5.5 and 5.4</li>\n<li>Version 3.0 supports PHP 5.4.</li>\n</ul>\n<h2 id=\"配置Microsoft-Drivers-for-PHP-for-SQL-Server\"><a href=\"#配置Microsoft-Drivers-for-PHP-for-SQL-Server\" class=\"headerlink\" title=\"配置Microsoft Drivers for PHP for SQL Server\"></a>配置Microsoft Drivers for PHP for SQL Server</h2><p>下载的文件是一个自解压的 EXE文件，将其解压，解压后会新增以下文件<br><img src=\"http://7xwh8v.com1.z0.glb.clouddn.com/16/11/19/1.png\" alt=\"Markdown\"></p>\n<ol>\n<li>其中54、55、56表示php的5.4.x、5.5.x 和5.6.x版本；</li>\n<li>vc6或vc9的选择要看你使用的web服务器软件，如果使用的是IIS那就选择vc9，如果是Apache 则选择vc6；</li>\n<li>ts和nts的选择要看你安装的php版本是线程安全版的还是非线程安全版，ts是线程安全，nts是非线程安全。</li>\n</ol>\n<p>选择你对应的扩展拷贝到拷到php/ext目录下，在php.ini文件，添加以下代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">extension=php_pdo_sqlsrv_56_ts.dll（用于pdo）</div><div class=\"line\">extension=php_sqlsrv_56_ts.dll</div></pre></td></tr></table></figure></p>\n<h2 id=\"验证连接\"><a href=\"#验证连接\" class=\"headerlink\" title=\"验证连接\"></a>验证连接</h2><ol>\n<li>重启服务器，打开phpinfo();看到Registered PHP Streams一栏出现sqlsrv就证明添加扩展成功</li>\n<li><p>php连接测试</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php</div><div class=\"line\">  $serverName = &quot;(local)&quot;;</div><div class=\"line\">  $connectionInfo = array(&quot;UID&quot;=&gt;&quot;sa&quot;,&quot;PWD&quot;=&gt;&quot;admin&quot;,&quot;Database&quot;=&gt;&quot;test&quot;);</div><div class=\"line\">  $conn = sqlsrv_connect($serverName, $connectionInfo);</div><div class=\"line\">  if( $conn )&#123;</div><div class=\"line\">     echo &quot;Connection established.\\n&quot;;</div><div class=\"line\">  &#125;else&#123;</div><div class=\"line\">     echo &quot;Connection could not be established.\\n&quot;;</div><div class=\"line\">     die(var_dump(sqlsrv_errors()));</div><div class=\"line\">  &#125;</div><div class=\"line\">  sqlsrv_close($conn);</div><div class=\"line\">?&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>yii2连接方式</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">$db = new Connection([  </div><div class=\"line\">    &apos;dsn&apos; =＞ &apos;sqlsrv:Server=youripaddress;Database=xxx&apos;,  </div><div class=\"line\">    &apos;username&apos; =＞ &apos;yourusername&apos;,  </div><div class=\"line\">    &apos;password&apos; =＞ &apos;yourpassword&apos;,  </div><div class=\"line\">    &apos;charset&apos; =＞ &apos;utf8&apos;,  </div><div class=\"line\">]);</div></pre></td></tr></table></figure>\n</li>\n<li><p>常用函数<br>sqlsrv_connect<br>sqlsrv_close<br>sqlsrv_commit<br>sqlsrv_errors<br>sqlsrv_fetch<br>sqlsrv_fetch_array<br>sqlsrv_fetch_metadata<br>sqlsrv_num_rows<br>sqlsrv_query<br>sqlsrv_rollback<br>sqlsrv_rows_affected<br>具体用法可参见<a href=\"http://php.net/manual/en/ref.sqlsrv.php\" target=\"_blank\" rel=\"external\">php官网</a></p>\n</li>\n</ol>\n<h2 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h2><p>需安装<code>ODBC Driver 11 or Microsoft ODBC Driver 13</code></p>\n<ul>\n<li><a href=\"href=&quot;https://www.microsoft.com/en-us/download/details.aspx?id=36434&quot;\">ODBC Driver 11 下载地址</a></li>\n<li><a href=\"href=&quot;https://www.microsoft.com/en-us/download/details.aspx?id=50420&quot;\">ODBC Driver 13 下载地址</a></li>\n</ul>\n<p>具体安装版本可参见下载页面说明，安装后重启即可。</p>"},{"title":"Windows下搭建Django开发环境","date":"2016-10-01T01:23:30.000Z","_content":"\n**Django**是用 Python 语言写的开源 Web 开发框架，它鼓励快速开发，并遵循 MVC 设计和 BSD 版权。Django 根据比利时的爵士音乐家 Django Reinhardt 命名.\n\n<!--more-->\n\n### 安装Python环境\n在安装Django框架之前，确保电脑已经安装配置好Python环境\n检测Python环境可在命令行直接键入``` python ```,若出现以下代码则Python环境已成功配置\n``` bash\nPython 3.6.0a3 (v3.6.0a3:f3edf13dc339, Jul 11 2016, 21:40:24) [MSC v.1900 64 bit (AMD64)] on win32\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n```\n### 下载Django框架\n- [Django官网](http://www.djangoproject.com/download/)下载\n- 通过Git拉取\n``` bash\n\tgit clone https://github.com/django/django.git\n```\n> Note: Django源代码文件与Python文件夹放在同一根目录下，如D:\\Django，此文件夹下还有D:\\Python36。\n\n### 安装Django\n``` bash\n\tcd D:\\Django  # Django下载位置\n\tpython setup.py install  # Django被安装到D:\\Python\\lib\\site-packages\n```\n### 验证Django\n打开命令行\n``` bash\n\tpython\n\timport django\n\tdjango.get_version()\n```\n如果出现版本号，即Django已经安装成功\n### 创建第一个Django项目\n打开命令行，键入\n``` bash\n\tdjango-admin startproject 项目路径 # 如 E:\\cs\\DjangoTest\n```\n> 如果想在任意文件夹下执行上述命令而不输入全路径，需要将```D:\\Python\\lib\\site-packages\\django\\bin```添加到环境变量\n\n执行上述命令之后，会发现在安装路径下出现以下文件\n```\n\tDjangoTest\n\t├── manage.py\n\t└── mysite\n    ├── __init__.py\n    ├── settings.py\n    ├── urls.py\n    └── wsgi.py\n\n1 directory, 5 files\n```\n### 运行Django服务器\n进入项目文件夹执行\n``` bash\n\tpython manage.py runserver 8000\n\t> 8000是默认端口号\n```\n在浏览器打开```127.0.0.1:8000```，如果出现以下内容\n``` http\n\tIt worked!\n\tCongratulations on your first Django-powered page.\n\tOf course, you haven't actually done any work yet. Next, start your first app by running python manage.py startapp [app_label].\n\tYou're seeing this message because you have DEBUG = True in your Django settings file and you haven't configured any URLs. Get to work!\n```\n至此，windows下Django环境搭建成功！\n","source":"_posts/start-django.md","raw":"---\ntitle: Windows下搭建Django开发环境\ncategories: 编程笔记\ntags: python\ndate: 2016-10-1 9:23:30\n---\n\n**Django**是用 Python 语言写的开源 Web 开发框架，它鼓励快速开发，并遵循 MVC 设计和 BSD 版权。Django 根据比利时的爵士音乐家 Django Reinhardt 命名.\n\n<!--more-->\n\n### 安装Python环境\n在安装Django框架之前，确保电脑已经安装配置好Python环境\n检测Python环境可在命令行直接键入``` python ```,若出现以下代码则Python环境已成功配置\n``` bash\nPython 3.6.0a3 (v3.6.0a3:f3edf13dc339, Jul 11 2016, 21:40:24) [MSC v.1900 64 bit (AMD64)] on win32\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n```\n### 下载Django框架\n- [Django官网](http://www.djangoproject.com/download/)下载\n- 通过Git拉取\n``` bash\n\tgit clone https://github.com/django/django.git\n```\n> Note: Django源代码文件与Python文件夹放在同一根目录下，如D:\\Django，此文件夹下还有D:\\Python36。\n\n### 安装Django\n``` bash\n\tcd D:\\Django  # Django下载位置\n\tpython setup.py install  # Django被安装到D:\\Python\\lib\\site-packages\n```\n### 验证Django\n打开命令行\n``` bash\n\tpython\n\timport django\n\tdjango.get_version()\n```\n如果出现版本号，即Django已经安装成功\n### 创建第一个Django项目\n打开命令行，键入\n``` bash\n\tdjango-admin startproject 项目路径 # 如 E:\\cs\\DjangoTest\n```\n> 如果想在任意文件夹下执行上述命令而不输入全路径，需要将```D:\\Python\\lib\\site-packages\\django\\bin```添加到环境变量\n\n执行上述命令之后，会发现在安装路径下出现以下文件\n```\n\tDjangoTest\n\t├── manage.py\n\t└── mysite\n    ├── __init__.py\n    ├── settings.py\n    ├── urls.py\n    └── wsgi.py\n\n1 directory, 5 files\n```\n### 运行Django服务器\n进入项目文件夹执行\n``` bash\n\tpython manage.py runserver 8000\n\t> 8000是默认端口号\n```\n在浏览器打开```127.0.0.1:8000```，如果出现以下内容\n``` http\n\tIt worked!\n\tCongratulations on your first Django-powered page.\n\tOf course, you haven't actually done any work yet. Next, start your first app by running python manage.py startapp [app_label].\n\tYou're seeing this message because you have DEBUG = True in your Django settings file and you haven't configured any URLs. Get to work!\n```\n至此，windows下Django环境搭建成功！\n","slug":"start-django","published":1,"updated":"2017-06-12T12:25:48.560Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3u525bo000wjsursuzaqi6i","content":"<p><strong>Django</strong>是用 Python 语言写的开源 Web 开发框架，它鼓励快速开发，并遵循 MVC 设计和 BSD 版权。Django 根据比利时的爵士音乐家 Django Reinhardt 命名.</p>\n<a id=\"more\"></a>\n<h3 id=\"安装Python环境\"><a href=\"#安装Python环境\" class=\"headerlink\" title=\"安装Python环境\"></a>安装Python环境</h3><p>在安装Django框架之前，确保电脑已经安装配置好Python环境<br>检测Python环境可在命令行直接键入<figure class=\"highlight python\"><figcaption><span>```,若出现以下代码则Python环境已成功配置</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">``` bash</div><div class=\"line\">Python <span class=\"number\">3.6</span><span class=\"number\">.0</span>a3 (v3<span class=\"number\">.6</span><span class=\"number\">.0</span>a3:f3edf13dc339, Jul <span class=\"number\">11</span> <span class=\"number\">2016</span>, <span class=\"number\">21</span>:<span class=\"number\">40</span>:<span class=\"number\">24</span>) [MSC v<span class=\"number\">.1900</span> <span class=\"number\">64</span> bit (AMD64)] on win32</div><div class=\"line\">Type <span class=\"string\">\"help\"</span>, <span class=\"string\">\"copyright\"</span>, <span class=\"string\">\"credits\"</span> <span class=\"keyword\">or</span> <span class=\"string\">\"license\"</span> <span class=\"keyword\">for</span> more information.</div></pre></td></tr></table></figure></p>\n<h3 id=\"下载Django框架\"><a href=\"#下载Django框架\" class=\"headerlink\" title=\"下载Django框架\"></a>下载Django框架</h3><ul>\n<li><a href=\"http://www.djangoproject.com/download/\" target=\"_blank\" rel=\"external\">Django官网</a>下载</li>\n<li>通过Git拉取<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/django/django.git</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p>Note: Django源代码文件与Python文件夹放在同一根目录下，如D:\\Django，此文件夹下还有D:\\Python36。</p>\n</blockquote>\n<h3 id=\"安装Django\"><a href=\"#安装Django\" class=\"headerlink\" title=\"安装Django\"></a>安装Django</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> D:\\Django  <span class=\"comment\"># Django下载位置</span></div><div class=\"line\">python setup.py install  <span class=\"comment\"># Django被安装到D:\\Python\\lib\\site-packages</span></div></pre></td></tr></table></figure>\n<h3 id=\"验证Django\"><a href=\"#验证Django\" class=\"headerlink\" title=\"验证Django\"></a>验证Django</h3><p>打开命令行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">python</div><div class=\"line\">import django</div><div class=\"line\">django.get_version()</div></pre></td></tr></table></figure></p>\n<p>如果出现版本号，即Django已经安装成功</p>\n<h3 id=\"创建第一个Django项目\"><a href=\"#创建第一个Django项目\" class=\"headerlink\" title=\"创建第一个Django项目\"></a>创建第一个Django项目</h3><p>打开命令行，键入<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">django-admin startproject 项目路径 <span class=\"comment\"># 如 E:\\cs\\DjangoTest</span></div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>如果想在任意文件夹下执行上述命令而不输入全路径，需要将<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">执行上述命令之后，会发现在安装路径下出现以下文件</div></pre></td></tr></table></figure></p>\n</blockquote>\n<pre><code>DjangoTest\n├── manage.py\n└── mysite\n├── __init__.py\n├── settings.py\n├── urls.py\n└── wsgi.py\n</code></pre><p>1 directory, 5 files<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">### 运行Django服务器</div><div class=\"line\">进入项目文件夹执行</div><div class=\"line\">``` bash</div><div class=\"line\">\tpython manage.py runserver 8000</div><div class=\"line\">\t&gt; 8000是默认端口号</div></pre></td></tr></table></figure></p>\n<p>在浏览器打开<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">``` http</div><div class=\"line\">\tIt worked!</div><div class=\"line\">\tCongratulations on your first Django-powered page.</div><div class=\"line\">\tOf course, you haven&apos;t actually done any work yet. Next, start your first app by running python manage.py startapp [app_label].</div><div class=\"line\">\tYou&apos;re seeing this message because you have DEBUG = True in your Django settings file and you haven&apos;t configured any URLs. Get to work!</div></pre></td></tr></table></figure></p>\n<p>至此，windows下Django环境搭建成功！</p>\n","site":{"data":{}},"excerpt":"<p><strong>Django</strong>是用 Python 语言写的开源 Web 开发框架，它鼓励快速开发，并遵循 MVC 设计和 BSD 版权。Django 根据比利时的爵士音乐家 Django Reinhardt 命名.</p>","more":"<h3 id=\"安装Python环境\"><a href=\"#安装Python环境\" class=\"headerlink\" title=\"安装Python环境\"></a>安装Python环境</h3><p>在安装Django框架之前，确保电脑已经安装配置好Python环境<br>检测Python环境可在命令行直接键入<figure class=\"highlight python\"><figcaption><span>```,若出现以下代码则Python环境已成功配置</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">``` bash</div><div class=\"line\">Python <span class=\"number\">3.6</span><span class=\"number\">.0</span>a3 (v3<span class=\"number\">.6</span><span class=\"number\">.0</span>a3:f3edf13dc339, Jul <span class=\"number\">11</span> <span class=\"number\">2016</span>, <span class=\"number\">21</span>:<span class=\"number\">40</span>:<span class=\"number\">24</span>) [MSC v<span class=\"number\">.1900</span> <span class=\"number\">64</span> bit (AMD64)] on win32</div><div class=\"line\">Type <span class=\"string\">\"help\"</span>, <span class=\"string\">\"copyright\"</span>, <span class=\"string\">\"credits\"</span> <span class=\"keyword\">or</span> <span class=\"string\">\"license\"</span> <span class=\"keyword\">for</span> more information.</div></pre></td></tr></table></figure></p>\n<h3 id=\"下载Django框架\"><a href=\"#下载Django框架\" class=\"headerlink\" title=\"下载Django框架\"></a>下载Django框架</h3><ul>\n<li><a href=\"http://www.djangoproject.com/download/\" target=\"_blank\" rel=\"external\">Django官网</a>下载</li>\n<li>通过Git拉取<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/django/django.git</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p>Note: Django源代码文件与Python文件夹放在同一根目录下，如D:\\Django，此文件夹下还有D:\\Python36。</p>\n</blockquote>\n<h3 id=\"安装Django\"><a href=\"#安装Django\" class=\"headerlink\" title=\"安装Django\"></a>安装Django</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> D:\\Django  <span class=\"comment\"># Django下载位置</span></div><div class=\"line\">python setup.py install  <span class=\"comment\"># Django被安装到D:\\Python\\lib\\site-packages</span></div></pre></td></tr></table></figure>\n<h3 id=\"验证Django\"><a href=\"#验证Django\" class=\"headerlink\" title=\"验证Django\"></a>验证Django</h3><p>打开命令行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">python</div><div class=\"line\">import django</div><div class=\"line\">django.get_version()</div></pre></td></tr></table></figure></p>\n<p>如果出现版本号，即Django已经安装成功</p>\n<h3 id=\"创建第一个Django项目\"><a href=\"#创建第一个Django项目\" class=\"headerlink\" title=\"创建第一个Django项目\"></a>创建第一个Django项目</h3><p>打开命令行，键入<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">django-admin startproject 项目路径 <span class=\"comment\"># 如 E:\\cs\\DjangoTest</span></div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>如果想在任意文件夹下执行上述命令而不输入全路径，需要将<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">执行上述命令之后，会发现在安装路径下出现以下文件</div></pre></td></tr></table></figure></p>\n</blockquote>\n<pre><code>DjangoTest\n├── manage.py\n└── mysite\n├── __init__.py\n├── settings.py\n├── urls.py\n└── wsgi.py\n</code></pre><p>1 directory, 5 files<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">### 运行Django服务器</div><div class=\"line\">进入项目文件夹执行</div><div class=\"line\">``` bash</div><div class=\"line\">\tpython manage.py runserver 8000</div><div class=\"line\">\t&gt; 8000是默认端口号</div></pre></td></tr></table></figure></p>\n<p>在浏览器打开<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">``` http</div><div class=\"line\">\tIt worked!</div><div class=\"line\">\tCongratulations on your first Django-powered page.</div><div class=\"line\">\tOf course, you haven&apos;t actually done any work yet. Next, start your first app by running python manage.py startapp [app_label].</div><div class=\"line\">\tYou&apos;re seeing this message because you have DEBUG = True in your Django settings file and you haven&apos;t configured any URLs. Get to work!</div></pre></td></tr></table></figure></p>\n<p>至此，windows下Django环境搭建成功！</p>"},{"title":"小试Ubuntu Server","date":"2016-07-18T03:45:33.000Z","_content":"\n> 今天偶尔逛某里云发现有个云翼计划， 针对大学生可9.9一个月购买一台ECS，虽然本人已经在某讯搭建有ECS，但鉴于其是Windows Server，特想试试Linux Server的一些花样，话不多说，先买为敬。一个月使用时间，足够我折腾一番。\n\n![1](http://7xwh8v.com1.z0.glb.clouddn.com/16-7-18/36478356.jpg)\n\n<!-- more --->\n\n## 配置\n- CPU:1核\n- 内存:1024MB\n- 带宽:1Mbps(峰值)\n- 操作系统:Ubuntu 14.04 64位\n\n> 一个字，渣，也是，便宜没好货。\n\n创建实例成功后，在本地远程连接到服务器一探究竟，显示无法联机。\n百度后才知道是服务器端没有开启远程连接，无奈之下，只有在阿里控制台先进入服务器\n\n## 远程连接\n\n``` bash\nsudo apt-get install xrdp\n```\n\n在本地输入cmd + mstsc输入账号密码时终于远程连接服务器。\n\n![2](http://7xwh8v.com1.z0.glb.clouddn.com/16-7-18/20632477.jpg)\n\n命令行实在是不会用，就想安装个图形界面\n\n## KUbuntu安装\n\n开机后输入图形界面的命令 ``startx``，提示安装``xinit``\n\n``` bash\nsudo apt-get install xinit\n```\n安装完后终端由黑色变成了白底黑字，出现X型的鼠标指针\n\n![3](http://7xwh8v.com1.z0.glb.clouddn.com/16-7-18/23562232.jpg)\n\n安装桌面环境。本人安装的是KUbuntu。安装命令如下：\n\n``` bash\nsudo apt-get install kubuntu-desktop\n```\n\n![4](http://7xwh8v.com1.z0.glb.clouddn.com/16-7-18/5749201.jpg)\n\n重启后我们看到了kubuntu界面了,这下我傻眼了，这个界面跟我之前用到的ubuntu看上去差别太大\n\n![5](http://7xwh8v.com1.z0.glb.clouddn.com/16-7-18/84508635.jpg)\n\n\n略微体验了一下，\n但是kde毕竟太(ka)过(cheng)于(gou)炫，\n\n## 卸载\n\nkde的桌面环境的安装包大概有600-700M，还是比较大的，都差不多赶上了一个ubuntu系统大小的一半了，为了节省空间更是决定卸载掉。\n\n``` bash\nsudo apt-get --purge remove libqt3-mt libqtcore4\n```\n\n关于开机画面的解决方案\n\n``` bash\nsudo apt-get autoremove plymouth-theme-kubuntu-logo\n```\n\n重启之后，回归黑框框，听说黑框框很装逼，但门道多着呢，继续探索！\n\n***\n\n## 附录1:Linux下关机重启命令\n\n### 重启命令：\n\n```\n1. reboot\n2. shutdown -r now 立刻重启(root用户使用)\n3. shutdown -r 10 过10分钟自动重启(root用户使用)\n4. shutdown -r 20:35 在时间为20:35时候重启(root用户使用)\n```\n\n> 如果是通过`shutdown`命令设置重启的话，可以用`shutdown -c`命令取消重启\n\n### 关机命令：\n```\n1. halt   立刻关机\n2. poweroff 立刻关机\n3. shutdown -h now 立刻关机(root用户使用)\n4. shutdown -h 10 10分钟后自动关机\n```\n\n> 如果是通过`shutdown`命令设置关机的话，可以用`shutdown -c`命令取消重启\n\n## 附录2:Linux下各大桌面环境/窗口管理器对比\n\n|桌面环境/窗口管理器\t |RAM used\t| CPU used\t| 类型|\n| ------------- |:-------------:| :-----:| :------:|\n|KDE 4.6\t| 363 MB|\t 4 %\t| 桌面环境|\n|Unity\t| 271 MB|\t 14%\t| 桌面环境(shell)|\n|GNOME 3|\t 193 MB\t| 10%\t|  桌面环境|\n|GNOME 2.x\t |191 MB\t| 1 %|\t 桌面环境|\n|XFCE 4.8\t| 144 MB|\t 10 %\t  |桌面环境|\n|LXDE\t| 85 MB|\t 10 %\t  |桌面环境|\n|IceWM\t| 85 MB|\t 2 %|\t  窗口管理器|\n|Enlightenment (E17 Standard)\t| 72 MB|\t 1 %|\t 窗口管理器|\n|Fluxbox\t| 69 MB|\t 1 %|\t 窗口管理器|\n|OpenBox|\t 60 MB\t| 1 %\t |窗口管理器|\n|JWM\t |58 MB\t |1 %\t| 窗口管理器|\n\n***\n","source":"_posts/ubuntu-server.md","raw":"---\ntitle: 小试Ubuntu Server\ndate: 2016-07-18 11:45:33\ntags: Linux\ncategories: 编程笔记\n---\n\n> 今天偶尔逛某里云发现有个云翼计划， 针对大学生可9.9一个月购买一台ECS，虽然本人已经在某讯搭建有ECS，但鉴于其是Windows Server，特想试试Linux Server的一些花样，话不多说，先买为敬。一个月使用时间，足够我折腾一番。\n\n![1](http://7xwh8v.com1.z0.glb.clouddn.com/16-7-18/36478356.jpg)\n\n<!-- more --->\n\n## 配置\n- CPU:1核\n- 内存:1024MB\n- 带宽:1Mbps(峰值)\n- 操作系统:Ubuntu 14.04 64位\n\n> 一个字，渣，也是，便宜没好货。\n\n创建实例成功后，在本地远程连接到服务器一探究竟，显示无法联机。\n百度后才知道是服务器端没有开启远程连接，无奈之下，只有在阿里控制台先进入服务器\n\n## 远程连接\n\n``` bash\nsudo apt-get install xrdp\n```\n\n在本地输入cmd + mstsc输入账号密码时终于远程连接服务器。\n\n![2](http://7xwh8v.com1.z0.glb.clouddn.com/16-7-18/20632477.jpg)\n\n命令行实在是不会用，就想安装个图形界面\n\n## KUbuntu安装\n\n开机后输入图形界面的命令 ``startx``，提示安装``xinit``\n\n``` bash\nsudo apt-get install xinit\n```\n安装完后终端由黑色变成了白底黑字，出现X型的鼠标指针\n\n![3](http://7xwh8v.com1.z0.glb.clouddn.com/16-7-18/23562232.jpg)\n\n安装桌面环境。本人安装的是KUbuntu。安装命令如下：\n\n``` bash\nsudo apt-get install kubuntu-desktop\n```\n\n![4](http://7xwh8v.com1.z0.glb.clouddn.com/16-7-18/5749201.jpg)\n\n重启后我们看到了kubuntu界面了,这下我傻眼了，这个界面跟我之前用到的ubuntu看上去差别太大\n\n![5](http://7xwh8v.com1.z0.glb.clouddn.com/16-7-18/84508635.jpg)\n\n\n略微体验了一下，\n但是kde毕竟太(ka)过(cheng)于(gou)炫，\n\n## 卸载\n\nkde的桌面环境的安装包大概有600-700M，还是比较大的，都差不多赶上了一个ubuntu系统大小的一半了，为了节省空间更是决定卸载掉。\n\n``` bash\nsudo apt-get --purge remove libqt3-mt libqtcore4\n```\n\n关于开机画面的解决方案\n\n``` bash\nsudo apt-get autoremove plymouth-theme-kubuntu-logo\n```\n\n重启之后，回归黑框框，听说黑框框很装逼，但门道多着呢，继续探索！\n\n***\n\n## 附录1:Linux下关机重启命令\n\n### 重启命令：\n\n```\n1. reboot\n2. shutdown -r now 立刻重启(root用户使用)\n3. shutdown -r 10 过10分钟自动重启(root用户使用)\n4. shutdown -r 20:35 在时间为20:35时候重启(root用户使用)\n```\n\n> 如果是通过`shutdown`命令设置重启的话，可以用`shutdown -c`命令取消重启\n\n### 关机命令：\n```\n1. halt   立刻关机\n2. poweroff 立刻关机\n3. shutdown -h now 立刻关机(root用户使用)\n4. shutdown -h 10 10分钟后自动关机\n```\n\n> 如果是通过`shutdown`命令设置关机的话，可以用`shutdown -c`命令取消重启\n\n## 附录2:Linux下各大桌面环境/窗口管理器对比\n\n|桌面环境/窗口管理器\t |RAM used\t| CPU used\t| 类型|\n| ------------- |:-------------:| :-----:| :------:|\n|KDE 4.6\t| 363 MB|\t 4 %\t| 桌面环境|\n|Unity\t| 271 MB|\t 14%\t| 桌面环境(shell)|\n|GNOME 3|\t 193 MB\t| 10%\t|  桌面环境|\n|GNOME 2.x\t |191 MB\t| 1 %|\t 桌面环境|\n|XFCE 4.8\t| 144 MB|\t 10 %\t  |桌面环境|\n|LXDE\t| 85 MB|\t 10 %\t  |桌面环境|\n|IceWM\t| 85 MB|\t 2 %|\t  窗口管理器|\n|Enlightenment (E17 Standard)\t| 72 MB|\t 1 %|\t 窗口管理器|\n|Fluxbox\t| 69 MB|\t 1 %|\t 窗口管理器|\n|OpenBox|\t 60 MB\t| 1 %\t |窗口管理器|\n|JWM\t |58 MB\t |1 %\t| 窗口管理器|\n\n***\n","slug":"ubuntu-server","published":1,"updated":"2017-06-12T12:25:48.561Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3u525bw000yjsurg72udjqb","content":"<blockquote>\n<p>今天偶尔逛某里云发现有个云翼计划， 针对大学生可9.9一个月购买一台ECS，虽然本人已经在某讯搭建有ECS，但鉴于其是Windows Server，特想试试Linux Server的一些花样，话不多说，先买为敬。一个月使用时间，足够我折腾一番。</p>\n</blockquote>\n<p><img src=\"http://7xwh8v.com1.z0.glb.clouddn.com/16-7-18/36478356.jpg\" alt=\"1\"></p>\n<a id=\"more\"></a>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><ul>\n<li>CPU:1核</li>\n<li>内存:1024MB</li>\n<li>带宽:1Mbps(峰值)</li>\n<li>操作系统:Ubuntu 14.04 64位</li>\n</ul>\n<blockquote>\n<p>一个字，渣，也是，便宜没好货。</p>\n</blockquote>\n<p>创建实例成功后，在本地远程连接到服务器一探究竟，显示无法联机。<br>百度后才知道是服务器端没有开启远程连接，无奈之下，只有在阿里控制台先进入服务器</p>\n<h2 id=\"远程连接\"><a href=\"#远程连接\" class=\"headerlink\" title=\"远程连接\"></a>远程连接</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install xrdp</div></pre></td></tr></table></figure>\n<p>在本地输入cmd + mstsc输入账号密码时终于远程连接服务器。</p>\n<p><img src=\"http://7xwh8v.com1.z0.glb.clouddn.com/16-7-18/20632477.jpg\" alt=\"2\"></p>\n<p>命令行实在是不会用，就想安装个图形界面</p>\n<h2 id=\"KUbuntu安装\"><a href=\"#KUbuntu安装\" class=\"headerlink\" title=\"KUbuntu安装\"></a>KUbuntu安装</h2><p>开机后输入图形界面的命令 <code>startx</code>，提示安装<code>xinit</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install xinit</div></pre></td></tr></table></figure>\n<p>安装完后终端由黑色变成了白底黑字，出现X型的鼠标指针</p>\n<p><img src=\"http://7xwh8v.com1.z0.glb.clouddn.com/16-7-18/23562232.jpg\" alt=\"3\"></p>\n<p>安装桌面环境。本人安装的是KUbuntu。安装命令如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install kubuntu-desktop</div></pre></td></tr></table></figure>\n<p><img src=\"http://7xwh8v.com1.z0.glb.clouddn.com/16-7-18/5749201.jpg\" alt=\"4\"></p>\n<p>重启后我们看到了kubuntu界面了,这下我傻眼了，这个界面跟我之前用到的ubuntu看上去差别太大</p>\n<p><img src=\"http://7xwh8v.com1.z0.glb.clouddn.com/16-7-18/84508635.jpg\" alt=\"5\"></p>\n<p>略微体验了一下，<br>但是kde毕竟太(ka)过(cheng)于(gou)炫，</p>\n<h2 id=\"卸载\"><a href=\"#卸载\" class=\"headerlink\" title=\"卸载\"></a>卸载</h2><p>kde的桌面环境的安装包大概有600-700M，还是比较大的，都差不多赶上了一个ubuntu系统大小的一半了，为了节省空间更是决定卸载掉。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get --purge remove libqt3-mt libqtcore4</div></pre></td></tr></table></figure>\n<p>关于开机画面的解决方案</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get autoremove plymouth-theme-kubuntu-logo</div></pre></td></tr></table></figure>\n<p>重启之后，回归黑框框，听说黑框框很装逼，但门道多着呢，继续探索！</p>\n<hr>\n<h2 id=\"附录1-Linux下关机重启命令\"><a href=\"#附录1-Linux下关机重启命令\" class=\"headerlink\" title=\"附录1:Linux下关机重启命令\"></a>附录1:Linux下关机重启命令</h2><h3 id=\"重启命令：\"><a href=\"#重启命令：\" class=\"headerlink\" title=\"重启命令：\"></a>重启命令：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">1. reboot</div><div class=\"line\">2. shutdown -r now 立刻重启(root用户使用)</div><div class=\"line\">3. shutdown -r 10 过10分钟自动重启(root用户使用)</div><div class=\"line\">4. shutdown -r 20:35 在时间为20:35时候重启(root用户使用)</div></pre></td></tr></table></figure>\n<blockquote>\n<p>如果是通过<code>shutdown</code>命令设置重启的话，可以用<code>shutdown -c</code>命令取消重启</p>\n</blockquote>\n<h3 id=\"关机命令：\"><a href=\"#关机命令：\" class=\"headerlink\" title=\"关机命令：\"></a>关机命令：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">1. halt   立刻关机</div><div class=\"line\">2. poweroff 立刻关机</div><div class=\"line\">3. shutdown -h now 立刻关机(root用户使用)</div><div class=\"line\">4. shutdown -h 10 10分钟后自动关机</div></pre></td></tr></table></figure>\n<blockquote>\n<p>如果是通过<code>shutdown</code>命令设置关机的话，可以用<code>shutdown -c</code>命令取消重启</p>\n</blockquote>\n<h2 id=\"附录2-Linux下各大桌面环境-窗口管理器对比\"><a href=\"#附录2-Linux下各大桌面环境-窗口管理器对比\" class=\"headerlink\" title=\"附录2:Linux下各大桌面环境/窗口管理器对比\"></a>附录2:Linux下各大桌面环境/窗口管理器对比</h2><table>\n<thead>\n<tr>\n<th>桌面环境/窗口管理器</th>\n<th style=\"text-align:center\">RAM used</th>\n<th style=\"text-align:center\">CPU used</th>\n<th style=\"text-align:center\">类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>KDE 4.6</td>\n<td style=\"text-align:center\">363 MB</td>\n<td style=\"text-align:center\">4 %</td>\n<td style=\"text-align:center\">桌面环境</td>\n</tr>\n<tr>\n<td>Unity</td>\n<td style=\"text-align:center\">271 MB</td>\n<td style=\"text-align:center\">14%</td>\n<td style=\"text-align:center\">桌面环境(shell)</td>\n</tr>\n<tr>\n<td>GNOME 3</td>\n<td style=\"text-align:center\">193 MB</td>\n<td style=\"text-align:center\">10%</td>\n<td style=\"text-align:center\">桌面环境</td>\n</tr>\n<tr>\n<td>GNOME 2.x</td>\n<td style=\"text-align:center\">191 MB</td>\n<td style=\"text-align:center\">1 %</td>\n<td style=\"text-align:center\">桌面环境</td>\n</tr>\n<tr>\n<td>XFCE 4.8</td>\n<td style=\"text-align:center\">144 MB</td>\n<td style=\"text-align:center\">10 %</td>\n<td style=\"text-align:center\">桌面环境</td>\n</tr>\n<tr>\n<td>LXDE</td>\n<td style=\"text-align:center\">85 MB</td>\n<td style=\"text-align:center\">10 %</td>\n<td style=\"text-align:center\">桌面环境</td>\n</tr>\n<tr>\n<td>IceWM</td>\n<td style=\"text-align:center\">85 MB</td>\n<td style=\"text-align:center\">2 %</td>\n<td style=\"text-align:center\">窗口管理器</td>\n</tr>\n<tr>\n<td>Enlightenment (E17 Standard)</td>\n<td style=\"text-align:center\">72 MB</td>\n<td style=\"text-align:center\">1 %</td>\n<td style=\"text-align:center\">窗口管理器</td>\n</tr>\n<tr>\n<td>Fluxbox</td>\n<td style=\"text-align:center\">69 MB</td>\n<td style=\"text-align:center\">1 %</td>\n<td style=\"text-align:center\">窗口管理器</td>\n</tr>\n<tr>\n<td>OpenBox</td>\n<td style=\"text-align:center\">60 MB</td>\n<td style=\"text-align:center\">1 %</td>\n<td style=\"text-align:center\">窗口管理器</td>\n</tr>\n<tr>\n<td>JWM</td>\n<td style=\"text-align:center\">58 MB</td>\n<td style=\"text-align:center\">1 %</td>\n<td style=\"text-align:center\">窗口管理器</td>\n</tr>\n</tbody>\n</table>\n<hr>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>今天偶尔逛某里云发现有个云翼计划， 针对大学生可9.9一个月购买一台ECS，虽然本人已经在某讯搭建有ECS，但鉴于其是Windows Server，特想试试Linux Server的一些花样，话不多说，先买为敬。一个月使用时间，足够我折腾一番。</p>\n</blockquote>\n<p><img src=\"http://7xwh8v.com1.z0.glb.clouddn.com/16-7-18/36478356.jpg\" alt=\"1\"></p>","more":"<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><ul>\n<li>CPU:1核</li>\n<li>内存:1024MB</li>\n<li>带宽:1Mbps(峰值)</li>\n<li>操作系统:Ubuntu 14.04 64位</li>\n</ul>\n<blockquote>\n<p>一个字，渣，也是，便宜没好货。</p>\n</blockquote>\n<p>创建实例成功后，在本地远程连接到服务器一探究竟，显示无法联机。<br>百度后才知道是服务器端没有开启远程连接，无奈之下，只有在阿里控制台先进入服务器</p>\n<h2 id=\"远程连接\"><a href=\"#远程连接\" class=\"headerlink\" title=\"远程连接\"></a>远程连接</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install xrdp</div></pre></td></tr></table></figure>\n<p>在本地输入cmd + mstsc输入账号密码时终于远程连接服务器。</p>\n<p><img src=\"http://7xwh8v.com1.z0.glb.clouddn.com/16-7-18/20632477.jpg\" alt=\"2\"></p>\n<p>命令行实在是不会用，就想安装个图形界面</p>\n<h2 id=\"KUbuntu安装\"><a href=\"#KUbuntu安装\" class=\"headerlink\" title=\"KUbuntu安装\"></a>KUbuntu安装</h2><p>开机后输入图形界面的命令 <code>startx</code>，提示安装<code>xinit</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install xinit</div></pre></td></tr></table></figure>\n<p>安装完后终端由黑色变成了白底黑字，出现X型的鼠标指针</p>\n<p><img src=\"http://7xwh8v.com1.z0.glb.clouddn.com/16-7-18/23562232.jpg\" alt=\"3\"></p>\n<p>安装桌面环境。本人安装的是KUbuntu。安装命令如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install kubuntu-desktop</div></pre></td></tr></table></figure>\n<p><img src=\"http://7xwh8v.com1.z0.glb.clouddn.com/16-7-18/5749201.jpg\" alt=\"4\"></p>\n<p>重启后我们看到了kubuntu界面了,这下我傻眼了，这个界面跟我之前用到的ubuntu看上去差别太大</p>\n<p><img src=\"http://7xwh8v.com1.z0.glb.clouddn.com/16-7-18/84508635.jpg\" alt=\"5\"></p>\n<p>略微体验了一下，<br>但是kde毕竟太(ka)过(cheng)于(gou)炫，</p>\n<h2 id=\"卸载\"><a href=\"#卸载\" class=\"headerlink\" title=\"卸载\"></a>卸载</h2><p>kde的桌面环境的安装包大概有600-700M，还是比较大的，都差不多赶上了一个ubuntu系统大小的一半了，为了节省空间更是决定卸载掉。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get --purge remove libqt3-mt libqtcore4</div></pre></td></tr></table></figure>\n<p>关于开机画面的解决方案</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get autoremove plymouth-theme-kubuntu-logo</div></pre></td></tr></table></figure>\n<p>重启之后，回归黑框框，听说黑框框很装逼，但门道多着呢，继续探索！</p>\n<hr>\n<h2 id=\"附录1-Linux下关机重启命令\"><a href=\"#附录1-Linux下关机重启命令\" class=\"headerlink\" title=\"附录1:Linux下关机重启命令\"></a>附录1:Linux下关机重启命令</h2><h3 id=\"重启命令：\"><a href=\"#重启命令：\" class=\"headerlink\" title=\"重启命令：\"></a>重启命令：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">1. reboot</div><div class=\"line\">2. shutdown -r now 立刻重启(root用户使用)</div><div class=\"line\">3. shutdown -r 10 过10分钟自动重启(root用户使用)</div><div class=\"line\">4. shutdown -r 20:35 在时间为20:35时候重启(root用户使用)</div></pre></td></tr></table></figure>\n<blockquote>\n<p>如果是通过<code>shutdown</code>命令设置重启的话，可以用<code>shutdown -c</code>命令取消重启</p>\n</blockquote>\n<h3 id=\"关机命令：\"><a href=\"#关机命令：\" class=\"headerlink\" title=\"关机命令：\"></a>关机命令：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">1. halt   立刻关机</div><div class=\"line\">2. poweroff 立刻关机</div><div class=\"line\">3. shutdown -h now 立刻关机(root用户使用)</div><div class=\"line\">4. shutdown -h 10 10分钟后自动关机</div></pre></td></tr></table></figure>\n<blockquote>\n<p>如果是通过<code>shutdown</code>命令设置关机的话，可以用<code>shutdown -c</code>命令取消重启</p>\n</blockquote>\n<h2 id=\"附录2-Linux下各大桌面环境-窗口管理器对比\"><a href=\"#附录2-Linux下各大桌面环境-窗口管理器对比\" class=\"headerlink\" title=\"附录2:Linux下各大桌面环境/窗口管理器对比\"></a>附录2:Linux下各大桌面环境/窗口管理器对比</h2><table>\n<thead>\n<tr>\n<th>桌面环境/窗口管理器</th>\n<th style=\"text-align:center\">RAM used</th>\n<th style=\"text-align:center\">CPU used</th>\n<th style=\"text-align:center\">类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>KDE 4.6</td>\n<td style=\"text-align:center\">363 MB</td>\n<td style=\"text-align:center\">4 %</td>\n<td style=\"text-align:center\">桌面环境</td>\n</tr>\n<tr>\n<td>Unity</td>\n<td style=\"text-align:center\">271 MB</td>\n<td style=\"text-align:center\">14%</td>\n<td style=\"text-align:center\">桌面环境(shell)</td>\n</tr>\n<tr>\n<td>GNOME 3</td>\n<td style=\"text-align:center\">193 MB</td>\n<td style=\"text-align:center\">10%</td>\n<td style=\"text-align:center\">桌面环境</td>\n</tr>\n<tr>\n<td>GNOME 2.x</td>\n<td style=\"text-align:center\">191 MB</td>\n<td style=\"text-align:center\">1 %</td>\n<td style=\"text-align:center\">桌面环境</td>\n</tr>\n<tr>\n<td>XFCE 4.8</td>\n<td style=\"text-align:center\">144 MB</td>\n<td style=\"text-align:center\">10 %</td>\n<td style=\"text-align:center\">桌面环境</td>\n</tr>\n<tr>\n<td>LXDE</td>\n<td style=\"text-align:center\">85 MB</td>\n<td style=\"text-align:center\">10 %</td>\n<td style=\"text-align:center\">桌面环境</td>\n</tr>\n<tr>\n<td>IceWM</td>\n<td style=\"text-align:center\">85 MB</td>\n<td style=\"text-align:center\">2 %</td>\n<td style=\"text-align:center\">窗口管理器</td>\n</tr>\n<tr>\n<td>Enlightenment (E17 Standard)</td>\n<td style=\"text-align:center\">72 MB</td>\n<td style=\"text-align:center\">1 %</td>\n<td style=\"text-align:center\">窗口管理器</td>\n</tr>\n<tr>\n<td>Fluxbox</td>\n<td style=\"text-align:center\">69 MB</td>\n<td style=\"text-align:center\">1 %</td>\n<td style=\"text-align:center\">窗口管理器</td>\n</tr>\n<tr>\n<td>OpenBox</td>\n<td style=\"text-align:center\">60 MB</td>\n<td style=\"text-align:center\">1 %</td>\n<td style=\"text-align:center\">窗口管理器</td>\n</tr>\n<tr>\n<td>JWM</td>\n<td style=\"text-align:center\">58 MB</td>\n<td style=\"text-align:center\">1 %</td>\n<td style=\"text-align:center\">窗口管理器</td>\n</tr>\n</tbody>\n</table>\n<hr>"},{"title":"Windows8/8.1/10安装.NET Framework 3.5","date":"2016-07-19T15:11:24.000Z","_content":"\n> 之前在重装win 10系统后安装Microsoft SQL Server 2012，却提示需要.net framework3.5环境，但是Windows8/8.1/10现在都是默认的4.0，用微软自带的在线安装等了半天进度条根本不动。\n\n<!--more-->\n\n## 安装步骤\n\n1. 先挂载Win8&Win8.1&Win10的镜像(安装系统的那个iso镜像文件,可以使用Daemon虚拟光驱挂载,加载之后注意盘符名称，假设为G)\n\n2. 管理员权限运行命令提示符，方法：``command+X``，找到命令提示符(管理员)，或者``command+R``，输入`cmd`，回车，然后将以下代码复制进命令提示符窗口\n``` bash\nDism /online /enable-feature /featurename:NetFx3 /All /Source:G:\\sources\\sxs /LimitAccess\n```\n\n > 注意:将G:替换成你挂载系统所在的盘符\n","source":"_posts/win10-.net-framwork.md","raw":"---\ntitle: Windows8/8.1/10安装.NET Framework 3.5\ndate: 2016-07-19 23:11:24\ntags: Windows\ncategories: 奇技淫巧\n---\n\n> 之前在重装win 10系统后安装Microsoft SQL Server 2012，却提示需要.net framework3.5环境，但是Windows8/8.1/10现在都是默认的4.0，用微软自带的在线安装等了半天进度条根本不动。\n\n<!--more-->\n\n## 安装步骤\n\n1. 先挂载Win8&Win8.1&Win10的镜像(安装系统的那个iso镜像文件,可以使用Daemon虚拟光驱挂载,加载之后注意盘符名称，假设为G)\n\n2. 管理员权限运行命令提示符，方法：``command+X``，找到命令提示符(管理员)，或者``command+R``，输入`cmd`，回车，然后将以下代码复制进命令提示符窗口\n``` bash\nDism /online /enable-feature /featurename:NetFx3 /All /Source:G:\\sources\\sxs /LimitAccess\n```\n\n > 注意:将G:替换成你挂载系统所在的盘符\n","slug":"win10-.net-framwork","published":1,"updated":"2017-06-12T12:25:48.562Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3u525c30010jsuro51pfdoy","content":"<blockquote>\n<p>之前在重装win 10系统后安装Microsoft SQL Server 2012，却提示需要.net framework3.5环境，但是Windows8/8.1/10现在都是默认的4.0，用微软自带的在线安装等了半天进度条根本不动。</p>\n</blockquote>\n<a id=\"more\"></a>\n<h2 id=\"安装步骤\"><a href=\"#安装步骤\" class=\"headerlink\" title=\"安装步骤\"></a>安装步骤</h2><ol>\n<li><p>先挂载Win8&amp;Win8.1&amp;Win10的镜像(安装系统的那个iso镜像文件,可以使用Daemon虚拟光驱挂载,加载之后注意盘符名称，假设为G)</p>\n</li>\n<li><p>管理员权限运行命令提示符，方法：<code>command+X</code>，找到命令提示符(管理员)，或者<code>command+R</code>，输入<code>cmd</code>，回车，然后将以下代码复制进命令提示符窗口</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Dism /online /<span class=\"built_in\">enable</span>-feature /featurename:NetFx3 /All /Source:G:\\sources\\sxs /LimitAccess</div></pre></td></tr></table></figure>\n<blockquote>\n<p>注意:将G:替换成你挂载系统所在的盘符</p>\n</blockquote>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>之前在重装win 10系统后安装Microsoft SQL Server 2012，却提示需要.net framework3.5环境，但是Windows8/8.1/10现在都是默认的4.0，用微软自带的在线安装等了半天进度条根本不动。</p>\n</blockquote>","more":"<h2 id=\"安装步骤\"><a href=\"#安装步骤\" class=\"headerlink\" title=\"安装步骤\"></a>安装步骤</h2><ol>\n<li><p>先挂载Win8&amp;Win8.1&amp;Win10的镜像(安装系统的那个iso镜像文件,可以使用Daemon虚拟光驱挂载,加载之后注意盘符名称，假设为G)</p>\n</li>\n<li><p>管理员权限运行命令提示符，方法：<code>command+X</code>，找到命令提示符(管理员)，或者<code>command+R</code>，输入<code>cmd</code>，回车，然后将以下代码复制进命令提示符窗口</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Dism /online /<span class=\"built_in\">enable</span>-feature /featurename:NetFx3 /All /Source:G:\\sources\\sxs /LimitAccess</div></pre></td></tr></table></figure>\n<blockquote>\n<p>注意:将G:替换成你挂载系统所在的盘符</p>\n</blockquote>\n</li>\n</ol>"},{"title":"获取指定路径下的文件类型及数量","date":"2016-12-13T12:12:30.000Z","_content":"\nC#实现指定路径，扫描该路径下所有文件，统计文件类型及其对应数量\n\n<!-- more -->\n\n```\nusing System;\nusing System.Collections.Generic;\nusing System.IO;\n\nnamespace FileExtensionScan\n{\n    class Program\n    {\n        Dictionary<String, int> pList = new Dictionary<String, int>(); //字典形式{后缀：数量}\n        int fileNum = 0;\n\n        public void GetFileNum(string srcPath)\n        {\n            try\n            {\n                // 得到源目录的文件列表，该里面是包含文件以及目录路径的一个数组\n                string[] fileList = System.IO.Directory.GetFileSystemEntries(srcPath);\n                // 遍历所有的文件和目录\n                foreach (string file in fileList)\n                {\n                    // 先当作目录处理如果存在这个目录就重新调用GetFileNum(string srcPath)\n                    if (Directory.Exists(file))\n                        GetFileNum(file);\n                    else\n                    {\n                        fileNum++;\n                        string ext = Path.GetExtension(file).ToLower();\n                        if (pList.ContainsKey(ext) == false)\n                            pList.Add(ext, 1);\n                        else\n                            pList[ext]++;\n                    }\n                }\n\n            }\n            catch (Exception e)\n            {\n                Console.WriteLine(e.ToString());\n            }\n        }\n\n        static void Main(string[] args)\n        {\n            Program p = new Program();\n            p.GetFileNum(args[0]); //获取目录路径，第一个命令行参数\n            Console.WriteLine(\"扫描文件数目\" + p.fileNum); //扫描文件总数\n\n            foreach (var dic in p.pList)\n            {\n                Console.WriteLine(\"{0}  {1}\", dic.Key, dic.Value);\n            }\n        }\n    }\n}\n\n```\n","source":"_posts/file-extension-scan.md","raw":"---\ntitle: 获取指定路径下的文件类型及数量\ndate: 2016-12-13 20:12:30\ncategories:\n- 编程笔记\ntags:\n- C#\n---\n\nC#实现指定路径，扫描该路径下所有文件，统计文件类型及其对应数量\n\n<!-- more -->\n\n```\nusing System;\nusing System.Collections.Generic;\nusing System.IO;\n\nnamespace FileExtensionScan\n{\n    class Program\n    {\n        Dictionary<String, int> pList = new Dictionary<String, int>(); //字典形式{后缀：数量}\n        int fileNum = 0;\n\n        public void GetFileNum(string srcPath)\n        {\n            try\n            {\n                // 得到源目录的文件列表，该里面是包含文件以及目录路径的一个数组\n                string[] fileList = System.IO.Directory.GetFileSystemEntries(srcPath);\n                // 遍历所有的文件和目录\n                foreach (string file in fileList)\n                {\n                    // 先当作目录处理如果存在这个目录就重新调用GetFileNum(string srcPath)\n                    if (Directory.Exists(file))\n                        GetFileNum(file);\n                    else\n                    {\n                        fileNum++;\n                        string ext = Path.GetExtension(file).ToLower();\n                        if (pList.ContainsKey(ext) == false)\n                            pList.Add(ext, 1);\n                        else\n                            pList[ext]++;\n                    }\n                }\n\n            }\n            catch (Exception e)\n            {\n                Console.WriteLine(e.ToString());\n            }\n        }\n\n        static void Main(string[] args)\n        {\n            Program p = new Program();\n            p.GetFileNum(args[0]); //获取目录路径，第一个命令行参数\n            Console.WriteLine(\"扫描文件数目\" + p.fileNum); //扫描文件总数\n\n            foreach (var dic in p.pList)\n            {\n                Console.WriteLine(\"{0}  {1}\", dic.Key, dic.Value);\n            }\n        }\n    }\n}\n\n```\n","slug":"file-extension-scan","published":1,"updated":"2017-06-13T10:06:44.491Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3vf8tg30000y0urc0a9dft8","content":"<p>C#实现指定路径，扫描该路径下所有文件，统计文件类型及其对应数量</p>\n<a id=\"more\"></a>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</div><div class=\"line\"><span class=\"keyword\">using</span> System.IO;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">FileExtensionScan</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title\">Program</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        Dictionary&lt;String, <span class=\"keyword\">int</span>&gt; pList = <span class=\"keyword\">new</span> Dictionary&lt;String, <span class=\"keyword\">int</span>&gt;(); <span class=\"comment\">//字典形式&#123;后缀：数量&#125;</span></div><div class=\"line\">        <span class=\"keyword\">int</span> fileNum = <span class=\"number\">0</span>;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">GetFileNum</span>(<span class=\"params\"><span class=\"keyword\">string</span> srcPath</span>)</span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">try</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"comment\">// 得到源目录的文件列表，该里面是包含文件以及目录路径的一个数组</span></div><div class=\"line\">                <span class=\"keyword\">string</span>[] fileList = System.IO.Directory.GetFileSystemEntries(srcPath);</div><div class=\"line\">                <span class=\"comment\">// 遍历所有的文件和目录</span></div><div class=\"line\">                <span class=\"keyword\">foreach</span> (<span class=\"keyword\">string</span> file <span class=\"keyword\">in</span> fileList)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"comment\">// 先当作目录处理如果存在这个目录就重新调用GetFileNum(string srcPath)</span></div><div class=\"line\">                    <span class=\"keyword\">if</span> (Directory.Exists(file))</div><div class=\"line\">                        GetFileNum(file);</div><div class=\"line\">                    <span class=\"keyword\">else</span></div><div class=\"line\">                    &#123;</div><div class=\"line\">                        fileNum++;</div><div class=\"line\">                        <span class=\"keyword\">string</span> ext = Path.GetExtension(file).ToLower();</div><div class=\"line\">                        <span class=\"keyword\">if</span> (pList.ContainsKey(ext) == <span class=\"literal\">false</span>)</div><div class=\"line\">                            pList.Add(ext, <span class=\"number\">1</span>);</div><div class=\"line\">                        <span class=\"keyword\">else</span></div><div class=\"line\">                            pList[ext]++;</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">catch</span> (Exception e)</div><div class=\"line\">            &#123;</div><div class=\"line\">                Console.WriteLine(e.ToString());</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></div><div class=\"line\">        &#123;</div><div class=\"line\">            Program p = <span class=\"keyword\">new</span> Program();</div><div class=\"line\">            p.GetFileNum(args[<span class=\"number\">0</span>]); <span class=\"comment\">//获取目录路径，第一个命令行参数</span></div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"扫描文件数目\"</span> + p.fileNum); <span class=\"comment\">//扫描文件总数</span></div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> dic <span class=\"keyword\">in</span> p.pList)</div><div class=\"line\">            &#123;</div><div class=\"line\">                Console.WriteLine(<span class=\"string\">\"&#123;0&#125;  &#123;1&#125;\"</span>, dic.Key, dic.Value);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>C#实现指定路径，扫描该路径下所有文件，统计文件类型及其对应数量</p>","more":"<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</div><div class=\"line\"><span class=\"keyword\">using</span> System.IO;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">FileExtensionScan</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title\">Program</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        Dictionary&lt;String, <span class=\"keyword\">int</span>&gt; pList = <span class=\"keyword\">new</span> Dictionary&lt;String, <span class=\"keyword\">int</span>&gt;(); <span class=\"comment\">//字典形式&#123;后缀：数量&#125;</span></div><div class=\"line\">        <span class=\"keyword\">int</span> fileNum = <span class=\"number\">0</span>;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">GetFileNum</span>(<span class=\"params\"><span class=\"keyword\">string</span> srcPath</span>)</span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">try</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"comment\">// 得到源目录的文件列表，该里面是包含文件以及目录路径的一个数组</span></div><div class=\"line\">                <span class=\"keyword\">string</span>[] fileList = System.IO.Directory.GetFileSystemEntries(srcPath);</div><div class=\"line\">                <span class=\"comment\">// 遍历所有的文件和目录</span></div><div class=\"line\">                <span class=\"keyword\">foreach</span> (<span class=\"keyword\">string</span> file <span class=\"keyword\">in</span> fileList)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"comment\">// 先当作目录处理如果存在这个目录就重新调用GetFileNum(string srcPath)</span></div><div class=\"line\">                    <span class=\"keyword\">if</span> (Directory.Exists(file))</div><div class=\"line\">                        GetFileNum(file);</div><div class=\"line\">                    <span class=\"keyword\">else</span></div><div class=\"line\">                    &#123;</div><div class=\"line\">                        fileNum++;</div><div class=\"line\">                        <span class=\"keyword\">string</span> ext = Path.GetExtension(file).ToLower();</div><div class=\"line\">                        <span class=\"keyword\">if</span> (pList.ContainsKey(ext) == <span class=\"literal\">false</span>)</div><div class=\"line\">                            pList.Add(ext, <span class=\"number\">1</span>);</div><div class=\"line\">                        <span class=\"keyword\">else</span></div><div class=\"line\">                            pList[ext]++;</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">catch</span> (Exception e)</div><div class=\"line\">            &#123;</div><div class=\"line\">                Console.WriteLine(e.ToString());</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></div><div class=\"line\">        &#123;</div><div class=\"line\">            Program p = <span class=\"keyword\">new</span> Program();</div><div class=\"line\">            p.GetFileNum(args[<span class=\"number\">0</span>]); <span class=\"comment\">//获取目录路径，第一个命令行参数</span></div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"扫描文件数目\"</span> + p.fileNum); <span class=\"comment\">//扫描文件总数</span></div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> dic <span class=\"keyword\">in</span> p.pList)</div><div class=\"line\">            &#123;</div><div class=\"line\">                Console.WriteLine(<span class=\"string\">\"&#123;0&#125;  &#123;1&#125;\"</span>, dic.Key, dic.Value);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[{"post_id":"cj3u525860005jsuryj7o87qm","category_id":"cj3u5257q0002jsurg51rzyjd","_id":"cj3u5258w0008jsur73lpxo3k"},{"post_id":"cj3u525720000jsurhq322f2d","category_id":"cj3u5257q0002jsurg51rzyjd","_id":"cj3u52593000bjsur25fd9qb4"},{"post_id":"cj3u5257h0001jsur54ismzel","category_id":"cj3u5257q0002jsurg51rzyjd","_id":"cj3u52596000djsurn70s06o3"},{"post_id":"cj3u525800004jsuroocykjaq","category_id":"cj3u5257q0002jsurg51rzyjd","_id":"cj3u52599000gjsurc7bppeen"},{"post_id":"cj3u525b3000rjsur5sriktlm","category_id":"cj3u5257q0002jsurg51rzyjd","_id":"cj3u525bv000xjsurnplrxmdv"},{"post_id":"cj3u525bc000tjsurzr8vzqlt","category_id":"cj3u5257q0002jsurg51rzyjd","_id":"cj3u525c3000zjsurybobg2ct"},{"post_id":"cj3u525bo000wjsursuzaqi6i","category_id":"cj3u5257q0002jsurg51rzyjd","_id":"cj3u525c60012jsurt9upr842"},{"post_id":"cj3u525bw000yjsurg72udjqb","category_id":"cj3u5257q0002jsurg51rzyjd","_id":"cj3u525c80015jsurlkalo2ap"},{"post_id":"cj3u525c30010jsuro51pfdoy","category_id":"cj3u525c70014jsurjzuavyq1","_id":"cj3u525ch001bjsurl7t71m4x"},{"post_id":"cj3vf8tg30000y0urc0a9dft8","category_id":"cj3u5257q0002jsurg51rzyjd","_id":"cj3vf8tii0002y0ury8kgbki0"}],"PostTag":[{"post_id":"cj3u525720000jsurhq322f2d","tag_id":"cj3u5257y0003jsurwmonu6q5","_id":"cj3u52595000cjsurvv7ymq24"},{"post_id":"cj3u525720000jsurhq322f2d","tag_id":"cj3u5258t0007jsurj7g1g3in","_id":"cj3u52597000ejsurhtr52nc8"},{"post_id":"cj3u5257h0001jsur54ismzel","tag_id":"cj3u5257y0003jsurwmonu6q5","_id":"cj3u5259b000ijsur3eo67o3i"},{"post_id":"cj3u5257h0001jsur54ismzel","tag_id":"cj3u52598000fjsur2ni5g1yi","_id":"cj3u5259b000jjsurcc9oqooo"},{"post_id":"cj3u525800004jsuroocykjaq","tag_id":"cj3u52599000hjsuredfsnsnz","_id":"cj3u5259f000mjsur7rqwb7aj"},{"post_id":"cj3u525800004jsuroocykjaq","tag_id":"cj3u5259c000kjsurcmknjb8h","_id":"cj3u5259g000njsur8kmt2j4q"},{"post_id":"cj3u525860005jsuryj7o87qm","tag_id":"cj3u5259e000ljsurmjumd91z","_id":"cj3u5259h000ojsurry55jubb"},{"post_id":"cj3u525b3000rjsur5sriktlm","tag_id":"cj3u525bm000vjsurmbkthac3","_id":"cj3u525c70013jsurackablq2"},{"post_id":"cj3u525bc000tjsurzr8vzqlt","tag_id":"cj3u525c50011jsurzl88fm9o","_id":"cj3u525cc0017jsurtbqj2sjn"},{"post_id":"cj3u525bc000tjsurzr8vzqlt","tag_id":"cj3u5259c000kjsurcmknjb8h","_id":"cj3u525ce0018jsurovzsmhn3"},{"post_id":"cj3u525bo000wjsursuzaqi6i","tag_id":"cj3u525bm000vjsurmbkthac3","_id":"cj3u525cf001ajsur467pjv5h"},{"post_id":"cj3u525bw000yjsurg72udjqb","tag_id":"cj3u525ce0019jsur7ycnl9cv","_id":"cj3u525cl001djsur88u8mfru"},{"post_id":"cj3u525c30010jsuro51pfdoy","tag_id":"cj3u525cj001cjsuri0lvsbkt","_id":"cj3u525cm001ejsurqjc7cop6"},{"post_id":"cj3vf8tg30000y0urc0a9dft8","tag_id":"cj3vf8thu0001y0urwh8v9jui","_id":"cj3vf8tik0003y0ur3nhsov79"}],"Tag":[{"name":"Frontend","_id":"cj3u5257y0003jsurwmonu6q5"},{"name":"JavaScript","_id":"cj3u5258t0007jsurj7g1g3in"},{"name":"css","_id":"cj3u52598000fjsur2ni5g1yi"},{"name":"SQL","_id":"cj3u52599000hjsuredfsnsnz"},{"name":"SQL Server","_id":"cj3u5259c000kjsurcmknjb8h"},{"name":"Markdown","_id":"cj3u5259e000ljsurmjumd91z"},{"name":"python","_id":"cj3u525bm000vjsurmbkthac3"},{"name":"php","_id":"cj3u525c50011jsurzl88fm9o"},{"name":"Linux","_id":"cj3u525ce0019jsur7ycnl9cv"},{"name":"Windows","_id":"cj3u525cj001cjsuri0lvsbkt"},{"name":"C#","_id":"cj3vf8thu0001y0urwh8v9jui"}]}}